{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230AngusWG(zza)\u7684\u5c0f\u7ad9 \u00b6 \u6162\u6162\u53d1\u73b0\u5f88\u591a\u4e1c\u897f\u5b58\u5728\u8111\u5b50\u91cc\u4e0d\u9760\u8c31\uff0c \u50cf\u5185\u5b58\u4e00\u6837\uff0c\u65ad\u4e2a\u7535\u5c31\u6ca1\u4e86\uff0c \u6240\u4ee5\u5565\u5c41\u4e8b\u90fd\u4f1a\u5199\u70b9\u4e1c\u897f\u51fa\u6765\uff0c \u54ea\u6015\u4ee5\u540e\u5fd8\u4e86\uff0c\u4e5f\u81f3\u5c11\u6709\u6587\u6863\u8bc1\u660e\u81ea\u5df1\u5f04\u8fc7\u3002 \u53d1\u73b0\u603b\u4f1a\u5199\u51fa\u70b9\u9519\u522b\u5b57\u5565\u7684\uff0c\u5e0c\u671b\u5927\u5bb6\u89c1\u8c05\uff0c\u7ec6\u5fc3\u7684\u8bfb\u8005\u4e00\u5b9a\u80fd\u627e\u5230\u8054\u7cfb\u4f5c\u8005\u7684\u65b9\u5f0f~ \u6700\u8fd1\u66f4\u65b0\u7684\u5e16\u5b50 \u00b6 \u597d\u7269\u5206\u4eab VR\u6e38\u620f\u611f\u60f3 \u5173\u4e8e\u8fdc\u7a0b\u5de5\u4f5c \u97ed\u83dc\u7684\u80a1\u5e02\u7814\u7a76 \u590d\u4e60\u7b14\u8bb0 windows\u4e0a\u7684docker \u5982\u4f55\u6109\u5feb\u7684\u9b42\u7a7f\u5230\u516c\u53f8\u2014\u2014\u5185\u7f51\u8fde\u63a5\u6307\u5357 \u76f8\u5173\u94fe\u63a5 \u00b6 \u6211\u7684Github \u6211\u7684\u539f\u7b80\u4e66\u535a\u5ba2\u5730\u5740 \u672c\u535a\u5ba2\u7684\u9759\u6001\u94fe\u63a5\u5730\u5740-\u65b9\u4fbf\u770b\u6e90\u7801\u8fc7\u6765\u7684\u5c0f\u4f19\u4f34","title":"Home"},{"location":"#anguswgzza","text":"\u6162\u6162\u53d1\u73b0\u5f88\u591a\u4e1c\u897f\u5b58\u5728\u8111\u5b50\u91cc\u4e0d\u9760\u8c31\uff0c \u50cf\u5185\u5b58\u4e00\u6837\uff0c\u65ad\u4e2a\u7535\u5c31\u6ca1\u4e86\uff0c \u6240\u4ee5\u5565\u5c41\u4e8b\u90fd\u4f1a\u5199\u70b9\u4e1c\u897f\u51fa\u6765\uff0c \u54ea\u6015\u4ee5\u540e\u5fd8\u4e86\uff0c\u4e5f\u81f3\u5c11\u6709\u6587\u6863\u8bc1\u660e\u81ea\u5df1\u5f04\u8fc7\u3002 \u53d1\u73b0\u603b\u4f1a\u5199\u51fa\u70b9\u9519\u522b\u5b57\u5565\u7684\uff0c\u5e0c\u671b\u5927\u5bb6\u89c1\u8c05\uff0c\u7ec6\u5fc3\u7684\u8bfb\u8005\u4e00\u5b9a\u80fd\u627e\u5230\u8054\u7cfb\u4f5c\u8005\u7684\u65b9\u5f0f~","title":"\u6b22\u8fce\u6765\u5230AngusWG(zza)\u7684\u5c0f\u7ad9"},{"location":"#_1","text":"\u597d\u7269\u5206\u4eab VR\u6e38\u620f\u611f\u60f3 \u5173\u4e8e\u8fdc\u7a0b\u5de5\u4f5c \u97ed\u83dc\u7684\u80a1\u5e02\u7814\u7a76 \u590d\u4e60\u7b14\u8bb0 windows\u4e0a\u7684docker \u5982\u4f55\u6109\u5feb\u7684\u9b42\u7a7f\u5230\u516c\u53f8\u2014\u2014\u5185\u7f51\u8fde\u63a5\u6307\u5357","title":"\u6700\u8fd1\u66f4\u65b0\u7684\u5e16\u5b50"},{"location":"#_2","text":"\u6211\u7684Github \u6211\u7684\u539f\u7b80\u4e66\u535a\u5ba2\u5730\u5740 \u672c\u535a\u5ba2\u7684\u9759\u6001\u94fe\u63a5\u5730\u5740-\u65b9\u4fbf\u770b\u6e90\u7801\u8fc7\u6765\u7684\u5c0f\u4f19\u4f34","title":"\u76f8\u5173\u94fe\u63a5"},{"location":"about/","text":"\u96f6\u96f6\u788e\u788e \u00b6 \u6c34\u7fa4\u8fde\u63a5 \u00b6 \u559c\u6b22\u52a0\u5bc6\u5212\u6c34\u7684\u670b\u53cb\uff0c\u8fd9\u91cc\u6709\u4e2atg\u7fa4 https://t.me/joinchat/NV4xIhmoUTl6UIeB9\u2013IlA \u559c\u6b22QQ\u5212\u6c34\u7684\u670b\u53cb\uff0c\u8fd9\u91cc\u6709\u4e2aQQ\u7fa4 \u3010\u952e\u76d8\u5b66\u4f1a(323831739)\u3011 \u3002 AND MORE \u00b6 \u90fd\u7ffb\u5230\u5173\u4e8e\u4e86\uff0c\u8bf7\u4f5c\u8005\u559d\u4e2a\u5496\u5561\u628a~","title":"About"},{"location":"about/#_1","text":"","title":"\u96f6\u96f6\u788e\u788e"},{"location":"about/#_2","text":"\u559c\u6b22\u52a0\u5bc6\u5212\u6c34\u7684\u670b\u53cb\uff0c\u8fd9\u91cc\u6709\u4e2atg\u7fa4 https://t.me/joinchat/NV4xIhmoUTl6UIeB9\u2013IlA \u559c\u6b22QQ\u5212\u6c34\u7684\u670b\u53cb\uff0c\u8fd9\u91cc\u6709\u4e2aQQ\u7fa4 \u3010\u952e\u76d8\u5b66\u4f1a(323831739)\u3011 \u3002","title":"\u6c34\u7fa4\u8fde\u63a5"},{"location":"about/#and-more","text":"\u90fd\u7ffb\u5230\u5173\u4e8e\u4e86\uff0c\u8bf7\u4f5c\u8005\u559d\u4e2a\u5496\u5561\u628a~","title":"AND MORE"},{"location":"Python/Python%20Pypi%20Server/","text":"Python Pypi Server \u00b6 \u8f6c\u8f7d\u81ea\u300aPyPI\u6253\u5305\u4e0a\u4f20\u5b9e\u8df5\u300b 1. \u4ee3\u7801\u6253\u5305 \u00b6 \u8981\u6253\u5305\u4ee3\u7801\uff0c\u9996\u5148\u9700\u8981\u7f16\u5199\u81ea\u5df1\u7684\u4ee3\u7801\u5305\u3002\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a.py\u6587\u4ef6\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u51fd\u6570\u5565\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8c03\u7528\uff0c\u4f60\u9700\u8981\u5c06\u4ee3\u7801\u6253\u5305\uff0c\u4e0b\u6b21\u4f7f\u7528\u65f6\u76f4\u63a5\u8c03\u7528\u5c31\u597d\uff0c\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\uff0c\u5c06\u4f60\u5199\u7684\u4ee3\u7801\u6253\u5305\u3002 \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efa __init__.py \u6587\u4ef6\uff0c\u7136\u540e\u5c06\u4f60\u5199\u7684.py\u6587\u4ef6\u653e\u5230\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u9762\u5c31\u884c\u3002 packagename/ | +-- __init__.py | +-- myfunction.py | +-- mymorefunction.py | +-- ... | packagename \u4e3a\u4f60\u521b\u5efa\u7684\u5305\u540d\u79f0\uff0c myxxx.py \u662f\u4f60\u5199\u7684python\u4ee3\u7801\uff0c\u8fd8\u6709\u6dfb\u52a0\u4e2a __init__.py \u6587\u4ef6\uff08\u6587\u4ef6\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a\uff09. \u73b0\u5728\u4f60\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5305\u4e86(\u5f15\u5165\u5305\u7684\u8def\u5f84) import packagename 2. \u7b26\u5408pypi\u7684\u683c\u5f0f \u00b6 \u5c06\u4e0a\u9762\u7684\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6539\u6210\u5982\u4e0b\u683c\u5f0f packagename | +-- COPYING.txt | +-- README.rst | +-- setup.py | +-- packagename . | . +-- __init__.py . | . +-- myscripts1.py . | . +-- mysscripts2.py . | . +-- mymorescripts.py . | . | +-- docs/ | \u5c31\u662f\u5c06\u539f\u6765\u7684\u76ee\u5f55\u6df1\u79fb\u4e00\u5c42\uff0c\u6587\u4ef6\u5939\u7684\u540d\u79f0\u4e00\u6837\u5373\u53ef\u3002\u5728\u7b2c\u4e00\u5c42\u76ee\u5f55\u4e0b\u521b\u5efa\u4e9b\u7279\u6b8a\u6587\u4ef6\u3002 Tips COPYING.txt : \u53ef\u4ee5\u4e0d\u8981\uff08\u8282\u7ea6\u65f6\u95f4\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u5148\u8bf4\u3001\u7b80\u5355\u8bf4\uff09\u3002 \u5c31\u662f\u6388\u6743\u6587\u4ef6\uff0c\u91cc\u9762\u662f\u4f60\u5173\u4e8e\u8fd9\u4e2a\u5305\u7684\u6388\u6743\uff0c\u6bd4\u5982\uff1aMIT license\uff0c\u90a3\u4e48\u4f60\u91cc\u9762\u653e\u5165MIT License\u5168\u6587\u5373\u53ef\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4f60\u4e0d\u6e05\u695a\u8fd9\u4e2a\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u4e0d\u8981\u8fd9\u4e2a\u6587\u4ef6\u3002 README.rst\uff1a \u5c31\u662f\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u4e0d\u8981\u5427\uff08\u4e0d\u63a8\u8350\uff0c\u8981\u662f\u60f3\u8ba9\u5927\u5bb6\u7528\u7684\u8bdd\u8fd8\u662f\u597d\u597d\u5199\u4e00\u5199\uff09 \u8fd9\u4e2a\u6587\u4ef6\u60f3\u5fc5\u7814\u53d1\u90fd\u5e94\u8be5\u6e05\u695a\u3002\u5982\u679c\u6709\uff0c\u5c3d\u91cf\u653e\u4e9b\u4e1c\u897f\u5728\u8fd9\u91cc\u4e86\uff0c\u540e\u9762\u5982\u679c\u53ef\u80fd\u6211\u4eec\u4f1a\u7528\u5230\u5b83\u7684\u3002 setup.py\uff1a \u6838\u5fc3\u6587\u4ef6 \u8fd9\u91cc\u9762\u7684\u5185\u5bb9\u540e\u9762\u8bb2 docs/\uff08\u8fd9\u662f\u4e2a\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u4e00\u4e9b\u6587\u6863\u7684\uff09 \u8fd9\u4e2a\u6587\u4ef6\u5939\u4f60\u653e\u4f60\u7684documents\u5427\uff0c\u4e0d\u8fc7\u8981\u7528\u5fc3\u5199\u6587\u6863\u771f\u662f\u4e2a\u96be\u4e8b\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6587\u4ef6\u5939\u57fa\u672c\u662f\u4e0d\u5b58\u5728\u7684\u2014\u2014\u4e3a\u81ea\u5df1\u7684\u61d2\u60f0\u53ef\u803b\u4e00\u628a\u3002 setup.py \u7684\u6837\u4f8b # coding: utf-8 import codecs import os import sys try: from setuptools import setup except: from distutils.core import setup \"\"\" \u6253\u5305\u7684\u7528\u7684setup\u5fc5\u987b\u5f15\u5165\uff0c \"\"\" #!/usr/bin/env python # -*- coding: utf-8 -*- import sys if sys.version_info < (2, 5): sys.exit('Python 2.5 or greater is required.') try: from setuptools import setup except ImportError: from distutils.core import setup import SendMoney with open('README.rst', 'rb') as fp: readme = fp.read() # \u7248\u672c\u53f7\uff0c\u81ea\u5df1\u968f\u4fbf\u5199 VERSION = \"1.0.7\" LICENSE = \"MIT\" setup( name='<\u9879\u76ee\u7684\u540d\u79f0>', version=VERSION, description=( '<\u9879\u76ee\u7684\u7b80\u5355\u63cf\u8ff0>' ), long_description=readme, author='<\u4f60\u7684\u540d\u5b57>', author_email='<\u4f60\u7684\u90ae\u4ef6\u5730\u5740>', maintainer='<\u7ef4\u62a4\u4eba\u5458\u7684\u540d\u5b57>', maintainer_email='<\u7ef4\u62a4\u4eba\u5458\u7684\u90ae\u4ef6\u5730\u5740', license=LICENSE, packages=find_packages(), platforms=[\"all\"], url='<\u9879\u76ee\u7684\u7f51\u5740\uff0c\u6211\u4e00\u822c\u90fd\u662fgithub\u7684url>', install_requires=[ \"beautifulsoup4\", lxml_requirement ], classifiers=[ 'Development Status :: 4 - Beta', 'Operating System :: OS Independent', 'Intended Audience :: Developers', 'License :: OSI Approved :: BSD License', 'Programming Language :: Python', 'Programming Language :: Python :: Implementation', 'Programming Language :: Python :: 2', 'Programming Language :: Python :: 2.7', 'Programming Language :: Python :: 3', 'Programming Language :: Python :: 3.4', 'Programming Language :: Python :: 3.5', 'Programming Language :: Python :: 3.6', 'Topic :: Software Development :: Libraries' ], ) # URL \u4f60\u8fd9\u4e2a\u5305\u7684\u9879\u76ee\u5730\u5740\uff0c\u5982\u679c\u6709\uff0c\u7ed9\u4e00\u4e2a\u5427\uff0c\u6ca1\u6709\u4f60\u76f4\u63a5\u586b\u5199\u5728PyPI\u4f60\u8fd9\u4e2a\u5305\u7684\u5730\u5740\u4e5f\u662f\u53ef\u4ee5\u7684 # INSTALL_REQUIRES \u6a21\u5757\u6240\u4f9d\u8d56\u7684python\u6a21\u5757 # \u4ee5\u4e0a\u5b57\u6bb5\u4e0d\u9700\u8981\u90fd\u5305\u542b \u6587\u4e2d\u7684classifiers\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u968f\u4fbf\u586b\u5199\u7684\uff0c\u4f60\u9700\u8981\u53c2\u7167\u672c\u6587\u53c2\u8003\u6587\u6863\u4e2d\u7684PyPI Classifiers\u6765\u5199 3\u3001\u5f00\u59cb\u4f7f\u7528Distutils\u8fdb\u884c\u6253\u5305 \u00b6 \u4e3a\u4e86\u4fdd\u8bc1\u6548\u679c\uff0c\u5728\u6253\u5305\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1setup.py\u7684\u6b63\u786e\u6027\uff0c\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801 python setup.py check \u8f93\u51fa\u4e00\u822c\u662frunning check \u5982\u679c\u6709\u9519\u8bef\u6216\u8005\u8b66\u544a\uff0c\u5c31\u4f1a\u5728\u6b64\u4e4b\u540e\u663e\u793a \u6ca1\u6709\u4efb\u4f55\u663e\u793a\u8868\u793aDistutils\u8ba4\u53ef\u4f60\u8fd9\u4e2asetup.py\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6b63\u5f0f\u6253\u5305\uff0c\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a python setup.py sdist \u6267\u884c\u5b8c\u6210\u540e\uff0c\u4f1a\u5728\u9876\u5c42\u76ee\u5f55\u4e0b\u751f\u6210dist\u76ee\u5f55\u548cegg\u76ee\u5f55 \u6253\u5305\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u51c6\u5907\u5c06\u6253\u5305\u597d\u7684\u6a21\u5757\u4e0a\u4f20\u5230pypi\u4e86\uff0c\u9996\u5148\u4f60\u9700\u8981\u5728 pypi \u4e0a\u8fdb\u884c\u6ce8\u518c \u6ce8\u518c\u5b8c\u6210\u540e\uff0c\u4f60\u9700\u8981\u5728\u672c\u5730\u521b\u5efa\u597dpypi\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4f7f\u7528http\u65e0\u6cd5\u4e0a\u4f20\u5230pypi\u7684\u95ee\u9898 \u5728\u7528\u6237\u76ee\u5f55\u4e0b\u521b\u5efa.pypirc\u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b window\u7528\u6237\u521b\u5efa .pypirc \u53ef\u4ee5\u547d\u540d\u4e3a .pypirc. \u4f4d\u7f6e\u793a\u4f8b\uff1a C:\\Users\\admin\\.pypirc. [distutils] index-servers=pypi [pypi] repository = https://upload.pypi.org/legacy/ username = <username> password = <password> \u5b8c\u6210\u540e\u8fd0\u884c\uff1a python setup.py register sdist upload \u6700\u540e\u51fa\u73b0 Server response (200): OK \u5c31\u662f\u6210\u529f\u4e86\uff0c\u53ef\u4ee5\u53bbpypi\u4e0a\u67e5\u770b\u81ea\u5df1\u53d1\u5e03\u7684\u5305 \u5305\u5230\u8fd9\u91cc\uff0c\u5c31\u5b8c\u6210\u4e86\u4e0a\u4f20PyPI\u7684\u5de5\u4f5c\u4e86\u3002\u4f60\u5982\u679c\u8981\u7528\uff0c\u5b89\u88c5\u4e0b\u5c31\u597d\uff1a pip install packagename \u8fd9\u4e2a\u8fc7\u7a0b\u8fd8\u662f\u5f88\u987a\u5229\u7684\uff0c\u4ee5\u540e\u591a\u5c1d\u8bd5\uff0c\u51fa\u73b0\u95ee\u9898\u518d\u8865\u5145\uff01 \u4f5c\u8005\uff1asnowy_sunny \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/be91c70adb27","title":"Python Pypi Server"},{"location":"Python/Python%20Pypi%20Server/#python-pypi-server","text":"\u8f6c\u8f7d\u81ea\u300aPyPI\u6253\u5305\u4e0a\u4f20\u5b9e\u8df5\u300b","title":"Python Pypi Server"},{"location":"Python/Python%20Pypi%20Server/#1","text":"\u8981\u6253\u5305\u4ee3\u7801\uff0c\u9996\u5148\u9700\u8981\u7f16\u5199\u81ea\u5df1\u7684\u4ee3\u7801\u5305\u3002\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a.py\u6587\u4ef6\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u51fd\u6570\u5565\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8c03\u7528\uff0c\u4f60\u9700\u8981\u5c06\u4ee3\u7801\u6253\u5305\uff0c\u4e0b\u6b21\u4f7f\u7528\u65f6\u76f4\u63a5\u8c03\u7528\u5c31\u597d\uff0c\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\uff0c\u5c06\u4f60\u5199\u7684\u4ee3\u7801\u6253\u5305\u3002 \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efa __init__.py \u6587\u4ef6\uff0c\u7136\u540e\u5c06\u4f60\u5199\u7684.py\u6587\u4ef6\u653e\u5230\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u9762\u5c31\u884c\u3002 packagename/ | +-- __init__.py | +-- myfunction.py | +-- mymorefunction.py | +-- ... | packagename \u4e3a\u4f60\u521b\u5efa\u7684\u5305\u540d\u79f0\uff0c myxxx.py \u662f\u4f60\u5199\u7684python\u4ee3\u7801\uff0c\u8fd8\u6709\u6dfb\u52a0\u4e2a __init__.py \u6587\u4ef6\uff08\u6587\u4ef6\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a\uff09. \u73b0\u5728\u4f60\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5305\u4e86(\u5f15\u5165\u5305\u7684\u8def\u5f84) import packagename","title":"1. \u4ee3\u7801\u6253\u5305"},{"location":"Python/Python%20Pypi%20Server/#2-pypi","text":"\u5c06\u4e0a\u9762\u7684\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6539\u6210\u5982\u4e0b\u683c\u5f0f packagename | +-- COPYING.txt | +-- README.rst | +-- setup.py | +-- packagename . | . +-- __init__.py . | . +-- myscripts1.py . | . +-- mysscripts2.py . | . +-- mymorescripts.py . | . | +-- docs/ | \u5c31\u662f\u5c06\u539f\u6765\u7684\u76ee\u5f55\u6df1\u79fb\u4e00\u5c42\uff0c\u6587\u4ef6\u5939\u7684\u540d\u79f0\u4e00\u6837\u5373\u53ef\u3002\u5728\u7b2c\u4e00\u5c42\u76ee\u5f55\u4e0b\u521b\u5efa\u4e9b\u7279\u6b8a\u6587\u4ef6\u3002 Tips COPYING.txt : \u53ef\u4ee5\u4e0d\u8981\uff08\u8282\u7ea6\u65f6\u95f4\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u5148\u8bf4\u3001\u7b80\u5355\u8bf4\uff09\u3002 \u5c31\u662f\u6388\u6743\u6587\u4ef6\uff0c\u91cc\u9762\u662f\u4f60\u5173\u4e8e\u8fd9\u4e2a\u5305\u7684\u6388\u6743\uff0c\u6bd4\u5982\uff1aMIT license\uff0c\u90a3\u4e48\u4f60\u91cc\u9762\u653e\u5165MIT License\u5168\u6587\u5373\u53ef\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4f60\u4e0d\u6e05\u695a\u8fd9\u4e2a\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u4e0d\u8981\u8fd9\u4e2a\u6587\u4ef6\u3002 README.rst\uff1a \u5c31\u662f\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u4e0d\u8981\u5427\uff08\u4e0d\u63a8\u8350\uff0c\u8981\u662f\u60f3\u8ba9\u5927\u5bb6\u7528\u7684\u8bdd\u8fd8\u662f\u597d\u597d\u5199\u4e00\u5199\uff09 \u8fd9\u4e2a\u6587\u4ef6\u60f3\u5fc5\u7814\u53d1\u90fd\u5e94\u8be5\u6e05\u695a\u3002\u5982\u679c\u6709\uff0c\u5c3d\u91cf\u653e\u4e9b\u4e1c\u897f\u5728\u8fd9\u91cc\u4e86\uff0c\u540e\u9762\u5982\u679c\u53ef\u80fd\u6211\u4eec\u4f1a\u7528\u5230\u5b83\u7684\u3002 setup.py\uff1a \u6838\u5fc3\u6587\u4ef6 \u8fd9\u91cc\u9762\u7684\u5185\u5bb9\u540e\u9762\u8bb2 docs/\uff08\u8fd9\u662f\u4e2a\u6587\u4ef6\u5939\uff0c\u5b58\u653e\u4e00\u4e9b\u6587\u6863\u7684\uff09 \u8fd9\u4e2a\u6587\u4ef6\u5939\u4f60\u653e\u4f60\u7684documents\u5427\uff0c\u4e0d\u8fc7\u8981\u7528\u5fc3\u5199\u6587\u6863\u771f\u662f\u4e2a\u96be\u4e8b\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6587\u4ef6\u5939\u57fa\u672c\u662f\u4e0d\u5b58\u5728\u7684\u2014\u2014\u4e3a\u81ea\u5df1\u7684\u61d2\u60f0\u53ef\u803b\u4e00\u628a\u3002 setup.py \u7684\u6837\u4f8b # coding: utf-8 import codecs import os import sys try: from setuptools import setup except: from distutils.core import setup \"\"\" \u6253\u5305\u7684\u7528\u7684setup\u5fc5\u987b\u5f15\u5165\uff0c \"\"\" #!/usr/bin/env python # -*- coding: utf-8 -*- import sys if sys.version_info < (2, 5): sys.exit('Python 2.5 or greater is required.') try: from setuptools import setup except ImportError: from distutils.core import setup import SendMoney with open('README.rst', 'rb') as fp: readme = fp.read() # \u7248\u672c\u53f7\uff0c\u81ea\u5df1\u968f\u4fbf\u5199 VERSION = \"1.0.7\" LICENSE = \"MIT\" setup( name='<\u9879\u76ee\u7684\u540d\u79f0>', version=VERSION, description=( '<\u9879\u76ee\u7684\u7b80\u5355\u63cf\u8ff0>' ), long_description=readme, author='<\u4f60\u7684\u540d\u5b57>', author_email='<\u4f60\u7684\u90ae\u4ef6\u5730\u5740>', maintainer='<\u7ef4\u62a4\u4eba\u5458\u7684\u540d\u5b57>', maintainer_email='<\u7ef4\u62a4\u4eba\u5458\u7684\u90ae\u4ef6\u5730\u5740', license=LICENSE, packages=find_packages(), platforms=[\"all\"], url='<\u9879\u76ee\u7684\u7f51\u5740\uff0c\u6211\u4e00\u822c\u90fd\u662fgithub\u7684url>', install_requires=[ \"beautifulsoup4\", lxml_requirement ], classifiers=[ 'Development Status :: 4 - Beta', 'Operating System :: OS Independent', 'Intended Audience :: Developers', 'License :: OSI Approved :: BSD License', 'Programming Language :: Python', 'Programming Language :: Python :: Implementation', 'Programming Language :: Python :: 2', 'Programming Language :: Python :: 2.7', 'Programming Language :: Python :: 3', 'Programming Language :: Python :: 3.4', 'Programming Language :: Python :: 3.5', 'Programming Language :: Python :: 3.6', 'Topic :: Software Development :: Libraries' ], ) # URL \u4f60\u8fd9\u4e2a\u5305\u7684\u9879\u76ee\u5730\u5740\uff0c\u5982\u679c\u6709\uff0c\u7ed9\u4e00\u4e2a\u5427\uff0c\u6ca1\u6709\u4f60\u76f4\u63a5\u586b\u5199\u5728PyPI\u4f60\u8fd9\u4e2a\u5305\u7684\u5730\u5740\u4e5f\u662f\u53ef\u4ee5\u7684 # INSTALL_REQUIRES \u6a21\u5757\u6240\u4f9d\u8d56\u7684python\u6a21\u5757 # \u4ee5\u4e0a\u5b57\u6bb5\u4e0d\u9700\u8981\u90fd\u5305\u542b \u6587\u4e2d\u7684classifiers\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u968f\u4fbf\u586b\u5199\u7684\uff0c\u4f60\u9700\u8981\u53c2\u7167\u672c\u6587\u53c2\u8003\u6587\u6863\u4e2d\u7684PyPI Classifiers\u6765\u5199","title":"2. \u7b26\u5408pypi\u7684\u683c\u5f0f"},{"location":"Python/Python%20Pypi%20Server/#3distutils","text":"\u4e3a\u4e86\u4fdd\u8bc1\u6548\u679c\uff0c\u5728\u6253\u5305\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1setup.py\u7684\u6b63\u786e\u6027\uff0c\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801 python setup.py check \u8f93\u51fa\u4e00\u822c\u662frunning check \u5982\u679c\u6709\u9519\u8bef\u6216\u8005\u8b66\u544a\uff0c\u5c31\u4f1a\u5728\u6b64\u4e4b\u540e\u663e\u793a \u6ca1\u6709\u4efb\u4f55\u663e\u793a\u8868\u793aDistutils\u8ba4\u53ef\u4f60\u8fd9\u4e2asetup.py\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6b63\u5f0f\u6253\u5305\uff0c\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a python setup.py sdist \u6267\u884c\u5b8c\u6210\u540e\uff0c\u4f1a\u5728\u9876\u5c42\u76ee\u5f55\u4e0b\u751f\u6210dist\u76ee\u5f55\u548cegg\u76ee\u5f55 \u6253\u5305\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u51c6\u5907\u5c06\u6253\u5305\u597d\u7684\u6a21\u5757\u4e0a\u4f20\u5230pypi\u4e86\uff0c\u9996\u5148\u4f60\u9700\u8981\u5728 pypi \u4e0a\u8fdb\u884c\u6ce8\u518c \u6ce8\u518c\u5b8c\u6210\u540e\uff0c\u4f60\u9700\u8981\u5728\u672c\u5730\u521b\u5efa\u597dpypi\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4f7f\u7528http\u65e0\u6cd5\u4e0a\u4f20\u5230pypi\u7684\u95ee\u9898 \u5728\u7528\u6237\u76ee\u5f55\u4e0b\u521b\u5efa.pypirc\u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b window\u7528\u6237\u521b\u5efa .pypirc \u53ef\u4ee5\u547d\u540d\u4e3a .pypirc. \u4f4d\u7f6e\u793a\u4f8b\uff1a C:\\Users\\admin\\.pypirc. [distutils] index-servers=pypi [pypi] repository = https://upload.pypi.org/legacy/ username = <username> password = <password> \u5b8c\u6210\u540e\u8fd0\u884c\uff1a python setup.py register sdist upload \u6700\u540e\u51fa\u73b0 Server response (200): OK \u5c31\u662f\u6210\u529f\u4e86\uff0c\u53ef\u4ee5\u53bbpypi\u4e0a\u67e5\u770b\u81ea\u5df1\u53d1\u5e03\u7684\u5305 \u5305\u5230\u8fd9\u91cc\uff0c\u5c31\u5b8c\u6210\u4e86\u4e0a\u4f20PyPI\u7684\u5de5\u4f5c\u4e86\u3002\u4f60\u5982\u679c\u8981\u7528\uff0c\u5b89\u88c5\u4e0b\u5c31\u597d\uff1a pip install packagename \u8fd9\u4e2a\u8fc7\u7a0b\u8fd8\u662f\u5f88\u987a\u5229\u7684\uff0c\u4ee5\u540e\u591a\u5c1d\u8bd5\uff0c\u51fa\u73b0\u95ee\u9898\u518d\u8865\u5145\uff01 \u4f5c\u8005\uff1asnowy_sunny \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/be91c70adb27","title":"3\u3001\u5f00\u59cb\u4f7f\u7528Distutils\u8fdb\u884c\u6253\u5305"},{"location":"Python/flask_admin%20csv%20%E5%AF%BC%E5%87%BA%20%20%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/","text":"flask_admin csv \u5bfc\u51fa \u4e2d\u6587\u4e71\u7801\u95ee\u9898 \u00b6 \u76f8\u5173\u53c2\u8003 python\u4e2d\u6587\u5199\u5165CSV\u4e71\u7801\u89e3\u51b3 \u539f\u56e0\uff1acsv\u6587\u4ef6\u5f00\u5934\u7f3a\u5c11BOM_UTF8 \u5b57\u7b26 \u89e3\u51b3\uff1a\u5728Response\u5f00\u5934\u52a0\u4e0aBOM_UTF8\u5b57\u7b26 * \u6838\u5fc3\u4ee3\u7801 titles[0] = codecs.BOM_UTF8.decode(\"utf8\")+codecs.BOM_UTF8.decode()+titles[0] \u76f8\u5173\u5f15\u5165 import codecs import csv from flask_admin._compat import csv_encode from flask import request, redirect, flash, current_app, Response, stream_with_context \u903b\u8f91\u4ee3\u7801\uff08\u590d\u5236 \u653e\u5230\u5bf9\u5e94\u7684 ModelView \u7c7b\u91cc\u5c31\u597d\u4e86\uff09 def _export_csv(self, return_url): \"\"\" Export a CSV of records as a stream. \"\"\" count, data = self._export_data() # https://docs.djangoproject.com/en/1.8/howto/outputting-csv/ class Echo(object): \"\"\" An object that implements just the write method of the file-like interface. \"\"\" def write(self, value): \"\"\" Write the value by returning it, instead of storing in a buffer. \"\"\" return value # writer = csv.writer(Echo()) def generate(): # Append the column titles at the beginning titles = [csv_encode(c[1]) for c in self._export_columns] titles[0] = codecs.BOM_UTF8.decode(\"utf8\")+codecs.BOM_UTF8.decode()+titles[0] yield writer.writerow(titles) for row in data: vals = [csv_encode(self.get_export_value(row, c[0])) for c in self._export_columns] yield writer.writerow(vals) filename = self.get_export_name(export_type='csv') disposition = 'attachment;filename=%s' % (secure_filename(filename),) return Response( stream_with_context(generate()), headers={'Content-Disposition': disposition}, mimetype='text/csv' )","title":"flask_admin csv \u5bfc\u51fa  \u4e2d\u6587\u4e71\u7801\u95ee\u9898"},{"location":"Python/flask_admin%20csv%20%E5%AF%BC%E5%87%BA%20%20%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/#flask_admin-csv","text":"\u76f8\u5173\u53c2\u8003 python\u4e2d\u6587\u5199\u5165CSV\u4e71\u7801\u89e3\u51b3 \u539f\u56e0\uff1acsv\u6587\u4ef6\u5f00\u5934\u7f3a\u5c11BOM_UTF8 \u5b57\u7b26 \u89e3\u51b3\uff1a\u5728Response\u5f00\u5934\u52a0\u4e0aBOM_UTF8\u5b57\u7b26 * \u6838\u5fc3\u4ee3\u7801 titles[0] = codecs.BOM_UTF8.decode(\"utf8\")+codecs.BOM_UTF8.decode()+titles[0] \u76f8\u5173\u5f15\u5165 import codecs import csv from flask_admin._compat import csv_encode from flask import request, redirect, flash, current_app, Response, stream_with_context \u903b\u8f91\u4ee3\u7801\uff08\u590d\u5236 \u653e\u5230\u5bf9\u5e94\u7684 ModelView \u7c7b\u91cc\u5c31\u597d\u4e86\uff09 def _export_csv(self, return_url): \"\"\" Export a CSV of records as a stream. \"\"\" count, data = self._export_data() # https://docs.djangoproject.com/en/1.8/howto/outputting-csv/ class Echo(object): \"\"\" An object that implements just the write method of the file-like interface. \"\"\" def write(self, value): \"\"\" Write the value by returning it, instead of storing in a buffer. \"\"\" return value # writer = csv.writer(Echo()) def generate(): # Append the column titles at the beginning titles = [csv_encode(c[1]) for c in self._export_columns] titles[0] = codecs.BOM_UTF8.decode(\"utf8\")+codecs.BOM_UTF8.decode()+titles[0] yield writer.writerow(titles) for row in data: vals = [csv_encode(self.get_export_value(row, c[0])) for c in self._export_columns] yield writer.writerow(vals) filename = self.get_export_name(export_type='csv') disposition = 'attachment;filename=%s' % (secure_filename(filename),) return Response( stream_with_context(generate()), headers={'Content-Disposition': disposition}, mimetype='text/csv' )","title":"flask_admin csv \u5bfc\u51fa  \u4e2d\u6587\u4e71\u7801\u95ee\u9898"},{"location":"Python/flask_admin%20%E4%B8%BB%E9%A1%B5%E6%94%AF%E6%8C%81markdown%E5%86%99%E5%85%A5/","text":"flask_admin \u4e3b\u9875\u652f\u6301markdown\u5199\u5165 \u00b6 \u4eba\u6bd4\u8f83\u61d2 \uff0c\u770b\u4e0d\u61c2\u8bc4\u8bba\u544a\u8bc9\u6211\u54c8 vim view_markdown_index.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/3/26 15:37 # @author : zza # @Email : 740713651@qq.com # @File : readme_helper.py import datetime import os from shutil import copyfile import markdown import markdown.extensions.fenced_code from flask import flash, redirect, request, send_from_directory from flask_admin import AdminIndexView, expose from pygments.formatters.html import HtmlFormatter from werkzeug.utils import secure_filename formatter = HtmlFormatter(style=\"emacs\", full=True, cssclass=\"codehilite\") css_string = formatter.get_style_defs() class MarkdownIndexView(AdminIndexView): @expose() def index(self): \"\"\"\u83b7\u53d6readme\u6587\u4ef6\u4f5c\u4e3aindex\u9875\u9762\u5e2e\u52a9\u6587\u6863 copy from https://github.com/solitudenote/gitkeeper/blob/d42f5990b05cf28cee12f20780e7794cd3579ead/app.py \"\"\" # get file readme_file = open(\"README.md\", \"r\", encoding=\"utf8\") md_template_string = markdown.markdown(readme_file.read(), extensions=[\"fenced_code\", \"codehilite\"]) md_css_string = \"<style>\" + css_string + \"</style>\" md_template = md_css_string + md_template_string return self.render(self._template, readme_md=md_template, upload_readme_url=\"/admin/upload_form\") @expose('/upload_form', methods=['POST']) def upload_file(self): # check if the post request has the file part if 'file' not in request.files: flash('No file part') return redirect('/admin/') file = request.files['file'] if file.filename == '': flash('No file selected for uploading') return redirect('/admin/') if file and file.filename == \"README.md\": bak_file = \"README.md\" + \".{}.bak\".format(datetime.datetime.now().isoformat()).replace(\":\", \"-\") copyfile(\"README.md\", bak_file) filename = secure_filename(file.filename) file.save(filename) flash('README.md\u4e0a\u4f20\u6210\u529f') return redirect('/admin/') else: flash('\u6587\u4ef6\u540d\u5fc5\u987b\u4e3aREADME.md') return redirect('/admin/') @expose('/export') def export(self): return send_from_directory(os.path.abspath(\".\"), \"README.md\", as_attachment=True) # as_a admin_index_view = MarkdownIndexView(name=\"\u4e3b\u9875\", template=\"index.html\") vim index.html {% extends 'admin/index.html' %} {% block page_body %} {{ super() }} <table class=\"markdown-table table-hover searchable\"> <tr> <td> <a href=\"{{ get_url('.export') }}\" title=\"{{ _gettext('Export') }}\">{{ _gettext('Export') + ' ' + export_type|upper }}</a> </td> <form id=\"form\" method=\"post\" action={{ upload_readme_url }} enctype=\"multipart/form-data\"> <td> <label class=\"input-file\"> <a title=\"{{ _gettext('Import') }}\"> {{ _gettext('Import') }} </a> <input type=\"file\" name=\"file\" id=\"upload-file\" autocomplete=\"off\" hidden required> </label> </td> </form> </tr> </table> <br> <hr/> <script> let __main = function () { document.getElementById(\"upload-file\").onchange = function () { document.getElementById(\"form\").submit(); }; } __main() </script> {{ readme_md|safe }} <style> .markdown-table { width: 200px; float: right; } .markdown-table label { font-weight: normal; } [hidden] { display: none !important; } </style> {% endblock %} vim app,py from view_markdown_index import admin_index_view from flask import Flask app = Flask(__name__) admin_view = Admin( app, template_mode='bootstrap3', index_view=admin_index_view, base_template=r'layout.html', category_icon_classes={'Profiles': 'glyphicon glyphicon-wrench'}, ) if __name__ == '__main__': app.run()","title":"flask_admin \u4e3b\u9875\u652f\u6301markdown\u5199\u5165"},{"location":"Python/flask_admin%20%E4%B8%BB%E9%A1%B5%E6%94%AF%E6%8C%81markdown%E5%86%99%E5%85%A5/#flask_admin-markdown","text":"\u4eba\u6bd4\u8f83\u61d2 \uff0c\u770b\u4e0d\u61c2\u8bc4\u8bba\u544a\u8bc9\u6211\u54c8 vim view_markdown_index.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/3/26 15:37 # @author : zza # @Email : 740713651@qq.com # @File : readme_helper.py import datetime import os from shutil import copyfile import markdown import markdown.extensions.fenced_code from flask import flash, redirect, request, send_from_directory from flask_admin import AdminIndexView, expose from pygments.formatters.html import HtmlFormatter from werkzeug.utils import secure_filename formatter = HtmlFormatter(style=\"emacs\", full=True, cssclass=\"codehilite\") css_string = formatter.get_style_defs() class MarkdownIndexView(AdminIndexView): @expose() def index(self): \"\"\"\u83b7\u53d6readme\u6587\u4ef6\u4f5c\u4e3aindex\u9875\u9762\u5e2e\u52a9\u6587\u6863 copy from https://github.com/solitudenote/gitkeeper/blob/d42f5990b05cf28cee12f20780e7794cd3579ead/app.py \"\"\" # get file readme_file = open(\"README.md\", \"r\", encoding=\"utf8\") md_template_string = markdown.markdown(readme_file.read(), extensions=[\"fenced_code\", \"codehilite\"]) md_css_string = \"<style>\" + css_string + \"</style>\" md_template = md_css_string + md_template_string return self.render(self._template, readme_md=md_template, upload_readme_url=\"/admin/upload_form\") @expose('/upload_form', methods=['POST']) def upload_file(self): # check if the post request has the file part if 'file' not in request.files: flash('No file part') return redirect('/admin/') file = request.files['file'] if file.filename == '': flash('No file selected for uploading') return redirect('/admin/') if file and file.filename == \"README.md\": bak_file = \"README.md\" + \".{}.bak\".format(datetime.datetime.now().isoformat()).replace(\":\", \"-\") copyfile(\"README.md\", bak_file) filename = secure_filename(file.filename) file.save(filename) flash('README.md\u4e0a\u4f20\u6210\u529f') return redirect('/admin/') else: flash('\u6587\u4ef6\u540d\u5fc5\u987b\u4e3aREADME.md') return redirect('/admin/') @expose('/export') def export(self): return send_from_directory(os.path.abspath(\".\"), \"README.md\", as_attachment=True) # as_a admin_index_view = MarkdownIndexView(name=\"\u4e3b\u9875\", template=\"index.html\") vim index.html {% extends 'admin/index.html' %} {% block page_body %} {{ super() }} <table class=\"markdown-table table-hover searchable\"> <tr> <td> <a href=\"{{ get_url('.export') }}\" title=\"{{ _gettext('Export') }}\">{{ _gettext('Export') + ' ' + export_type|upper }}</a> </td> <form id=\"form\" method=\"post\" action={{ upload_readme_url }} enctype=\"multipart/form-data\"> <td> <label class=\"input-file\"> <a title=\"{{ _gettext('Import') }}\"> {{ _gettext('Import') }} </a> <input type=\"file\" name=\"file\" id=\"upload-file\" autocomplete=\"off\" hidden required> </label> </td> </form> </tr> </table> <br> <hr/> <script> let __main = function () { document.getElementById(\"upload-file\").onchange = function () { document.getElementById(\"form\").submit(); }; } __main() </script> {{ readme_md|safe }} <style> .markdown-table { width: 200px; float: right; } .markdown-table label { font-weight: normal; } [hidden] { display: none !important; } </style> {% endblock %} vim app,py from view_markdown_index import admin_index_view from flask import Flask app = Flask(__name__) admin_view = Admin( app, template_mode='bootstrap3', index_view=admin_index_view, base_template=r'layout.html', category_icon_classes={'Profiles': 'glyphicon glyphicon-wrench'}, ) if __name__ == '__main__': app.run()","title":"flask_admin \u4e3b\u9875\u652f\u6301markdown\u5199\u5165"},{"location":"Python/flask_admin%E8%AE%BE%E7%BD%AE%E5%AE%BD%E5%BA%A6%E4%B8%BA%E5%85%A8%E5%B1%8F/","text":"flask_admin\u8bbe\u7f6e\u5bbd\u5ea6\u4e3a\u5168\u5c4f \u00b6 {% extends 'admin/base.html' %} {% block head_tail %} {{ super() }} <link href=\"{{ url_for('static', filename='layout.css') }}\" rel=\"stylesheet\"> <style> .container { width: 100%; } </style> {% endblock %}","title":"flask_admin\u8bbe\u7f6e\u5bbd\u5ea6\u4e3a\u5168\u5c4f"},{"location":"Python/flask_admin%E8%AE%BE%E7%BD%AE%E5%AE%BD%E5%BA%A6%E4%B8%BA%E5%85%A8%E5%B1%8F/#flask_admin","text":"{% extends 'admin/base.html' %} {% block head_tail %} {{ super() }} <link href=\"{{ url_for('static', filename='layout.css') }}\" rel=\"stylesheet\"> <style> .container { width: 100%; } </style> {% endblock %}","title":"flask_admin\u8bbe\u7f6e\u5bbd\u5ea6\u4e3a\u5168\u5c4f"},{"location":"Python/flask_babelex%20%E4%BD%BF%E7%94%A8/","text":"flask_babelex \u4f7f\u7528 \u00b6 # https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xiii-i18n-and-l10n # \u8bf7\u5728rqlicense-server \u76ee\u5f55\u4e0b\u64cd\u4f5c # \u751f\u6210\u7ffb\u8bd1\u6587\u4ef6\u6a21\u7248 # pybabel extract -F babel.cfg -k _l -o messages.pot . # \u751f\u6210\u7ffb\u8bd1\u6587\u4ef6 \u4e00\u822c\u53ea\u9700\u8981 init \u4e00\u6b21 # pybabel init -i messages.pot -d rqlicense/translations -l en # \u66f4\u65b0\u7ffb\u8bd1\u6587\u4ef6 # pybabel update -i messages.pot -d rqlicense/translations -l en # \u7f16\u8bd1 # pybabel compile -d rqlicense/translations \u9644\u8d60 messages.po \u8c37\u6b4c\u7ffb\u8bd1\u811a\u672c #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/12/13 15:25 # @author : zza # @Email : 740713651@qq.com # @File : \u7ffb\u8bd1messages.po\u6587\u4ef6.py import re from tqdm import tqdm from googletrans import Translator proxies = {\"http\": 'http://localhost:9999', \"https\": 'https://localhost:9999'} translate = Translator(proxies=proxies) def service(messages_po_path): with open(messages_po_path, \"r\", encoding=\"utf8\") as f: messages_body = f.read() messages_lines = messages_body.split(\"\\n\") result_lines = [] msgid = \"\" msgstr = \"\" for line in tqdm(messages_lines): if line.startswith(\"msgid\"): msgid = line elif line.startswith(\"msgstr\"): msgstr = line if msgid == 'msgid \"\"': pass elif msgstr == 'msgstr \"\"': translate_str = re.findall(r\"msgid \\\"(.*)\\\"\", msgid)[0] en_str = translate.translate(translate_str).text msgstr = msgstr.replace('\"\"', '\"{}\"'.format(en_str)) result_lines.append(msgid) result_lines.append(msgstr) else: result_lines.append(line) result_body = \"\\n\".join(result_lines) messages_po_to_path = messages_po_path.replace(\".po\", \"bak.po\") with open(messages_po_to_path, \"w\", encoding=\"utf8\") as f: f.write(result_body) if __name__ == '__main__': messages_po_path = r\"D:\\PycharmProjects\\rqlicense\\rqlicense-server\\rqlicense\\translations\\en\\LC_MESSAGES\\messages.po\" service(messages_po_path)","title":"flask_babelex \u4f7f\u7528"},{"location":"Python/flask_babelex%20%E4%BD%BF%E7%94%A8/#flask_babelex","text":"# https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xiii-i18n-and-l10n # \u8bf7\u5728rqlicense-server \u76ee\u5f55\u4e0b\u64cd\u4f5c # \u751f\u6210\u7ffb\u8bd1\u6587\u4ef6\u6a21\u7248 # pybabel extract -F babel.cfg -k _l -o messages.pot . # \u751f\u6210\u7ffb\u8bd1\u6587\u4ef6 \u4e00\u822c\u53ea\u9700\u8981 init \u4e00\u6b21 # pybabel init -i messages.pot -d rqlicense/translations -l en # \u66f4\u65b0\u7ffb\u8bd1\u6587\u4ef6 # pybabel update -i messages.pot -d rqlicense/translations -l en # \u7f16\u8bd1 # pybabel compile -d rqlicense/translations \u9644\u8d60 messages.po \u8c37\u6b4c\u7ffb\u8bd1\u811a\u672c #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/12/13 15:25 # @author : zza # @Email : 740713651@qq.com # @File : \u7ffb\u8bd1messages.po\u6587\u4ef6.py import re from tqdm import tqdm from googletrans import Translator proxies = {\"http\": 'http://localhost:9999', \"https\": 'https://localhost:9999'} translate = Translator(proxies=proxies) def service(messages_po_path): with open(messages_po_path, \"r\", encoding=\"utf8\") as f: messages_body = f.read() messages_lines = messages_body.split(\"\\n\") result_lines = [] msgid = \"\" msgstr = \"\" for line in tqdm(messages_lines): if line.startswith(\"msgid\"): msgid = line elif line.startswith(\"msgstr\"): msgstr = line if msgid == 'msgid \"\"': pass elif msgstr == 'msgstr \"\"': translate_str = re.findall(r\"msgid \\\"(.*)\\\"\", msgid)[0] en_str = translate.translate(translate_str).text msgstr = msgstr.replace('\"\"', '\"{}\"'.format(en_str)) result_lines.append(msgid) result_lines.append(msgstr) else: result_lines.append(line) result_body = \"\\n\".join(result_lines) messages_po_to_path = messages_po_path.replace(\".po\", \"bak.po\") with open(messages_po_to_path, \"w\", encoding=\"utf8\") as f: f.write(result_body) if __name__ == '__main__': messages_po_path = r\"D:\\PycharmProjects\\rqlicense\\rqlicense-server\\rqlicense\\translations\\en\\LC_MESSAGES\\messages.po\" service(messages_po_path)","title":"flask_babelex \u4f7f\u7528"},{"location":"Python/flask_schedule%20logging%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%20%E9%97%AE%E9%A2%98/","text":"flask_schedule logging \u591a\u8fdb\u7a0b \u95ee\u9898 \u00b6 logging\u6a21\u5757\u591a\u8fdb\u7a0b\u89e3\u51b3\u65b9\u6848 concurrent-log-handler 0.9.12 \u9519\u8bef\u65e5\u5fd7 \u00b6 PermissionError: [WinError 32] \u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528\u6b64\u6587\u4ef6\uff0c\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002: 'E:\\\\logs\\\\contest\\\\contest.log' -> 'E:\\\\logs\\\\contest\\\\contest.log.1' \u89e3\u51b3 \u00b6 bash pip install concurrent-log-handler pip install pypiwin32 python from logging import getLogger, DEBUG from concurrent_log_handler import ConcurrentRotatingFileHandler import os logger = getLogger() # Use an absolute path to prevent file rotation trouble. logfile = os.path.abspath(\"mylogfile.log\") # Rotate log after reaching 512K, keep 5 old copies. rotateHandler = ConcurrentRotatingFileHandler(logfile, \"a\", 512*1024, 5) logger.addHandler(rotateHandler) logger.setLevel(DEBUG) logger.info(\"Here is a very exciting log message, just for you\") \u5982\u679c\u6709\u5f88\u591a\u65e5\u5fd7 \u5efa\u8bae\u591a\u5f04\u51e0\u4e2alogger \u5176\u4ed6\u53c2\u8003 \u00b6 flask+schedule+\u5f00\u53d1\u73af\u5883&\u751f\u4ea7\u73af\u5883\u81ea\u52a8\u5207\u6362 Run subprocess and print output to logging","title":"flask_schedule logging \u591a\u8fdb\u7a0b \u95ee\u9898"},{"location":"Python/flask_schedule%20logging%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%20%E9%97%AE%E9%A2%98/#flask_schedule-logging","text":"logging\u6a21\u5757\u591a\u8fdb\u7a0b\u89e3\u51b3\u65b9\u6848 concurrent-log-handler 0.9.12","title":"flask_schedule logging \u591a\u8fdb\u7a0b \u95ee\u9898"},{"location":"Python/flask_schedule%20logging%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%20%E9%97%AE%E9%A2%98/#_1","text":"PermissionError: [WinError 32] \u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528\u6b64\u6587\u4ef6\uff0c\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002: 'E:\\\\logs\\\\contest\\\\contest.log' -> 'E:\\\\logs\\\\contest\\\\contest.log.1'","title":"\u9519\u8bef\u65e5\u5fd7"},{"location":"Python/flask_schedule%20logging%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%20%E9%97%AE%E9%A2%98/#_2","text":"bash pip install concurrent-log-handler pip install pypiwin32 python from logging import getLogger, DEBUG from concurrent_log_handler import ConcurrentRotatingFileHandler import os logger = getLogger() # Use an absolute path to prevent file rotation trouble. logfile = os.path.abspath(\"mylogfile.log\") # Rotate log after reaching 512K, keep 5 old copies. rotateHandler = ConcurrentRotatingFileHandler(logfile, \"a\", 512*1024, 5) logger.addHandler(rotateHandler) logger.setLevel(DEBUG) logger.info(\"Here is a very exciting log message, just for you\") \u5982\u679c\u6709\u5f88\u591a\u65e5\u5fd7 \u5efa\u8bae\u591a\u5f04\u51e0\u4e2alogger","title":"\u89e3\u51b3"},{"location":"Python/flask_schedule%20logging%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%20%E9%97%AE%E9%A2%98/#_3","text":"flask+schedule+\u5f00\u53d1\u73af\u5883&\u751f\u4ea7\u73af\u5883\u81ea\u52a8\u5207\u6362 Run subprocess and print output to logging","title":"\u5176\u4ed6\u53c2\u8003"},{"location":"Python/pip%E4%BF%AE%E6%94%B9%E4%B8%BA%E8%B1%86%E7%93%A3%E6%BA%90%20%E8%84%9A%E6%9C%AC/","text":"pip\u4fee\u6539\u4e3a\u8c46\u74e3\u6e90 \u811a\u672c \u00b6 pip \u547d\u4ee4 \u00b6 \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c31\u597d\u4e86 pip config set global.index-url http://pypi.douban.com/simple pip config set global.trusted-host pypi.douban.com pip config set global.disable-pip-version-check true \u7b2c\u4e09\u6761\u7528\u4e8e\u5173\u95ed\u7248\u672c\u68c0\u67e5 \u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u6709\u5199\u5165\u7684\u4f4d\u7f6e\u4e0d\u5bf9\u7684\u60c5\u51b5 \u4e8e\u662f\u4e4e\u6709\u4e86\u4e0b\u5217\u811a\u672c \u524d\u9762\u914d\u7f6e\u5df2\u751f\u6548\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86 \u7f51\u4e0a\u6559\u7a0b\u57fa\u672c\u4e0a\u90fd\u8bf4pip\u7684\u914d\u7f6e\u6587\u4ef6\u5728\u7528\u6237\u76ee\u5f55\u4e0b %HOMEPATH%/.pip/pip \u4f46\u662f\u5b9e\u9645\u4e0a\u5728\u5728 pip config list \u8bfb\u7684\u4e0d\u77e5\u9053\u662f\u90a3\u4e2a\u6587\u4ef6\u5939\u7684\u6587\u4ef6 \u4f7f\u7528 pip config set \u5199\u5165\u5230 %HOMEPATH%\\AppData\\Roaming\\pip\\pip.ini \u7528 \u2013global \u2013user \u7b49\u6307\u4ee4 \u5199\u5165\u7684\u5730\u65b9\u4e5f\u4e0d\u540c \u6709\u5f85\u7814\u7a76 \u64cd\u4f5c\u4ee3\u7801 \u00b6 #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/4/13 14:12 # @author : zza # @Email : 740713651@qq.com # @File : pip_douban_source.py # https://python3-cookbook.readthedocs.io/zh_CN/latest/c13/p10_read_configuration_files.html # https://www.jianshu.com/p/0cdd647bcc3e \"\"\" python -c \"import requests;res = requests.get('http://cdn.ricequant.com/rqpro/pip_douban_source_v2.py');exec(res.text)\" \"\"\" import os import sys from configparser import ConfigParser conf_dir = os.path.join(os.path.expanduser(\"~\"), \".pip\") os.makedirs(conf_dir, exist_ok=True) WINDOWS = (sys.platform.startswith(\"win\") or (sys.platform == 'cli' and os.name == 'nt')) CONFIG_BASENAME = 'pip.ini' if WINDOWS else 'pip.conf' conf_path = os.path.join(conf_dir, CONFIG_BASENAME) cfg = ConfigParser() cfg.read(conf_path, encoding=\"utf8\") if not cfg.has_section('global'): cfg.add_section('global') cfg.set('global', 'index-url', 'http://pypi.douban.com/simple') cfg.set('global', 'trusted-host', 'pypi.douban.com') cfg.set('global', 'timeout', \"60\") cfg.set('global', 'disable-pip-version-check', \"true\") #\u5173\u95ed\u7248\u672c\u68c0\u67e5 if not WINDOWS: if not cfg.has_section('install'): cfg.add_section('install') cfg.set(\"install\", \"use-mirrors\", \"true\") cfg.set(\"install\", \"mirrors\", \"https://pypi.douban.com/simple/\") cfg.set(\"install\", \"trusted-host\", \"pypi.douban.com\") with open(conf_path, \"w\", encoding=\"utf8:\") as f: cfg.write(f) print(\"save to {}\".format(conf_path)) \u4e00\u884c\u547d\u4ee4\u8dd1\u8d77\u6765 \u00b6 \u8fd9\u4e2a\u6587\u4ef6\u6211\u653e\u516c\u53f8cdn\u4e0a\u4e86 \u9700\u8981\u7528\u5230python exec \u65b9\u6cd5 \u5982\u4e0b\uff1a python -c \"import requests;res = requests.get('http://cdn.ricequant.com/rqpro/pip_douban_source_v2.py');exec(res.text)\"","title":"pip\u4fee\u6539\u4e3a\u8c46\u74e3\u6e90 \u811a\u672c"},{"location":"Python/pip%E4%BF%AE%E6%94%B9%E4%B8%BA%E8%B1%86%E7%93%A3%E6%BA%90%20%E8%84%9A%E6%9C%AC/#pip","text":"","title":"pip\u4fee\u6539\u4e3a\u8c46\u74e3\u6e90 \u811a\u672c"},{"location":"Python/pip%E4%BF%AE%E6%94%B9%E4%B8%BA%E8%B1%86%E7%93%A3%E6%BA%90%20%E8%84%9A%E6%9C%AC/#pip_1","text":"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c31\u597d\u4e86 pip config set global.index-url http://pypi.douban.com/simple pip config set global.trusted-host pypi.douban.com pip config set global.disable-pip-version-check true \u7b2c\u4e09\u6761\u7528\u4e8e\u5173\u95ed\u7248\u672c\u68c0\u67e5 \u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u53ef\u80fd\u6709\u5199\u5165\u7684\u4f4d\u7f6e\u4e0d\u5bf9\u7684\u60c5\u51b5 \u4e8e\u662f\u4e4e\u6709\u4e86\u4e0b\u5217\u811a\u672c \u524d\u9762\u914d\u7f6e\u5df2\u751f\u6548\u7684\u540c\u5b66\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86 \u7f51\u4e0a\u6559\u7a0b\u57fa\u672c\u4e0a\u90fd\u8bf4pip\u7684\u914d\u7f6e\u6587\u4ef6\u5728\u7528\u6237\u76ee\u5f55\u4e0b %HOMEPATH%/.pip/pip \u4f46\u662f\u5b9e\u9645\u4e0a\u5728\u5728 pip config list \u8bfb\u7684\u4e0d\u77e5\u9053\u662f\u90a3\u4e2a\u6587\u4ef6\u5939\u7684\u6587\u4ef6 \u4f7f\u7528 pip config set \u5199\u5165\u5230 %HOMEPATH%\\AppData\\Roaming\\pip\\pip.ini \u7528 \u2013global \u2013user \u7b49\u6307\u4ee4 \u5199\u5165\u7684\u5730\u65b9\u4e5f\u4e0d\u540c \u6709\u5f85\u7814\u7a76","title":"pip \u547d\u4ee4"},{"location":"Python/pip%E4%BF%AE%E6%94%B9%E4%B8%BA%E8%B1%86%E7%93%A3%E6%BA%90%20%E8%84%9A%E6%9C%AC/#_1","text":"#!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/4/13 14:12 # @author : zza # @Email : 740713651@qq.com # @File : pip_douban_source.py # https://python3-cookbook.readthedocs.io/zh_CN/latest/c13/p10_read_configuration_files.html # https://www.jianshu.com/p/0cdd647bcc3e \"\"\" python -c \"import requests;res = requests.get('http://cdn.ricequant.com/rqpro/pip_douban_source_v2.py');exec(res.text)\" \"\"\" import os import sys from configparser import ConfigParser conf_dir = os.path.join(os.path.expanduser(\"~\"), \".pip\") os.makedirs(conf_dir, exist_ok=True) WINDOWS = (sys.platform.startswith(\"win\") or (sys.platform == 'cli' and os.name == 'nt')) CONFIG_BASENAME = 'pip.ini' if WINDOWS else 'pip.conf' conf_path = os.path.join(conf_dir, CONFIG_BASENAME) cfg = ConfigParser() cfg.read(conf_path, encoding=\"utf8\") if not cfg.has_section('global'): cfg.add_section('global') cfg.set('global', 'index-url', 'http://pypi.douban.com/simple') cfg.set('global', 'trusted-host', 'pypi.douban.com') cfg.set('global', 'timeout', \"60\") cfg.set('global', 'disable-pip-version-check', \"true\") #\u5173\u95ed\u7248\u672c\u68c0\u67e5 if not WINDOWS: if not cfg.has_section('install'): cfg.add_section('install') cfg.set(\"install\", \"use-mirrors\", \"true\") cfg.set(\"install\", \"mirrors\", \"https://pypi.douban.com/simple/\") cfg.set(\"install\", \"trusted-host\", \"pypi.douban.com\") with open(conf_path, \"w\", encoding=\"utf8:\") as f: cfg.write(f) print(\"save to {}\".format(conf_path))","title":"\u64cd\u4f5c\u4ee3\u7801"},{"location":"Python/pip%E4%BF%AE%E6%94%B9%E4%B8%BA%E8%B1%86%E7%93%A3%E6%BA%90%20%E8%84%9A%E6%9C%AC/#_2","text":"\u8fd9\u4e2a\u6587\u4ef6\u6211\u653e\u516c\u53f8cdn\u4e0a\u4e86 \u9700\u8981\u7528\u5230python exec \u65b9\u6cd5 \u5982\u4e0b\uff1a python -c \"import requests;res = requests.get('http://cdn.ricequant.com/rqpro/pip_douban_source_v2.py');exec(res.text)\"","title":"\u4e00\u884c\u547d\u4ee4\u8dd1\u8d77\u6765"},{"location":"Python/pycharm%E9%97%AE%E9%A2%98/","text":"pycharm\u95ee\u9898 \u00b6 \u6309ctrl+V\u4e0d\u80fd\u8d34\u8d34\uff0cctrl+C\u80fd\u590d\u5236 \u9009\u4e2d\u6587\u5b57\u540e\u6309Backspace\u4e0d\u662f\u5220\u9664\uff0c\u800c\u662f\u9009\u5b9a\u884c\u5f80\u540e\u7ee7\u7eed+1 \u539f\u56e0\uff1aPycharm\u542f\u52a8\u4e86Vim\u7f16\u8f91\u6a21\u5f0f \u89e3\u51b3\u65b9\u5f0f\uff1aTools -Vim Emulator \u5173\u95ed\u5c31\u884c\u4e86 \u5b57\u5178\u4e2d\uff0c\u7528\u53d8\u91cf\u540d.get(key1) \u548c \u53d8\u91cf\u540d[key1]\u7684\u533a\u522b \u53d8\u91cf\u540d.get(key1)\u5982\u679c\u6ca1\u6709\u7ed90\u503c \u53d8\u91cf\u540d[key1]\u6ca1\u6709\u5219\u629b\u51faKeyError\u5f02\u5e38","title":"pycharm\u95ee\u9898"},{"location":"Python/pycharm%E9%97%AE%E9%A2%98/#pycharm","text":"\u6309ctrl+V\u4e0d\u80fd\u8d34\u8d34\uff0cctrl+C\u80fd\u590d\u5236 \u9009\u4e2d\u6587\u5b57\u540e\u6309Backspace\u4e0d\u662f\u5220\u9664\uff0c\u800c\u662f\u9009\u5b9a\u884c\u5f80\u540e\u7ee7\u7eed+1 \u539f\u56e0\uff1aPycharm\u542f\u52a8\u4e86Vim\u7f16\u8f91\u6a21\u5f0f \u89e3\u51b3\u65b9\u5f0f\uff1aTools -Vim Emulator \u5173\u95ed\u5c31\u884c\u4e86 \u5b57\u5178\u4e2d\uff0c\u7528\u53d8\u91cf\u540d.get(key1) \u548c \u53d8\u91cf\u540d[key1]\u7684\u533a\u522b \u53d8\u91cf\u540d.get(key1)\u5982\u679c\u6ca1\u6709\u7ed90\u503c \u53d8\u91cf\u540d[key1]\u6ca1\u6709\u5219\u629b\u51faKeyError\u5f02\u5e38","title":"pycharm\u95ee\u9898"},{"location":"Python/python%20prometheus%20gunicorn%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","text":"python prometheus gunicorn \u591a\u8fdb\u7a0b\u89e3\u51b3\u65b9\u6848 \u00b6 prometheus \u76d1\u63a7 \uff0c\u7528gunicorn\u542f\u52a8\u65f6\u3002\u591a\u8fdb\u7a0b\u5185\u5b58\u4e0d\u4e92\u901a\u5bfc\u81f4\u6570\u636e\u6709\u95ee\u9898\u3002 \u53c2\u8003 \u00b6 prometheus_client \u5b98\u65b9\u5305\uff0c\u63d0\u4f9bprometheus\u5404\u79cd\u63a5\u53e3\uff0c\u5176\u5b9e\u6587\u6863\u91cc\u4e5f\u5199\u4e86\u600e\u9ebd\u5904\u7406gunicorn\u542f\u52a8\u95ee\u9898\uff0c\u6211\u5c31\u505a\u4e2a\u8bb0\u5f55\u3002 prometheus-multiprocessing-example \uff0cgayhub\u4e0a\u627e\u7684\u975e\u5e38\u597d\u7684\u5b9e\u4f8b\u3002 gunicorn\u542f\u52a8\u65b9\u6848 \u00b6 \u5b89\u88c5prometheus_client pip install prometheus_client \u590d\u5236\u8fd9\u4e2a\u6587\u4ef6\u5230\u4f60\u7684\u9879\u76ee\u4e2d vim monitoring.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/8/2 16:29 # @author : zza # @Email : 740713651@qq.com # @File : monitoring.py \"\"\" FROM https://github.com/ITISFoundation/osparc-simcore/blob/3e80ce451352c906f2876113dbb6ae33e8574be1/packages/service-library/src/servicelib/monitoring.py && https://github.com/ITISFoundation/osparc-simcore/blob/3e80ce451352c906f2876113dbb6ae33e8574be1/packages/service-library/src/servicelib/monitoring.py \"\"\" import time from flask import request, current_app, Response from prometheus_client import Counter, Histogram from prometheus_client import multiprocess from prometheus_client import generate_latest, CollectorRegistry, CONTENT_TYPE_LATEST, Gauge # Example gauge. IN_PROGRESS = Gauge(\"inprogress_requests\", \"help\", multiprocess_mode='livesum') # Expose metrics. @IN_PROGRESS.track_inprogress() def app(environ, start_response): registry = CollectorRegistry() multiprocess.MultiProcessCollector(registry) data = generate_latest(registry) status = '200 OK' response_headers = [ ('Content-type', CONTENT_TYPE_LATEST), ('Content-Length', str(len(data))) ] start_response(status, response_headers) return iter([data]) def setup_monitoring(app, app_name=None): if app_name is None: app_name = app.name def start_timer(): request.start_time = time.time() current_app.extensions[\"prometheus\"]['REQUEST_IN_PROGRESS'].labels( app_name, request.endpoint, request.method).inc() def record_request_data(response): resp_time = time.time() - request.start_time endpoint = request.endpoint ext_prometheus = current_app.extensions[\"prometheus\"] ext_prometheus['REQUEST_LATENCY'].labels(app_name, endpoint).observe(resp_time) ext_prometheus['REQUEST_IN_PROGRESS'].labels(app_name, endpoint, request.method).dec() ext_prometheus['REQUEST_COUNT'].labels(app_name, request.method, endpoint, response.status).inc() return response app.before_request(start_timer) app.after_request(record_request_data) extensions_prometheus = dict() extensions_prometheus['app_name'] = app_name extensions_prometheus['REQUEST_COUNT'] = Counter( 'http_requests_total', 'Total Request Count', ['app_name', 'method', 'endpoint', 'http_status'] ) # Latency of a request in seconds extensions_prometheus['REQUEST_LATENCY'] = Histogram( 'http_request_latency_seconds', 'Request latency', ['app_name', 'endpoint'] ) extensions_prometheus['REQUEST_IN_PROGRESS'] = Gauge( 'http_requests_in_progress_total', 'Requests in progress', ['app_name', 'endpoint', 'method'] ) app.extensions[\"prometheus\"] = extensions_prometheus @app.route(\"/metrics\") def metrics(): registry = CollectorRegistry() multiprocess.MultiProcessCollector(registry) data = generate_latest(registry) return Response(data, mimetype=CONTENT_TYPE_LATEST) \u5728\u4f60\u4ee3\u7801\u4e2d \u5bfc\u5165\u6587\u4ef6\u5e76\u521d\u59cb\u5316 # from flask import Flask # app = Flask(__name__) from persistd.monitoring import setup_monitoring setup_monitoring(app, \"app_name\") \u8bbe\u7f6eGunicom\u914d\u7f6e\u6587\u4ef6 vim gunicorn.conf.py from prometheus_client import multiprocess def child_exit(server, worker): multiprocess.mark_process_dead(worker.pid) \u542f\u52a8Gunicom\u65f6 \u589e\u52a0\u53c2\u6570\u6307\u5411\u914d\u7f6e\u6587\u4ef6 -c gunicorn.conf.py \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939,\u4e14\u73af\u5883\u53d8\u91cf prometheus_multiproc_dir \u6307\u5411\u8be5\u6587\u4ef6\u5939( \u6ce8\u610f\u542f\u52a8\u7528\u6237\u8bfb\u5199\u6743\u9650 ), \u8be5\u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653eprometheus\u6570\u636e\u3002 rm -rf multiproc-tmp mkdir multiproc-tmp export prometheus_multiproc_dir=multiproc-tmp gunicorn -c gunicorn_conf.py -w 4 yourapp:app \u9644\u4e00\u4e2a asyncio \u7684 monitoring.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/9/5 16:36 # @author : zza # @File : monitoring.py \"\"\" FROM: https://github.com/cloud-cds/cds-stack/blob/4243cd9b2e878f16a251d05afb2d202d71e41dce/api/monitoring.py https://github.com/DD-DeCaF/gene-to-reactions/blob/3af42110433edf8495810e6a95a516368464e179/src/gene_to_reactions/app.py setup_monitoring(app, \"app_name\") \"\"\" import time import asyncio from aiohttp import web from prometheus_client import multiprocess, generate_latest from prometheus_client import CONTENT_TYPE_LATEST, CollectorRegistry, Histogram, Counter, Gauge def prom_middleware(app_name): @asyncio.coroutine def factory(app, handler): @asyncio.coroutine def middleware_handler(request): try: request['start_time'] = time.time() request.app['REQUEST_IN_PROGRESS'].labels( app_name, request.path, request.method).inc() response = yield from handler(request) resp_time = time.time() - request['start_time'] request.app['REQUEST_LATENCY'].labels(app_name, request.path).observe(resp_time) request.app['REQUEST_IN_PROGRESS'].labels(app_name, request.path, request.method).dec() request.app['REQUEST_COUNT'].labels( app_name, request.method, request.path, response.status).inc() return response except Exception as ex: raise return middleware_handler return factory async def metrics(request): resp = web.Response(body=generate_latest(multiprocess.MultiProcessCollector(CollectorRegistry()))) resp.content_type = CONTENT_TYPE_LATEST return resp def setup_monitoring(app, app_name): app['REQUEST_COUNT'] = Counter( 'requests_total', 'Total Request Count', ['app_name', 'method', 'endpoint', 'http_status'] ) app['REQUEST_LATENCY'] = Histogram( 'request_latency_seconds', 'Request latency', ['app_name', 'endpoint'] ) app['REQUEST_IN_PROGRESS'] = Gauge( 'requests_in_progress_total', 'Requests in progress', ['app_name', 'endpoint', 'method'] ) app.middlewares.insert(0, prom_middleware(app_name)) app.router.add_get(\"/metrics\", metrics)","title":"python prometheus gunicorn \u591a\u8fdb\u7a0b\u89e3\u51b3\u65b9\u6848"},{"location":"Python/python%20prometheus%20gunicorn%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#python-prometheus-gunicorn","text":"prometheus \u76d1\u63a7 \uff0c\u7528gunicorn\u542f\u52a8\u65f6\u3002\u591a\u8fdb\u7a0b\u5185\u5b58\u4e0d\u4e92\u901a\u5bfc\u81f4\u6570\u636e\u6709\u95ee\u9898\u3002","title":"python prometheus gunicorn \u591a\u8fdb\u7a0b\u89e3\u51b3\u65b9\u6848"},{"location":"Python/python%20prometheus%20gunicorn%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#_1","text":"prometheus_client \u5b98\u65b9\u5305\uff0c\u63d0\u4f9bprometheus\u5404\u79cd\u63a5\u53e3\uff0c\u5176\u5b9e\u6587\u6863\u91cc\u4e5f\u5199\u4e86\u600e\u9ebd\u5904\u7406gunicorn\u542f\u52a8\u95ee\u9898\uff0c\u6211\u5c31\u505a\u4e2a\u8bb0\u5f55\u3002 prometheus-multiprocessing-example \uff0cgayhub\u4e0a\u627e\u7684\u975e\u5e38\u597d\u7684\u5b9e\u4f8b\u3002","title":"\u53c2\u8003"},{"location":"Python/python%20prometheus%20gunicorn%20%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#gunicorn","text":"\u5b89\u88c5prometheus_client pip install prometheus_client \u590d\u5236\u8fd9\u4e2a\u6587\u4ef6\u5230\u4f60\u7684\u9879\u76ee\u4e2d vim monitoring.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/8/2 16:29 # @author : zza # @Email : 740713651@qq.com # @File : monitoring.py \"\"\" FROM https://github.com/ITISFoundation/osparc-simcore/blob/3e80ce451352c906f2876113dbb6ae33e8574be1/packages/service-library/src/servicelib/monitoring.py && https://github.com/ITISFoundation/osparc-simcore/blob/3e80ce451352c906f2876113dbb6ae33e8574be1/packages/service-library/src/servicelib/monitoring.py \"\"\" import time from flask import request, current_app, Response from prometheus_client import Counter, Histogram from prometheus_client import multiprocess from prometheus_client import generate_latest, CollectorRegistry, CONTENT_TYPE_LATEST, Gauge # Example gauge. IN_PROGRESS = Gauge(\"inprogress_requests\", \"help\", multiprocess_mode='livesum') # Expose metrics. @IN_PROGRESS.track_inprogress() def app(environ, start_response): registry = CollectorRegistry() multiprocess.MultiProcessCollector(registry) data = generate_latest(registry) status = '200 OK' response_headers = [ ('Content-type', CONTENT_TYPE_LATEST), ('Content-Length', str(len(data))) ] start_response(status, response_headers) return iter([data]) def setup_monitoring(app, app_name=None): if app_name is None: app_name = app.name def start_timer(): request.start_time = time.time() current_app.extensions[\"prometheus\"]['REQUEST_IN_PROGRESS'].labels( app_name, request.endpoint, request.method).inc() def record_request_data(response): resp_time = time.time() - request.start_time endpoint = request.endpoint ext_prometheus = current_app.extensions[\"prometheus\"] ext_prometheus['REQUEST_LATENCY'].labels(app_name, endpoint).observe(resp_time) ext_prometheus['REQUEST_IN_PROGRESS'].labels(app_name, endpoint, request.method).dec() ext_prometheus['REQUEST_COUNT'].labels(app_name, request.method, endpoint, response.status).inc() return response app.before_request(start_timer) app.after_request(record_request_data) extensions_prometheus = dict() extensions_prometheus['app_name'] = app_name extensions_prometheus['REQUEST_COUNT'] = Counter( 'http_requests_total', 'Total Request Count', ['app_name', 'method', 'endpoint', 'http_status'] ) # Latency of a request in seconds extensions_prometheus['REQUEST_LATENCY'] = Histogram( 'http_request_latency_seconds', 'Request latency', ['app_name', 'endpoint'] ) extensions_prometheus['REQUEST_IN_PROGRESS'] = Gauge( 'http_requests_in_progress_total', 'Requests in progress', ['app_name', 'endpoint', 'method'] ) app.extensions[\"prometheus\"] = extensions_prometheus @app.route(\"/metrics\") def metrics(): registry = CollectorRegistry() multiprocess.MultiProcessCollector(registry) data = generate_latest(registry) return Response(data, mimetype=CONTENT_TYPE_LATEST) \u5728\u4f60\u4ee3\u7801\u4e2d \u5bfc\u5165\u6587\u4ef6\u5e76\u521d\u59cb\u5316 # from flask import Flask # app = Flask(__name__) from persistd.monitoring import setup_monitoring setup_monitoring(app, \"app_name\") \u8bbe\u7f6eGunicom\u914d\u7f6e\u6587\u4ef6 vim gunicorn.conf.py from prometheus_client import multiprocess def child_exit(server, worker): multiprocess.mark_process_dead(worker.pid) \u542f\u52a8Gunicom\u65f6 \u589e\u52a0\u53c2\u6570\u6307\u5411\u914d\u7f6e\u6587\u4ef6 -c gunicorn.conf.py \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939,\u4e14\u73af\u5883\u53d8\u91cf prometheus_multiproc_dir \u6307\u5411\u8be5\u6587\u4ef6\u5939( \u6ce8\u610f\u542f\u52a8\u7528\u6237\u8bfb\u5199\u6743\u9650 ), \u8be5\u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653eprometheus\u6570\u636e\u3002 rm -rf multiproc-tmp mkdir multiproc-tmp export prometheus_multiproc_dir=multiproc-tmp gunicorn -c gunicorn_conf.py -w 4 yourapp:app \u9644\u4e00\u4e2a asyncio \u7684 monitoring.py #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/9/5 16:36 # @author : zza # @File : monitoring.py \"\"\" FROM: https://github.com/cloud-cds/cds-stack/blob/4243cd9b2e878f16a251d05afb2d202d71e41dce/api/monitoring.py https://github.com/DD-DeCaF/gene-to-reactions/blob/3af42110433edf8495810e6a95a516368464e179/src/gene_to_reactions/app.py setup_monitoring(app, \"app_name\") \"\"\" import time import asyncio from aiohttp import web from prometheus_client import multiprocess, generate_latest from prometheus_client import CONTENT_TYPE_LATEST, CollectorRegistry, Histogram, Counter, Gauge def prom_middleware(app_name): @asyncio.coroutine def factory(app, handler): @asyncio.coroutine def middleware_handler(request): try: request['start_time'] = time.time() request.app['REQUEST_IN_PROGRESS'].labels( app_name, request.path, request.method).inc() response = yield from handler(request) resp_time = time.time() - request['start_time'] request.app['REQUEST_LATENCY'].labels(app_name, request.path).observe(resp_time) request.app['REQUEST_IN_PROGRESS'].labels(app_name, request.path, request.method).dec() request.app['REQUEST_COUNT'].labels( app_name, request.method, request.path, response.status).inc() return response except Exception as ex: raise return middleware_handler return factory async def metrics(request): resp = web.Response(body=generate_latest(multiprocess.MultiProcessCollector(CollectorRegistry()))) resp.content_type = CONTENT_TYPE_LATEST return resp def setup_monitoring(app, app_name): app['REQUEST_COUNT'] = Counter( 'requests_total', 'Total Request Count', ['app_name', 'method', 'endpoint', 'http_status'] ) app['REQUEST_LATENCY'] = Histogram( 'request_latency_seconds', 'Request latency', ['app_name', 'endpoint'] ) app['REQUEST_IN_PROGRESS'] = Gauge( 'requests_in_progress_total', 'Requests in progress', ['app_name', 'endpoint', 'method'] ) app.middlewares.insert(0, prom_middleware(app_name)) app.router.add_get(\"/metrics\", metrics)","title":"gunicorn\u542f\u52a8\u65b9\u6848"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/","text":"python \u6027\u80fd\u5206\u6790 \u00b6 \u76f8\u5173\u8d44\u6599 \u00b6 Python \u4f18\u5316\u7b2c\u4e00\u6b65: \u6027\u80fd\u5206\u6790\u5b9e\u8df5 \u5b89\u88c5\u4f9d\u8d56 \u00b6 pip install pstats pip install snakeviz \u83b7\u53d6\u7a0b\u5e8f\u8fd0\u884c\u6570\u636e \u00b6 def run_1(): \"\"\"your function \"\"\" pass def profile_func(func): import cProfile file_name = \"prof_{}_1.txt\".format(func.__name__) cProfile.run(\"{}()\".format(func.__name__), file_name) import pstats p = pstats.Stats(file_name).sort_stats(\"cumtime\") # p.print_stats(\"rqalpha_mod_ricequant_data\") p.print_stats(\"base_position\") return p if __name__ == '__main__': p = profile_func(run_1)\\ snakeviz \u751f\u6210\u5256\u9762\u56fe \u00b6 \u8fd0\u884c\u76ee\u5f55\u4e0b \u547d\u4ee4\u884c\u8f93\u5165\uff1a snakeviz prof_run_1_1.txt \u70b9\u51fb\u751f\u6210\u7684\u8fde\u63a5 \u67e5\u770b\u67f1\u72b6\u5256\u9762\u56fe gprof2dot \u65f6\u95f4\u5206\u6790\u56fe \u00b6 gprof2dot -f pstats mkm_run.prof | dot -Tpng -o mkm_run.png","title":"python \u6027\u80fd\u5206\u6790"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#python","text":"","title":"python \u6027\u80fd\u5206\u6790"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#_1","text":"Python \u4f18\u5316\u7b2c\u4e00\u6b65: \u6027\u80fd\u5206\u6790\u5b9e\u8df5","title":"\u76f8\u5173\u8d44\u6599"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#_2","text":"pip install pstats pip install snakeviz","title":"\u5b89\u88c5\u4f9d\u8d56"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#_3","text":"def run_1(): \"\"\"your function \"\"\" pass def profile_func(func): import cProfile file_name = \"prof_{}_1.txt\".format(func.__name__) cProfile.run(\"{}()\".format(func.__name__), file_name) import pstats p = pstats.Stats(file_name).sort_stats(\"cumtime\") # p.print_stats(\"rqalpha_mod_ricequant_data\") p.print_stats(\"base_position\") return p if __name__ == '__main__': p = profile_func(run_1)\\","title":"\u83b7\u53d6\u7a0b\u5e8f\u8fd0\u884c\u6570\u636e"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#snakeviz","text":"\u8fd0\u884c\u76ee\u5f55\u4e0b \u547d\u4ee4\u884c\u8f93\u5165\uff1a snakeviz prof_run_1_1.txt \u70b9\u51fb\u751f\u6210\u7684\u8fde\u63a5 \u67e5\u770b\u67f1\u72b6\u5256\u9762\u56fe","title":"snakeviz \u751f\u6210\u5256\u9762\u56fe"},{"location":"Python/python%20%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/#gprof2dot","text":"gprof2dot -f pstats mkm_run.prof | dot -Tpng -o mkm_run.png","title":"gprof2dot \u65f6\u95f4\u5206\u6790\u56fe"},{"location":"Python/python%20%E6%97%B6%E9%97%B4%E6%88%B3%E9%97%AE%E9%A2%98/","text":"python \u65f6\u95f4\u6233\u95ee\u9898 \u00b6 \u8dd1\u7a0b\u5e8f\u7684\u65f6\u5019\u53d1\u73b0 _id\u76f8\u540c\u51b2\u7a81 \u7a0b\u5e8f\u4e2d mongo _id\u7684\u751f\u6210\u6709timestamp\u51b3\u5b9a \u4e8e\u662f\u6d4b\u8bd5\uff1a import time for i in range(20): print(time.time()) a = time.time() for i in range(10**8): time.time() print(time.time() - a) \u7ed3\u679c\uff1a 1546937536.8363261 1546937536.8363261 1546937536.8363261 1546937536.8363261 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 9.680140972137451 emmm \u7ecf\u8fc7\u4e0e\u540c\u4e8b\u7684\u673a\u5668\u7684\u5bf9\u6bd4 \u77ed\u65f6\u95f4\u5185 Windows\u4e0a\u65f6\u95f4\u6233\u662f\u76f8\u540c mac\u4e0d\u540c \u4f3c\u4e4e\u662f\u7cfb\u7edfbug \u5404\u4f4d\u8981\u7528\u65f6\u95f4\u6233\u505aid\u7684\u540c\u5b66\u6ce8\u610f\u4e0b \u6ce8\u610f 1546937536.8363261 1546937536.8372946 \u65f6\u95f4\u4e0d\u662f\u8fde\u7eed\u7684 time\u7684\u7cbe\u5ea6\u4e0d\u540c","title":"python \u65f6\u95f4\u6233\u95ee\u9898"},{"location":"Python/python%20%E6%97%B6%E9%97%B4%E6%88%B3%E9%97%AE%E9%A2%98/#python","text":"\u8dd1\u7a0b\u5e8f\u7684\u65f6\u5019\u53d1\u73b0 _id\u76f8\u540c\u51b2\u7a81 \u7a0b\u5e8f\u4e2d mongo _id\u7684\u751f\u6210\u6709timestamp\u51b3\u5b9a \u4e8e\u662f\u6d4b\u8bd5\uff1a import time for i in range(20): print(time.time()) a = time.time() for i in range(10**8): time.time() print(time.time() - a) \u7ed3\u679c\uff1a 1546937536.8363261 1546937536.8363261 1546937536.8363261 1546937536.8363261 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 1546937536.8372946 9.680140972137451 emmm \u7ecf\u8fc7\u4e0e\u540c\u4e8b\u7684\u673a\u5668\u7684\u5bf9\u6bd4 \u77ed\u65f6\u95f4\u5185 Windows\u4e0a\u65f6\u95f4\u6233\u662f\u76f8\u540c mac\u4e0d\u540c \u4f3c\u4e4e\u662f\u7cfb\u7edfbug \u5404\u4f4d\u8981\u7528\u65f6\u95f4\u6233\u505aid\u7684\u540c\u5b66\u6ce8\u610f\u4e0b \u6ce8\u610f 1546937536.8363261 1546937536.8372946 \u65f6\u95f4\u4e0d\u662f\u8fde\u7eed\u7684 time\u7684\u7cbe\u5ea6\u4e0d\u540c","title":"python \u65f6\u95f4\u6233\u95ee\u9898"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/","text":"python3 - mysql \u6570\u636e\u5b58\u50a8\u6027\u80fd\u6d4b\u8bd5 \u00b6 \u8981\u6c42 \u00b6 \u4e00\u4ebf\u6570\u636e 10 8 \u6d4b\u8bd5\u75285w\u6570\u636e \u9884\u6d4b\u65f6\u95f4\u4e3a \u7ed3\u679c\u65f6\u95f4 2000 \u8bbe\u8ba1\u601d\u8def \u00b6 \u7a0b\u5e8f\u6267\u884c20\u904d\u6c42\u5e73\u5747\u503c \u7ed3\u675f\u65f6\u95f4 - \u5f00\u59cb\u65f6\u95f4 \u4e0d\u540cpython\u5f15\u64ce \u4e0d\u540c\u6570\u636e\u91cf \u7136\u540ecommit\u63d0\u4ea4 \u54cd\u5e94\u901f\u5ea6 \u6570\u636e\u5e93\u8fde\u63a5\u5de5\u5177 \u00b6 [x] MySQL-Python [x] pymysql [X ] MySQL-Connector \u4ee3\u7801 \u00b6 #!/usr/bin/python3 # encoding: utf-8 # @Time : 2018/7/14 0014 16:12 # @author : zza # @Email : 740713651@qq.com import time from flask import Flask from flask_sqlalchemy import SQLAlchemy db = SQLAlchemy() class Student(db.Model): __tablename__ = \"stu\" id = db.Column(db.Integer, primary_key=True, autoincrement=True, nullable=True) name_ = db.Column(db.String(127)) age = db.Column(db.Integer) class_num = db.Column(db.Integer) def init(param): class sqlalchemy(SQLAlchemy): def __del__(self): print(\"\u6570\u636e\u5e93\u5173\u95ed\") db.session.close_all() app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = param + \"?charset=utf8&autocommit=False\" app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True app.config['SQLALCHEMY_POOL_SIZE'] = 128 app.config['SQLALCHEMY_POOL_TIMEOUT'] = 60 app.config['SQLALCHEMY_POOL_RECYCLE'] = 30 app.config['SQLALCHEMY_MAX_OVERFLOW'] = 128 # app.config['SQLALCHEMY_ECHO'] = True global db db = sqlalchemy(app) def finish(): db.session.query(Student).delete() db.session.commit() def time_me(fn): def _wrapper(*args, **kwargs): average = 0 i1 = 30 seconds = 0 for i in range(i1): start = time.time() fn(*args, **kwargs) seconds = time.time() - start average += seconds finish() print(u\"{func}\u51fd\u6570\u5199\u5165\u8017\u65f6{sec}\u79d2\".format(func=fn.__name__, sec=seconds)) # print(u\"{func}\u51fd\u6570\u6bcf{count}\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f6{sec}\u79d2\".format(func=fn.__name__, count=args[0], sec=seconds)) # finish() return seconds, args return _wrapper @time_me def insert_many(): # \u63d2\u5165\u8bd7\u53e5 all = 5 * 10 ** 4 inner = 1000 out = int(all / inner) for i in range(out): for c in range(inner): db.session.add(Student(name_='test mysql insert', age=30, class_num=30)) db.session.commit() ###### @time_me def insert_many_by_sql(): all = 5 * 10 ** 4 inner = 1000 out = int(all / inner) with db.session.connection() as con: for i in range(out): for c in range(inner): con.execute( \"INSERT INTO stu ( id ,name_, age, class_num) VALUES (null ,{}, {},{})\".format( \"'test2mysql3insert'\", 30, 30)) db.session.commit() def main2(): \"\"\"\u6d4b\u8bd5sql\u8bed\u53e5\u4e0eorm\u6846\u67b6 \u8c01\u5feb \u5305\u62ec\u6570\u636e\u7ec4\u88c5\"\"\" init(\"mysql+pymysql://root:root@192.168.14.147:3306/efficiency_test\") print(\"orm\u6846\u67b6\u63d2\u5165\u6570\u636e\") # iinsert_many\u51fd\u6570\u6bcf500\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f619.671629905700684\u79d2 insert_many() print(\"sql\u8bed\u53e5\u63d2\u5165\u6570\u636e\") # insert_many_by_sql\u51fd\u6570\u6bcf500\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f617.977628707885742\u79d2 insert_many_by_sql() pass def main(): print('\u6d4b\u8bd5\u5f00\u59cb') # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f6168.07286262512207\u79d2 init(\"mysql+mysqlconnector://root:root@192.168.14.147:3306/efficiency_test\") insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f664.85304117202759\u79d2 init(\"mysql://root:root@192.168.14.147:3306/efficiency_test\") # \u9ed8\u8ba4\u4f7f\u7528MySQLdb insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f664.692676067352295\u79d2 init(\"mysql+pymysql://root:root@192.168.14.147:3306/efficiency_test\") insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f666.991496086120605\u79d2 init(\"mysql+mysqldb://root:root@192.168.14.147:3306/efficiency_test\") insert_many() if __name__ == '__main__': main() main2()","title":"python3 - mysql \u6570\u636e\u5b58\u50a8\u6027\u80fd\u6d4b\u8bd5"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/#python3-mysql","text":"","title":"python3 - mysql \u6570\u636e\u5b58\u50a8\u6027\u80fd\u6d4b\u8bd5"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/#_1","text":"\u4e00\u4ebf\u6570\u636e 10 8 \u6d4b\u8bd5\u75285w\u6570\u636e \u9884\u6d4b\u65f6\u95f4\u4e3a \u7ed3\u679c\u65f6\u95f4 2000","title":"\u8981\u6c42"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/#_2","text":"\u7a0b\u5e8f\u6267\u884c20\u904d\u6c42\u5e73\u5747\u503c \u7ed3\u675f\u65f6\u95f4 - \u5f00\u59cb\u65f6\u95f4 \u4e0d\u540cpython\u5f15\u64ce \u4e0d\u540c\u6570\u636e\u91cf \u7136\u540ecommit\u63d0\u4ea4 \u54cd\u5e94\u901f\u5ea6","title":"\u8bbe\u8ba1\u601d\u8def"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/#_3","text":"[x] MySQL-Python [x] pymysql [X ] MySQL-Connector","title":"\u6570\u636e\u5e93\u8fde\u63a5\u5de5\u5177"},{"location":"Python/python3%20-%20mysql%20%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/#_4","text":"#!/usr/bin/python3 # encoding: utf-8 # @Time : 2018/7/14 0014 16:12 # @author : zza # @Email : 740713651@qq.com import time from flask import Flask from flask_sqlalchemy import SQLAlchemy db = SQLAlchemy() class Student(db.Model): __tablename__ = \"stu\" id = db.Column(db.Integer, primary_key=True, autoincrement=True, nullable=True) name_ = db.Column(db.String(127)) age = db.Column(db.Integer) class_num = db.Column(db.Integer) def init(param): class sqlalchemy(SQLAlchemy): def __del__(self): print(\"\u6570\u636e\u5e93\u5173\u95ed\") db.session.close_all() app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = param + \"?charset=utf8&autocommit=False\" app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True app.config['SQLALCHEMY_POOL_SIZE'] = 128 app.config['SQLALCHEMY_POOL_TIMEOUT'] = 60 app.config['SQLALCHEMY_POOL_RECYCLE'] = 30 app.config['SQLALCHEMY_MAX_OVERFLOW'] = 128 # app.config['SQLALCHEMY_ECHO'] = True global db db = sqlalchemy(app) def finish(): db.session.query(Student).delete() db.session.commit() def time_me(fn): def _wrapper(*args, **kwargs): average = 0 i1 = 30 seconds = 0 for i in range(i1): start = time.time() fn(*args, **kwargs) seconds = time.time() - start average += seconds finish() print(u\"{func}\u51fd\u6570\u5199\u5165\u8017\u65f6{sec}\u79d2\".format(func=fn.__name__, sec=seconds)) # print(u\"{func}\u51fd\u6570\u6bcf{count}\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f6{sec}\u79d2\".format(func=fn.__name__, count=args[0], sec=seconds)) # finish() return seconds, args return _wrapper @time_me def insert_many(): # \u63d2\u5165\u8bd7\u53e5 all = 5 * 10 ** 4 inner = 1000 out = int(all / inner) for i in range(out): for c in range(inner): db.session.add(Student(name_='test mysql insert', age=30, class_num=30)) db.session.commit() ###### @time_me def insert_many_by_sql(): all = 5 * 10 ** 4 inner = 1000 out = int(all / inner) with db.session.connection() as con: for i in range(out): for c in range(inner): con.execute( \"INSERT INTO stu ( id ,name_, age, class_num) VALUES (null ,{}, {},{})\".format( \"'test2mysql3insert'\", 30, 30)) db.session.commit() def main2(): \"\"\"\u6d4b\u8bd5sql\u8bed\u53e5\u4e0eorm\u6846\u67b6 \u8c01\u5feb \u5305\u62ec\u6570\u636e\u7ec4\u88c5\"\"\" init(\"mysql+pymysql://root:root@192.168.14.147:3306/efficiency_test\") print(\"orm\u6846\u67b6\u63d2\u5165\u6570\u636e\") # iinsert_many\u51fd\u6570\u6bcf500\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f619.671629905700684\u79d2 insert_many() print(\"sql\u8bed\u53e5\u63d2\u5165\u6570\u636e\") # insert_many_by_sql\u51fd\u6570\u6bcf500\u6761\u6570\u6570\u636e\u5199\u5165\u8017\u65f617.977628707885742\u79d2 insert_many_by_sql() pass def main(): print('\u6d4b\u8bd5\u5f00\u59cb') # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f6168.07286262512207\u79d2 init(\"mysql+mysqlconnector://root:root@192.168.14.147:3306/efficiency_test\") insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f664.85304117202759\u79d2 init(\"mysql://root:root@192.168.14.147:3306/efficiency_test\") # \u9ed8\u8ba4\u4f7f\u7528MySQLdb insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f664.692676067352295\u79d2 init(\"mysql+pymysql://root:root@192.168.14.147:3306/efficiency_test\") insert_many() # insert_many\u51fd\u6570\u5199\u5165\u8017\u65f666.991496086120605\u79d2 init(\"mysql+mysqldb://root:root@192.168.14.147:3306/efficiency_test\") insert_many() if __name__ == '__main__': main() main2()","title":"\u4ee3\u7801"},{"location":"Python/sqlalchemy%20%E5%A4%9A%E7%BB%84%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/","text":"sqlalchemy \u591a\u7ec4\u6761\u4ef6\u67e5\u8be2 \u00b6 sql \u5927\u6982\u662f\u8fd9\u4e2a\u6837\u5b50 \u00b6 select booking_id from booking where concat(num, ',' , name) in ('1,name1', '2,name2', '3,name3') \u7528sqlalchemy \u5b9e\u73b0 \u00b6 _list_data = ['1,name1', '2,name2', '3,name3'] session.query(Booking.booking_id).filter(Booking.num.concat(\",\").concat(Booking.name).notin_(_list_data))","title":"sqlalchemy \u591a\u7ec4\u6761\u4ef6\u67e5\u8be2"},{"location":"Python/sqlalchemy%20%E5%A4%9A%E7%BB%84%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/#sqlalchemy","text":"","title":"sqlalchemy \u591a\u7ec4\u6761\u4ef6\u67e5\u8be2"},{"location":"Python/sqlalchemy%20%E5%A4%9A%E7%BB%84%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/#sql","text":"select booking_id from booking where concat(num, ',' , name) in ('1,name1', '2,name2', '3,name3')","title":"sql \u5927\u6982\u662f\u8fd9\u4e2a\u6837\u5b50"},{"location":"Python/sqlalchemy%20%E5%A4%9A%E7%BB%84%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/#sqlalchemy_1","text":"_list_data = ['1,name1', '2,name2', '3,name3'] session.query(Booking.booking_id).filter(Booking.num.concat(\",\").concat(Booking.name).notin_(_list_data))","title":"\u7528sqlalchemy \u5b9e\u73b0"},{"location":"Python/win10%E8%87%AA%E5%B8%A6Ubuntu%E4%BD%BF%E7%94%A8win10%E7%9A%84python%E6%96%B9%E5%BC%8F/","text":"win10\u81ea\u5e26Ubuntu\u4f7f\u7528win10\u7684python\u65b9\u5f0f \u00b6 windows cmd \u4e0b \u627e\u5230python \u4e0e pip \u6587\u4ef6\u5b58\u653e\u5730\u5740 \u03bb where.exe python D:\\Python36\\python.exe \u03bb where.exe pip D:\\Python36\\Scripts\\pip.exe windows \u81ea\u5e26ubuntu\u4e0b \uff08Windows\u7cfb\u7edf\u76d8\u7b26\u5b58\u5728 /mnt/ \u4e2d\uff09 :~$ sudo ln -s /mnt/d/Python36/Scripts/pip.exe /usr/bin/wpip :~$ sudo ln -s /mnt/d/Python36/python.exe /usr/bin/wpython","title":"win10\u81ea\u5e26Ubuntu\u4f7f\u7528win10\u7684python\u65b9\u5f0f"},{"location":"Python/win10%E8%87%AA%E5%B8%A6Ubuntu%E4%BD%BF%E7%94%A8win10%E7%9A%84python%E6%96%B9%E5%BC%8F/#win10ubuntuwin10python","text":"windows cmd \u4e0b \u627e\u5230python \u4e0e pip \u6587\u4ef6\u5b58\u653e\u5730\u5740 \u03bb where.exe python D:\\Python36\\python.exe \u03bb where.exe pip D:\\Python36\\Scripts\\pip.exe windows \u81ea\u5e26ubuntu\u4e0b \uff08Windows\u7cfb\u7edf\u76d8\u7b26\u5b58\u5728 /mnt/ \u4e2d\uff09 :~$ sudo ln -s /mnt/d/Python36/Scripts/pip.exe /usr/bin/wpip :~$ sudo ln -s /mnt/d/Python36/python.exe /usr/bin/wpython","title":"win10\u81ea\u5e26Ubuntu\u4f7f\u7528win10\u7684python\u65b9\u5f0f"},{"location":"Python/%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88console%EF%BC%89%E6%89%A7%E8%A1%8Cpython%E6%96%87%E4%BB%B6%E3%80%81debug%20python%E7%A8%8B%E5%BA%8F/","text":"\u5728\u63a7\u5236\u53f0\uff08console\uff09\u6267\u884cpython\u6587\u4ef6\u3001debug python\u7a0b\u5e8f \u00b6 \u6267\u884c \u00b6 \u5728IPython console\u91cc\u5148cd\u5230test.py\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c\u518drun test.py\u3002\u6ce8\u610f\u4f7f\u7528\u7684\u662f\u547d\u4ee4run \u800c\u4e0d\u662f\u547d\u4ee4python\u3002 debug \u00b6 \u6817\u5b50\uff1a debugfile('/home/1/tensor2tensor/tensor2tensor/bin/t2t-datagen', args='--problem=image_mnist --data_dir=~/t2t_data --tmp_dir=~/t2t_data/tmp',wdir='/home/1/tensor2tensor/tensor2tensor/bin') ipython\u4e0b cd /home pwd ls help(runfile) Help on function runfile in module _pydev_bundle.pydev_umd: runfile(filename, args=None, wdir=None, is_module=False, global_vars=None) Run filename args: command line arguments (string) wdir: working directory run test.py \u66f4\u591a\u8d44\u6599 https://www.jianshu.com/p/63175f02749b","title":"\u5728\u63a7\u5236\u53f0\uff08console\uff09\u6267\u884cpython\u6587\u4ef6\u3001debug python\u7a0b\u5e8f"},{"location":"Python/%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88console%EF%BC%89%E6%89%A7%E8%A1%8Cpython%E6%96%87%E4%BB%B6%E3%80%81debug%20python%E7%A8%8B%E5%BA%8F/#consolepythondebug-python","text":"","title":"\u5728\u63a7\u5236\u53f0\uff08console\uff09\u6267\u884cpython\u6587\u4ef6\u3001debug python\u7a0b\u5e8f"},{"location":"Python/%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88console%EF%BC%89%E6%89%A7%E8%A1%8Cpython%E6%96%87%E4%BB%B6%E3%80%81debug%20python%E7%A8%8B%E5%BA%8F/#_1","text":"\u5728IPython console\u91cc\u5148cd\u5230test.py\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c\u518drun test.py\u3002\u6ce8\u610f\u4f7f\u7528\u7684\u662f\u547d\u4ee4run \u800c\u4e0d\u662f\u547d\u4ee4python\u3002","title":"\u6267\u884c"},{"location":"Python/%E5%9C%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88console%EF%BC%89%E6%89%A7%E8%A1%8Cpython%E6%96%87%E4%BB%B6%E3%80%81debug%20python%E7%A8%8B%E5%BA%8F/#debug","text":"\u6817\u5b50\uff1a debugfile('/home/1/tensor2tensor/tensor2tensor/bin/t2t-datagen', args='--problem=image_mnist --data_dir=~/t2t_data --tmp_dir=~/t2t_data/tmp',wdir='/home/1/tensor2tensor/tensor2tensor/bin') ipython\u4e0b cd /home pwd ls help(runfile) Help on function runfile in module _pydev_bundle.pydev_umd: runfile(filename, args=None, wdir=None, is_module=False, global_vars=None) Run filename args: command line arguments (string) wdir: working directory run test.py \u66f4\u591a\u8d44\u6599 https://www.jianshu.com/p/63175f02749b","title":"debug"},{"location":"Python/%E5%AE%89%E8%A3%85mysqlclient%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/","text":"\u5b89\u88c5mysqlclient\u62a5\u9519\u95ee\u9898 \u00b6 \u4e0b\u8f7d\u5730\u5740 \u5173\u952e\u5b57\u6bb5 mysqlclient python Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe \u89e3\u51b3musql.c \u4e0d\u5b58\u5728\u95ee\u9898 \u672c\u8eab\u5e94\u8be5\u5728 https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient \u8fd9\u4e2a\u7f51\u9875\u4e2d\u4e0b\u8f7d\u7684 \u4e0d\u77e5\u9053\u600e\u4e48\u4e86\u8fd9\u4e2a\u7f51\u9875\u4e2d\u7684\u8d44\u6e90\u4e0b\u8f7d\u4e0d\u4e86 error: command \u2018C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe\u2019 failed with exit status 2 \u6ce8\u610f\u5b89\u88c5\u76ee\u5f55\u4e0d\u80fd\u6709\u4e2d\u6587 \u7248\u672c\u5bf9\u5e94python\u7248\u672c \u547d\u4ee4\u4e3a\uff1a pip install *.whl","title":"\u5b89\u88c5mysqlclient\u62a5\u9519\u95ee\u9898"},{"location":"Python/%E5%AE%89%E8%A3%85mysqlclient%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/#mysqlclient","text":"\u4e0b\u8f7d\u5730\u5740 \u5173\u952e\u5b57\u6bb5 mysqlclient python Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe \u89e3\u51b3musql.c \u4e0d\u5b58\u5728\u95ee\u9898 \u672c\u8eab\u5e94\u8be5\u5728 https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient \u8fd9\u4e2a\u7f51\u9875\u4e2d\u4e0b\u8f7d\u7684 \u4e0d\u77e5\u9053\u600e\u4e48\u4e86\u8fd9\u4e2a\u7f51\u9875\u4e2d\u7684\u8d44\u6e90\u4e0b\u8f7d\u4e0d\u4e86 error: command \u2018C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe\u2019 failed with exit status 2 \u6ce8\u610f\u5b89\u88c5\u76ee\u5f55\u4e0d\u80fd\u6709\u4e2d\u6587 \u7248\u672c\u5bf9\u5e94python\u7248\u672c \u547d\u4ee4\u4e3a\uff1a pip install *.whl","title":"\u5b89\u88c5mysqlclient\u62a5\u9519\u95ee\u9898"},{"location":"Python/%E7%94%A8pycharm%E8%A3%85%E5%8C%85%E5%87%BA%E7%8E%B0pycharm%20The%20repository%20located%20at%20pypi%20douban%20com%20is%20not%20a/","text":"\u7528pycharm\u88c5\u5305\u51fa\u73b0pycharm The repository located at pypi douban com is not a \u00b6 pycharm The repository located at pypi.douban.com is not a trusted or secure \u00b6 \u9996\u5148\u5728window\u7684\u6587\u4ef6\u5939\u7a97\u53e3\u8f93\u5165 \uff1a %APPDATA% \u7136\u540e\u5728\u5e95\u4e0b\u65b0\u5efapip\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5230pip\u6587\u4ef6\u5939\u91cc\u9762\u53bb\u65b0\u5efa\u4e2apip.ini,\u7136\u540e\u518d\u91cc\u9762\u8f93\u5165\u5185\u5bb9[global] timeout = 6000 index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com \u4f5c\u8005\uff1a\u6458\u661f\u8fb0Li \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/38341743/answer/128985546 \u6765\u6e90\uff1a\u77e5\u4e4e","title":"\u7528pycharm\u88c5\u5305\u51fa\u73b0pycharm The repository located at pypi douban com is not a"},{"location":"Python/%E7%94%A8pycharm%E8%A3%85%E5%8C%85%E5%87%BA%E7%8E%B0pycharm%20The%20repository%20located%20at%20pypi%20douban%20com%20is%20not%20a/#pycharmpycharm-the-repository-located-at-pypi-douban-com-is-not-a","text":"","title":"\u7528pycharm\u88c5\u5305\u51fa\u73b0pycharm The repository located at pypi douban com is not a"},{"location":"Python/%E7%94%A8pycharm%E8%A3%85%E5%8C%85%E5%87%BA%E7%8E%B0pycharm%20The%20repository%20located%20at%20pypi%20douban%20com%20is%20not%20a/#pycharm-the-repository-located-at-pypidoubancom-is-not-a-trusted-or-secure","text":"\u9996\u5148\u5728window\u7684\u6587\u4ef6\u5939\u7a97\u53e3\u8f93\u5165 \uff1a %APPDATA% \u7136\u540e\u5728\u5e95\u4e0b\u65b0\u5efapip\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5230pip\u6587\u4ef6\u5939\u91cc\u9762\u53bb\u65b0\u5efa\u4e2apip.ini,\u7136\u540e\u518d\u91cc\u9762\u8f93\u5165\u5185\u5bb9[global] timeout = 6000 index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com \u4f5c\u8005\uff1a\u6458\u661f\u8fb0Li \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/38341743/answer/128985546 \u6765\u6e90\uff1a\u77e5\u4e4e","title":"pycharm The repository located at pypi.douban.com is not a trusted or secure"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/","text":"\u89e3\u51b3Flask-SQLAlchemy 2006 MySQL server has gone away \u95ee\u9898 \u00b6 \u914d\u7f6e\u4fe1\u606f \u00b6 python3 3.6 Flask-SQLAlchemy 2.3.2 win10 \u62a5\u9519: \u00b6 -----> [2018-07-16 17:22:42,041] [ERROR] [base.py<131>-base.run_job]: Job \"auto_rollback.<locals>.wrapper (trigger: interval[0:30:00], next run at: 2018-07-16 17:52:42 CST)\" raised an exception Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute cursor.execute(statement, parameters) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 250, in execute self.errorhandler(self, exc, value) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler raise errorvalue File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 247, in execute res = self._query(query) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 411, in _query rowcount = self._do_query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 374, in _do_query db.query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 277, in query _mysql.connection.query(self, query) _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away') The above exception was the direct cause of the following exception: Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/apscheduler/executors/base.py\", line 125, in run_job retval = job.func(*job.args, **job.kwargs) File \"/home/zza/eth_crawler/crawler_script/utils.py\", line 28, in wrapper raise err File \"/home/zza/eth_crawler/crawler_script/utils.py\", line 24, in wrapper return func(*args, **kwargs) File \"/home/zza/eth_crawler/crawler_script/token_tracker.py\", line 240, in update db_address = db.session.query(Token.contract_address).filter(None == Token.total_supply).all() File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2773, in all return list(self) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2925, in __iter__ return self._execute_and_instances(context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2948, in _execute_and_instances result = conn.execute(querycontext.statement, self._params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 948, in execute return meth(self, multiparams, params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection return connection._execute_clauseelement(self, multiparams, params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement compiled_sql, distilled_params File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception exc_info File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause reraise(type(exception), exception, tb=exc_tb, cause=cause) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise raise value.with_traceback(tb) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute cursor.execute(statement, parameters) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 250, in execute self.errorhandler(self, exc, value) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler raise errorvalue File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 247, in execute res = self._query(query) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 411, in _query rowcount = self._do_query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 374, in _do_query db.query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 277, in query _mysql.connection.query(self, query) sqlalchemy.exc.OperationalError: (_mysql_exceptions.OperationalError) (2006, 'MySQL server has gone away') [SQL: 'SELECT token.contract_address AS token_contract_address \\nFROM token \\nWHERE token.total_supply IS NULL'] (Background on this error at: http://sqlalche.me/e/e3q8) \u5df2\u4f7f\u7528\u89e3\u51b3\u65b9\u6848 \u00b6 \u51fa\u9519\u540e\u9700\u8981rollback\uff0c\u4e3a\u4e86\u540e\u7eed\u7a0b\u5e8f\u80fd\u8fd0\u884c\uff0c\u7ed9\u6bcf\u4e2a\u6d89\u53casql\u8bed\u53e5\u7684\u51fd\u6570\u7528\u4e86 \u88c5\u9970\u5668 \u3002 \u00b6 def auto_rollback(func): def wrapper(*args, **kwargs): try: return func(*args, **kwargs) except Exception as err: db.session.rollback() log.error(err) raise err return wrapper \u6cbb\u6807\u4e0d\u6cbb\u672c\u7cfb\u5217 \u628aSQLALCHEMY_POOL_RECYCLE\u8bbe\u6210\u4e00\u4e2a\u8f83\u5c0f\u7684\u6570 \u00b6 app.config['SQLALCHEMY_POOL_SIZE'] = 128 # \u7ebf\u7a0b\u6c60\u5927\u5c0f app.config['SQLALCHEMY_POOL_TIMEOUT'] = 90 # \u8d85\u65f6\u65f6\u95f4 app.config['SQLALCHEMY_POOL_RECYCLE'] = 3 # \u7a7a\u95f2\u8fde\u63a5\u81ea\u52a8\u56de\u6536\u65f6\u95f4 app.config['SQLALCHEMY_MAX_OVERFLOW'] = 128 # \u63a7\u5236\u5728\u8fde\u63a5\u6c60\u8fbe\u5230\u6700\u5927\u503c\u540e\u53ef\u4ee5\u521b\u5efa\u7684\u8fde\u63a5\u6570\u3002 \u6839\u636e\u9519\u8bef\u65e5\u5fd7 \u5728\u9700\u8981\u7528\u6570\u636e\u5e93\u7684\u5730\u65b9\u5148\u65ad\u5f00\u8fde\u63a5 \u00b6 db.session.remove() \u5931\u8d25 * #####\u5c06\u5355\u72ec\u7684sql\u8bed\u53e5\u6539\u6210nopool\u8fde\u63a5\u65b9\u5f0f class nullpool_SQLAlchemy(SQLAlchemy): def apply_driver_hacks(self, app, info, options): super(nullpool_SQLAlchemy, self).apply_driver_hacks(app, info, options) from sqlalchemy.pool import NullPool options['poolclass'] = NullPool del options['pool_size'] \u89e3\u51b3\u540e\u53c8\u4f1a\u51fa\u73b0 sqlalchemy.exc.InvalidRequestError: Can't reconnect until invalid transaction is rolled back \u5931\u8d25 \u6bcf\u6b21\u8bbf\u95ee\u6570\u636e\u5e93\u91cd\u65b0\u751f\u6210sqlalchemy\u8fde\u63a5 \u2714 \u00b6 from xxx import SQLAlchemy from xxx import app db = SQLAlchemy(app) \u6700\u7c97\u66b4\u4f46\u662f\u6700\u6709\u6548\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u95ee\u9898\u56f0\u6270\u4e86\u5c06\u8fd13\u5468\uff0cemmm \u89e3\u51b3\u53c2\u8003 \u00b6 flask-alchemy mysql gone away\u95ee\u9898 \u8fde\u63a5\u91cd\u8fde \u7a0b\u5e8f\u65b9\u5411 MySQL server has gone away \u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5 mysql\u53cd\u5411 nullpool_SQLAlchemy\u4ee3\u7801 \u6570\u636e\u5e93\u65b9\u5411\u89e3\u51b3\u95ee\u9898","title":"\u89e3\u51b3Flask-SQLAlchemy 2006 MySQL server has gone away \u95ee\u9898"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#flask-sqlalchemy-2006-mysql-server-has-gone-away","text":"","title":"\u89e3\u51b3Flask-SQLAlchemy 2006 MySQL server has gone away \u95ee\u9898"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#_1","text":"python3 3.6 Flask-SQLAlchemy 2.3.2 win10","title":"\u914d\u7f6e\u4fe1\u606f"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#_2","text":"-----> [2018-07-16 17:22:42,041] [ERROR] [base.py<131>-base.run_job]: Job \"auto_rollback.<locals>.wrapper (trigger: interval[0:30:00], next run at: 2018-07-16 17:52:42 CST)\" raised an exception Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute cursor.execute(statement, parameters) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 250, in execute self.errorhandler(self, exc, value) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler raise errorvalue File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 247, in execute res = self._query(query) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 411, in _query rowcount = self._do_query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 374, in _do_query db.query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 277, in query _mysql.connection.query(self, query) _mysql_exceptions.OperationalError: (2006, 'MySQL server has gone away') The above exception was the direct cause of the following exception: Traceback (most recent call last): File \"/usr/local/lib/python3.6/site-packages/apscheduler/executors/base.py\", line 125, in run_job retval = job.func(*job.args, **job.kwargs) File \"/home/zza/eth_crawler/crawler_script/utils.py\", line 28, in wrapper raise err File \"/home/zza/eth_crawler/crawler_script/utils.py\", line 24, in wrapper return func(*args, **kwargs) File \"/home/zza/eth_crawler/crawler_script/token_tracker.py\", line 240, in update db_address = db.session.query(Token.contract_address).filter(None == Token.total_supply).all() File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2773, in all return list(self) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2925, in __iter__ return self._execute_and_instances(context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 2948, in _execute_and_instances result = conn.execute(querycontext.statement, self._params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 948, in execute return meth(self, multiparams, params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection return connection._execute_clauseelement(self, multiparams, params) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement compiled_sql, distilled_params File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception exc_info File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause reraise(type(exception), exception, tb=exc_tb, cause=cause) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 186, in reraise raise value.with_traceback(tb) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context context) File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute cursor.execute(statement, parameters) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 250, in execute self.errorhandler(self, exc, value) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 50, in defaulterrorhandler raise errorvalue File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 247, in execute res = self._query(query) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 411, in _query rowcount = self._do_query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/cursors.py\", line 374, in _do_query db.query(q) File \"/usr/local/lib/python3.6/site-packages/MySQLdb/connections.py\", line 277, in query _mysql.connection.query(self, query) sqlalchemy.exc.OperationalError: (_mysql_exceptions.OperationalError) (2006, 'MySQL server has gone away') [SQL: 'SELECT token.contract_address AS token_contract_address \\nFROM token \\nWHERE token.total_supply IS NULL'] (Background on this error at: http://sqlalche.me/e/e3q8)","title":"\u62a5\u9519:"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#_3","text":"","title":"\u5df2\u4f7f\u7528\u89e3\u51b3\u65b9\u6848"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#rollbacksql","text":"def auto_rollback(func): def wrapper(*args, **kwargs): try: return func(*args, **kwargs) except Exception as err: db.session.rollback() log.error(err) raise err return wrapper \u6cbb\u6807\u4e0d\u6cbb\u672c\u7cfb\u5217","title":"\u51fa\u9519\u540e\u9700\u8981rollback\uff0c\u4e3a\u4e86\u540e\u7eed\u7a0b\u5e8f\u80fd\u8fd0\u884c\uff0c\u7ed9\u6bcf\u4e2a\u6d89\u53casql\u8bed\u53e5\u7684\u51fd\u6570\u7528\u4e86\u88c5\u9970\u5668\u3002"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#sqlalchemy_pool_recycle","text":"app.config['SQLALCHEMY_POOL_SIZE'] = 128 # \u7ebf\u7a0b\u6c60\u5927\u5c0f app.config['SQLALCHEMY_POOL_TIMEOUT'] = 90 # \u8d85\u65f6\u65f6\u95f4 app.config['SQLALCHEMY_POOL_RECYCLE'] = 3 # \u7a7a\u95f2\u8fde\u63a5\u81ea\u52a8\u56de\u6536\u65f6\u95f4 app.config['SQLALCHEMY_MAX_OVERFLOW'] = 128 # \u63a7\u5236\u5728\u8fde\u63a5\u6c60\u8fbe\u5230\u6700\u5927\u503c\u540e\u53ef\u4ee5\u521b\u5efa\u7684\u8fde\u63a5\u6570\u3002","title":"\u628aSQLALCHEMY_POOL_RECYCLE\u8bbe\u6210\u4e00\u4e2a\u8f83\u5c0f\u7684\u6570"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#_4","text":"db.session.remove() \u5931\u8d25 * #####\u5c06\u5355\u72ec\u7684sql\u8bed\u53e5\u6539\u6210nopool\u8fde\u63a5\u65b9\u5f0f class nullpool_SQLAlchemy(SQLAlchemy): def apply_driver_hacks(self, app, info, options): super(nullpool_SQLAlchemy, self).apply_driver_hacks(app, info, options) from sqlalchemy.pool import NullPool options['poolclass'] = NullPool del options['pool_size'] \u89e3\u51b3\u540e\u53c8\u4f1a\u51fa\u73b0 sqlalchemy.exc.InvalidRequestError: Can't reconnect until invalid transaction is rolled back \u5931\u8d25","title":"\u6839\u636e\u9519\u8bef\u65e5\u5fd7 \u5728\u9700\u8981\u7528\u6570\u636e\u5e93\u7684\u5730\u65b9\u5148\u65ad\u5f00\u8fde\u63a5"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#sqlalchemy","text":"from xxx import SQLAlchemy from xxx import app db = SQLAlchemy(app) \u6700\u7c97\u66b4\u4f46\u662f\u6700\u6709\u6548\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u95ee\u9898\u56f0\u6270\u4e86\u5c06\u8fd13\u5468\uff0cemmm","title":"\u6bcf\u6b21\u8bbf\u95ee\u6570\u636e\u5e93\u91cd\u65b0\u751f\u6210sqlalchemy\u8fde\u63a5 \u2714"},{"location":"Python/%E8%A7%A3%E5%86%B3Flask-SQLAlchemy%202006%20MySQL%20server%20has%20gone%20away%20%E9%97%AE%E9%A2%98/#_5","text":"flask-alchemy mysql gone away\u95ee\u9898 \u8fde\u63a5\u91cd\u8fde \u7a0b\u5e8f\u65b9\u5411 MySQL server has gone away \u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5 mysql\u53cd\u5411 nullpool_SQLAlchemy\u4ee3\u7801 \u6570\u636e\u5e93\u65b9\u5411\u89e3\u51b3\u95ee\u9898","title":"\u89e3\u51b3\u53c2\u8003"},{"location":"Python/%E8%BD%AC%20%E7%9B%98%E7%82%B9%20Python%20%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%86%B7%E7%9F%A5%E8%AF%86/","text":"\u8f6c \u76d8\u70b9 Python \u4e2d\u7684\u90a3\u4e9b\u51b7\u77e5\u8bc6 \u00b6 https://www.cnblogs.com/wongbingming/p/9393186.html","title":"\u8f6c \u76d8\u70b9 Python \u4e2d\u7684\u90a3\u4e9b\u51b7\u77e5\u8bc6"},{"location":"Python/%E8%BD%AC%20%E7%9B%98%E7%82%B9%20Python%20%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%86%B7%E7%9F%A5%E8%AF%86/#python","text":"https://www.cnblogs.com/wongbingming/p/9393186.html","title":"\u8f6c \u76d8\u70b9 Python \u4e2d\u7684\u90a3\u4e9b\u51b7\u77e5\u8bc6"},{"location":"%E7%BC%96%E7%A8%8B/Jenkins%20pipeline%20%E6%9E%84%E5%BB%BA%E5%90%8E%E5%8F%91%E7%BB%99%E6%8F%90%E4%BA%A4%E8%80%85%28%E8%A7%A6%E5%8F%91%E8%80%85%29%E9%82%AE%E4%BB%B6/","text":"Jenkins pipeline \u6784\u5efa\u540e\u53d1\u7ed9\u63d0\u4ea4\u8005(\u89e6\u53d1\u8005)\u90ae\u4ef6 \u00b6 \u6bcf\u6b21Jenkins\u8d70pipeline\u81ea\u52a8\u6784\u5efa\u65f6\uff0c\u6211\u9700\u8981\u7b49\u5f85\u6784\u5efa\u5b8c\u6210\uff0c\u4e0a\u5230\u6d4b\u8bd5\u73af\u5883\u540e\u518d\u901a\u77e5\u6d4b\u8bd5\u6216\u8005\u9879\u76ee\u53bb\u8ddf\u8fd1\uff0c \u6700\u5f00\u59cb\u60f3\u7528\u673a\u5668\u4eba\uff0c\u540e\u9762\u53d1\u73b0\u53d1\u90ae\u4ef6\u5f88\u7b80\u5355\uff0c\u6211\u4e5f\u6709\u90ae\u4ef6\u5f39\u7a97\u63d0\u793a\uff0c\u6240\u4ee5\u8ba9jenkins\u505a\u5b8c\u540e\u53d1\u4e2a\u505a\u5b8c\u7684\u90ae\u4ef6\u7ed9\u6211\u3002 Jenkinsfile\u4e2d\u589e\u52a0\u4e24\u6bb5\u4ee3\u7801: \u5728stage\u8be5\u5728\u7684\u5730\u65b9\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801 stage(\"get GIT_COMMIT_NAME/GIT_COMMIT_EMAIL\") { agent any steps { checkout scm script { // Git committer name env.git_commit_name = sh (script: \"git --no-pager show -s --format='%an' $GIT_COMMIT\",returnStdout: true).trim() echo \"Git committer name: ${GIT_COMMIT_NAME}\" // Git committer email env.git_commit_email = sh (script: \"git --no-pager show -s --format='%ae' $GIT_COMMIT\",returnStdout: true).trim() echo \"Git committer email: ${GIT_COMMIT_EMAIL}\" } } \u5728\u6587\u4ef6\u6700\u540e\u4e00\u4e2a\u82b1\u62ec\u53f7\u524d\u9762\u589e\u52a0\u4e0b\u5217\u4ee3\u7801 post { success { script { mail to: \"${env.git_commit_email}\", subject: \"[Jenkins] SUCCESSFUL: ${env.appName} [${env.BUILD_NUMBER}]\", body: \"\"\"SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' \u5206\u652f: ${env.BRANCH_NAME} JOB_NAME: ${env.JOB_NAME} \u63d0\u4ea4\u4eba: ${env.git_commit_name} \u6784\u5efa\u6b21\u6570\uff1a${env.BUILD_NUMBER} console output\uff1a${env.BUILD_URL} \"\"\" } } failure { script { mail to: \"${env.git_commit_email}\", subject: \"[Jenkins] FAILURE: ${env.appName} [${env.BUILD_NUMBER}]\", body: \"\"\"<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' \u5206\u652f: ${env.BRANCH_NAME} JOB_NAME: ${env.JOB_NAME} \u63d0\u4ea4\u4eba: ${env.git_commit_name} \u6784\u5efa\u6b21\u6570\uff1a${env.BUILD_NUMBER} console output\uff1a${env.BUILD_URL} \"\"\" } } } \u4ece\u6b64\u81ea\u52a8\u6784\u5efa \u518d\u4e5f\u4e0d\u7528\u76ef\u7740\u6784\u5efa\u4efb\u52a1\u662f\u5426\u7ed3\u675f\u518d\u901a\u77e5\u4e0b\u6e38\u5de5\u4f5c\u4eba\u5458\u5566 \u00b6","title":"Jenkins pipeline \u6784\u5efa\u540e\u53d1\u7ed9\u63d0\u4ea4\u8005(\u89e6\u53d1\u8005)\u90ae\u4ef6"},{"location":"%E7%BC%96%E7%A8%8B/Jenkins%20pipeline%20%E6%9E%84%E5%BB%BA%E5%90%8E%E5%8F%91%E7%BB%99%E6%8F%90%E4%BA%A4%E8%80%85%28%E8%A7%A6%E5%8F%91%E8%80%85%29%E9%82%AE%E4%BB%B6/#jenkins-pipeline","text":"\u6bcf\u6b21Jenkins\u8d70pipeline\u81ea\u52a8\u6784\u5efa\u65f6\uff0c\u6211\u9700\u8981\u7b49\u5f85\u6784\u5efa\u5b8c\u6210\uff0c\u4e0a\u5230\u6d4b\u8bd5\u73af\u5883\u540e\u518d\u901a\u77e5\u6d4b\u8bd5\u6216\u8005\u9879\u76ee\u53bb\u8ddf\u8fd1\uff0c \u6700\u5f00\u59cb\u60f3\u7528\u673a\u5668\u4eba\uff0c\u540e\u9762\u53d1\u73b0\u53d1\u90ae\u4ef6\u5f88\u7b80\u5355\uff0c\u6211\u4e5f\u6709\u90ae\u4ef6\u5f39\u7a97\u63d0\u793a\uff0c\u6240\u4ee5\u8ba9jenkins\u505a\u5b8c\u540e\u53d1\u4e2a\u505a\u5b8c\u7684\u90ae\u4ef6\u7ed9\u6211\u3002 Jenkinsfile\u4e2d\u589e\u52a0\u4e24\u6bb5\u4ee3\u7801: \u5728stage\u8be5\u5728\u7684\u5730\u65b9\u6dfb\u52a0\u4e0b\u5217\u4ee3\u7801 stage(\"get GIT_COMMIT_NAME/GIT_COMMIT_EMAIL\") { agent any steps { checkout scm script { // Git committer name env.git_commit_name = sh (script: \"git --no-pager show -s --format='%an' $GIT_COMMIT\",returnStdout: true).trim() echo \"Git committer name: ${GIT_COMMIT_NAME}\" // Git committer email env.git_commit_email = sh (script: \"git --no-pager show -s --format='%ae' $GIT_COMMIT\",returnStdout: true).trim() echo \"Git committer email: ${GIT_COMMIT_EMAIL}\" } } \u5728\u6587\u4ef6\u6700\u540e\u4e00\u4e2a\u82b1\u62ec\u53f7\u524d\u9762\u589e\u52a0\u4e0b\u5217\u4ee3\u7801 post { success { script { mail to: \"${env.git_commit_email}\", subject: \"[Jenkins] SUCCESSFUL: ${env.appName} [${env.BUILD_NUMBER}]\", body: \"\"\"SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' \u5206\u652f: ${env.BRANCH_NAME} JOB_NAME: ${env.JOB_NAME} \u63d0\u4ea4\u4eba: ${env.git_commit_name} \u6784\u5efa\u6b21\u6570\uff1a${env.BUILD_NUMBER} console output\uff1a${env.BUILD_URL} \"\"\" } } failure { script { mail to: \"${env.git_commit_email}\", subject: \"[Jenkins] FAILURE: ${env.appName} [${env.BUILD_NUMBER}]\", body: \"\"\"<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' \u5206\u652f: ${env.BRANCH_NAME} JOB_NAME: ${env.JOB_NAME} \u63d0\u4ea4\u4eba: ${env.git_commit_name} \u6784\u5efa\u6b21\u6570\uff1a${env.BUILD_NUMBER} console output\uff1a${env.BUILD_URL} \"\"\" } } }","title":"Jenkins pipeline \u6784\u5efa\u540e\u53d1\u7ed9\u63d0\u4ea4\u8005(\u89e6\u53d1\u8005)\u90ae\u4ef6"},{"location":"%E7%BC%96%E7%A8%8B/Jenkins%20pipeline%20%E6%9E%84%E5%BB%BA%E5%90%8E%E5%8F%91%E7%BB%99%E6%8F%90%E4%BA%A4%E8%80%85%28%E8%A7%A6%E5%8F%91%E8%80%85%29%E9%82%AE%E4%BB%B6/#_1","text":"","title":"\u4ece\u6b64\u81ea\u52a8\u6784\u5efa \u518d\u4e5f\u4e0d\u7528\u76ef\u7740\u6784\u5efa\u4efb\u52a1\u662f\u5426\u7ed3\u675f\u518d\u901a\u77e5\u4e0b\u6e38\u5de5\u4f5c\u4eba\u5458\u5566"},{"location":"%E7%BC%96%E7%A8%8B/Sphinx%20%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99nonlocal%20open_cite_tag/","text":"Sphinx \u7f16\u8bd1\u62a5\u9519nonlocal open_cite_tag \u00b6 \u7ebf\u4e0a\u81ea\u52a8\u7f16\u8bd1\u65f6\u51fa\u73b0\u9519\u8bef SyntaxError: invalid syntax \u8c37\u6b4c\u4e0a\u641c nonlocal open_cite_tag \u6ca1\u6709\u4efb\u4f55\u76f8\u5173\u4fe1\u606f Running Sphinx v1.7.9 loading translations [zh_CN]... done Traceback (most recent call last): File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/cmdline.py\", line 303, in main args.warningiserror, args.tags, args.verbosity, args.jobs) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/application.py\", line 191, in __init__ self.setup_extension(extension) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/application.py\", line 411, in setup_extension self.registry.load_extension(self, extname) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/registry.py\", line 315, in load_extension mod = __import__(extname, None, None, ['setup']) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/nbsphinx.py\", line 1088 nonlocal open_cite_tag ^ SyntaxError: invalid syntax Exception occurred: File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/registry.py\", line 315, in load_extension mod = __import__(extname, None, None, ['setup']) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/nbsphinx.py\", line 1088 nonlocal open_cite_tag ^ SyntaxError: invalid syntax The full traceback has been saved in /tmp/sphinx-err-cnpEVe.log, if you want to report the issue to the developers. Please also report this if it was a user error, so that a better error message can be provided next time. A bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks! \u5bf9\u7167\u540e\u53d1\u73b0 nbsphinx ==0.3.5\u65f6\u4f1a\u6210\u529f requirements.txt \u6587\u4ef6\u52a0\u4e0a\u7248\u672c\u9650\u5236\u5c31ok * cat requirements.txt Sphinx watchdog sphinx_rtd_theme nbsphinx ==0.3.5 jupyter_client","title":"Sphinx \u7f16\u8bd1\u62a5\u9519nonlocal open_cite_tag"},{"location":"%E7%BC%96%E7%A8%8B/Sphinx%20%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99nonlocal%20open_cite_tag/#sphinx-nonlocal-open_cite_tag","text":"\u7ebf\u4e0a\u81ea\u52a8\u7f16\u8bd1\u65f6\u51fa\u73b0\u9519\u8bef SyntaxError: invalid syntax \u8c37\u6b4c\u4e0a\u641c nonlocal open_cite_tag \u6ca1\u6709\u4efb\u4f55\u76f8\u5173\u4fe1\u606f Running Sphinx v1.7.9 loading translations [zh_CN]... done Traceback (most recent call last): File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/cmdline.py\", line 303, in main args.warningiserror, args.tags, args.verbosity, args.jobs) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/application.py\", line 191, in __init__ self.setup_extension(extension) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/application.py\", line 411, in setup_extension self.registry.load_extension(self, extname) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/registry.py\", line 315, in load_extension mod = __import__(extname, None, None, ['setup']) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/nbsphinx.py\", line 1088 nonlocal open_cite_tag ^ SyntaxError: invalid syntax Exception occurred: File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/sphinx/registry.py\", line 315, in load_extension mod = __import__(extname, None, None, ['setup']) File \"/home/docs/checkouts/readthedocs.org/user_builds/rqalpha/envs/develop/local/lib/python2.7/site-packages/nbsphinx.py\", line 1088 nonlocal open_cite_tag ^ SyntaxError: invalid syntax The full traceback has been saved in /tmp/sphinx-err-cnpEVe.log, if you want to report the issue to the developers. Please also report this if it was a user error, so that a better error message can be provided next time. A bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks! \u5bf9\u7167\u540e\u53d1\u73b0 nbsphinx ==0.3.5\u65f6\u4f1a\u6210\u529f requirements.txt \u6587\u4ef6\u52a0\u4e0a\u7248\u672c\u9650\u5236\u5c31ok * cat requirements.txt Sphinx watchdog sphinx_rtd_theme nbsphinx ==0.3.5 jupyter_client","title":"Sphinx \u7f16\u8bd1\u62a5\u9519nonlocal open_cite_tag"},{"location":"%E7%BC%96%E7%A8%8B/StarUML%E7%A0%B4%E8%A7%A3/","text":"StarUML\u7834\u89e3 \u00b6 https://blog.csdn.net/the_victory/article/details/52781357 https://blog.csdn.net/the_victory/article/details/52781357 https://blog.csdn.net/the_victory/article/details/52781357 \u9996\u5148\u6253\u5f00\u4f60\u7684starUML\u5b89\u88c5\u76ee\u5f55\uff0c\u5e76\u627e\u5230LicenseManagerDomain.js,starUML\u662f\u7528NodeJS\u5199\u7684\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5224\u65ad\u6ce8\u518c\u7528\u6237\u7684\u6587\u4ef6\uff0c\u6211\u7684\u76ee\u5f55\u662f: D:\\Program Files (x86)\\StarUML\\www\\license\\node\\LicenseManagerDomain.js \u4fee\u6539\u8be5\u6587\u4ef6\uff0c\u627e\u5230\u7b2c24\u884c\uff0c\u52a0\u5165\u5982\u4e0b\u6240\u793a\u533a\u57df\u7684\u4ee3\u7801\u3002 function validate(PK, name, product, licenseKey) { var pk, decrypted; //edit by ChrisChang,\u52a0\u5165\u5982\u4e0b\u51e0\u884c return { name: \"Chang\",//\u968f\u610f product: \"StarUML\", licenseType: \"vip\", quantity: \"blog.csdn.net/the_victory\",//\u968f\u610f licenseKey: \"later equals never!\" }; //-------------END try { pk = new NodeRSA(PK); decrypted = pk.decrypt(licenseKey, 'utf8'); } catch (err) { return false; } var terms = decrypted.trim().split(\"\\n\"); if (terms[0] === name && terms[1] === product) { return { name: name, product: product, licenseType: terms[2], quantity: terms[3], licenseKey: licenseKey }; } else { return false; } } \u91cd\u542fstarUML\u9700\u8981\u5728help->Enter License\u9009\u9879\u91cc\u9762\u8f93\u5165\u4f60\u4ee3\u7801\u91cc\u5199\u7684name\u548clicensekey\u3002 \u91cd\u542fstarUML\uff0c\u4f60\u4f1a\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709\u63d0\u793a\u4e86\uff0c\u7136\u540e\u70b9\u51fbhelp->about starUML,\u7ed3\u679c\u5982\u4e0b","title":"StarUML\u7834\u89e3"},{"location":"%E7%BC%96%E7%A8%8B/StarUML%E7%A0%B4%E8%A7%A3/#staruml","text":"https://blog.csdn.net/the_victory/article/details/52781357 https://blog.csdn.net/the_victory/article/details/52781357 https://blog.csdn.net/the_victory/article/details/52781357 \u9996\u5148\u6253\u5f00\u4f60\u7684starUML\u5b89\u88c5\u76ee\u5f55\uff0c\u5e76\u627e\u5230LicenseManagerDomain.js,starUML\u662f\u7528NodeJS\u5199\u7684\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5224\u65ad\u6ce8\u518c\u7528\u6237\u7684\u6587\u4ef6\uff0c\u6211\u7684\u76ee\u5f55\u662f: D:\\Program Files (x86)\\StarUML\\www\\license\\node\\LicenseManagerDomain.js \u4fee\u6539\u8be5\u6587\u4ef6\uff0c\u627e\u5230\u7b2c24\u884c\uff0c\u52a0\u5165\u5982\u4e0b\u6240\u793a\u533a\u57df\u7684\u4ee3\u7801\u3002 function validate(PK, name, product, licenseKey) { var pk, decrypted; //edit by ChrisChang,\u52a0\u5165\u5982\u4e0b\u51e0\u884c return { name: \"Chang\",//\u968f\u610f product: \"StarUML\", licenseType: \"vip\", quantity: \"blog.csdn.net/the_victory\",//\u968f\u610f licenseKey: \"later equals never!\" }; //-------------END try { pk = new NodeRSA(PK); decrypted = pk.decrypt(licenseKey, 'utf8'); } catch (err) { return false; } var terms = decrypted.trim().split(\"\\n\"); if (terms[0] === name && terms[1] === product) { return { name: name, product: product, licenseType: terms[2], quantity: terms[3], licenseKey: licenseKey }; } else { return false; } } \u91cd\u542fstarUML\u9700\u8981\u5728help->Enter License\u9009\u9879\u91cc\u9762\u8f93\u5165\u4f60\u4ee3\u7801\u91cc\u5199\u7684name\u548clicensekey\u3002 \u91cd\u542fstarUML\uff0c\u4f60\u4f1a\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709\u63d0\u793a\u4e86\uff0c\u7136\u540e\u70b9\u51fbhelp->about starUML,\u7ed3\u679c\u5982\u4e0b","title":"StarUML\u7834\u89e3"},{"location":"%E7%BC%96%E7%A8%8B/Vim%E7%AC%94%E8%AE%B0/","text":"Vim \u7b14\u8bb0 \u00b6 \u63a8\u8350\u4e00\u4e0b vim\u7684\u89c6\u5c4f\u5b66\u4e60 \u73a9\u8f6cVim \u4ece\u653e\u5f03\u5230\u7231\u4e0d\u91ca\u624b - PegasusWang \u8fd9\u662f\u4e2a\u4eba\u5bf9PegasusWang\u89c6\u5c4f\u5b66\u4e60\u7b14\u8bb0 \u00b6 a append i insert o open a line below A append after line I insert before line O append a line above vs vertical split sp split \u666e\u901a\u9009\u62e9 v \u9009\u62e9\u884c V ctrl + v \u65b9\u5757\u9009\u62e9 y \u590d\u5236 ctrl + h \u5220\u9664\u4e0a\u4e00\u4e2a\u5b57\u7b26 ctrl + w \u5220\u9664\u4e0a\u4e00\u4e2a\u5355\u8bcd ctrl + u \u5220\u9664\u5f53\u524d\u884c ctrl + a \u8df3\u5230\u5f00\u5934 ctrl + e \u8df3\u5230\u7ed3\u5c3e \u5feb\u901f\u56de\u5230\u6700\u540e\u7f16\u8f91 gi \u00b6 w/W \u79fb\u5230\u4e0b\u4e00\u4e2aword/WORD \u5f00\u5934 e/E \u4e0b\u4e00\u4e2aword/WORD \u7ed3\u5c3e b/B \u56de\u5230\u4e0a\u4e00\u4e2aword/WORD \u5f00\u5934 backword f{char} \u79fb\u52a8\u5230char\u5b57\u7b26\u4e0a F{char} \u5411\u524d\u641c\u7d22 t{char} \u79fb\u52a8\u5230char\u7684\u524d\u9762\u5b57\u7b26\u4e0a ;,\u9009\u62e9\u4e0a\u4e00\u4e2a\u4e0b\u4e00\u4e2a 0 \u79fb\u52a8\u5230\u884c\u5934 ^\u79fb\u52a8\u5230\u884c\u5934\u975e\u7a7a\u767d $ \u79fb\u52a8\u5230\u884c\u5c3e g_\u79fb\u52a8\u5230\u884c\u5c3e\u975e\u7a7a\u767d () \u5728\u53e5\u5b50\u95f4\u79fb\u52a8 {} \u5728\u6bb5\u843d\u95f4\u79fb\u52a8 :help \u67e5\u770b\u5e2e\u52a9 gg/G \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u548c\u7ed3\u5c3e ctrl+o \u5feb\u901f\u8fd4\u56de H/M/L \u8df3\u5230\u5c4f\u5e55\u7684 Head / Middle / Lower Ctrl +u / Ctrl +f \u4e0a\u4e0b\u7ffb\u9875 upword / forward zz \u628a\u5f53\u524d\u884c\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u4e2d\u95f4 d \u914d\u5408\u4f7f\u7528\u5220\u9664\u4e00\u4e2a\u5355\u8bcd x \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 dw \u5220\u9664\u5355\u8bcd\u5149\u6807\u53ca\u4e4b\u540e\u7684 daw \u5220\u9664\u5355\u8bcd\u5305\u62ec\u4e4b\u540e\u7684\u7a7a\u683c diw \u5220\u9664\u5355\u8bcd r replace \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 R \u4e0d\u65ad\u66ff\u6362 s substitute \u63d2\u5165\u6a21\u5f0f S \u6574\u884c\u5220\u9664\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f c change c t {char} \u5220\u9664 \u5230 char \u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f / or ? \u5411\u524d\u5411\u540e\u641c\u7d22 n/N \u4e0a\u4e00\u4e2a \u4e0b\u4e00\u4e2a\u5339\u914d \u5411\u524d\u5411\u540e\u5339\u914d \u76f4\u63a5\u641c\u7d22\u5f53\u524d\u5149\u6807\u7684\u5355\u8bcd \u00b6 vim\u66ff\u6362\u547d\u4ee4 :[range] s[ubstitute]/{pattern}/{string}/[flags] range\u8868\u793a\u8303\u56f4 \u6bd4\u5982 :10, 20 \u8868\u793a10-20\u884c, %\u8868\u793a\u5168\u90e8 pattern\u662f\u8981\u66ff\u6362\u7684\u6a21\u5f0f\uff0cstring\u662f\u66ff\u6362\u540e\u6587\u672c Flags\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u6807\u5fd7 g(global) \u8868\u793a\u5168\u5c40\u8303\u56f4\u5185\u6267\u884c c(confirm) \u8868\u793a\u6bcf\u6b21\u786e\u8ba4 n \u62a5\u544a\u5339\u914d\u7684\u5230\u7684\u6b21\u6570\u800c\u4e0d\u66ff\u6362 \u53ef\u4ee5\u7528\u6765\u67e5\u8be2\u5339\u914d\u6b21\u6570 vim \u590d\u5236\u7c98\u8d34\u4e0e\u5bc4\u5b58\u5668 normal\u6a21\u5f0f\u4e0b\u590d\u5236\u7c98\u8d34\uff1a y(yank)\u590d\u5236 p(paste)\u7c98\u8d34 d \u5220\u9664 \u4f7f\u7528 d\u548cp \u7ec4\u5408\u53ef\u4ee5\u8fbe\u5230\u526a\u5207\u7684\u6548\u679c visual\u6a21\u5f0f\u4e0b\u9009\u62e9\uff0cnormal\u6a21\u5f0f\u4e0b\u518d\u4f7f\u7528p\u7c98\u8d34 yiw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd p\u7c98\u8d34 yy \u590d\u5236\u4e00\u884c p\u7c98\u8d34 dd \u5220\u9664\u4e00\u884c p\u7c98\u8d34 insert\u6a21\u5f0f\u4e0b\u7684\u7c98\u8d34 Ctrl+v(Windows) Cmd+v(MacOs) \u9f20\u6807\u53f3\u952e-\u7c98\u8d34 Ctrl + n / ctrl + p \u8865\u5168\u5355\u8bcd ctrl+x ctrl+f \u8865\u5168\u6587\u4ef6\u540d ctrl +x ctrl +o \u8865\u5168\u4ee3\u7801 Vim-plug","title":"Vim \u7b14\u8bb0"},{"location":"%E7%BC%96%E7%A8%8B/Vim%E7%AC%94%E8%AE%B0/#vim","text":"\u63a8\u8350\u4e00\u4e0b vim\u7684\u89c6\u5c4f\u5b66\u4e60 \u73a9\u8f6cVim \u4ece\u653e\u5f03\u5230\u7231\u4e0d\u91ca\u624b - PegasusWang","title":"Vim \u7b14\u8bb0"},{"location":"%E7%BC%96%E7%A8%8B/Vim%E7%AC%94%E8%AE%B0/#pegasuswang","text":"a append i insert o open a line below A append after line I insert before line O append a line above vs vertical split sp split \u666e\u901a\u9009\u62e9 v \u9009\u62e9\u884c V ctrl + v \u65b9\u5757\u9009\u62e9 y \u590d\u5236 ctrl + h \u5220\u9664\u4e0a\u4e00\u4e2a\u5b57\u7b26 ctrl + w \u5220\u9664\u4e0a\u4e00\u4e2a\u5355\u8bcd ctrl + u \u5220\u9664\u5f53\u524d\u884c ctrl + a \u8df3\u5230\u5f00\u5934 ctrl + e \u8df3\u5230\u7ed3\u5c3e","title":"\u8fd9\u662f\u4e2a\u4eba\u5bf9PegasusWang\u89c6\u5c4f\u5b66\u4e60\u7b14\u8bb0"},{"location":"%E7%BC%96%E7%A8%8B/Vim%E7%AC%94%E8%AE%B0/#gi","text":"w/W \u79fb\u5230\u4e0b\u4e00\u4e2aword/WORD \u5f00\u5934 e/E \u4e0b\u4e00\u4e2aword/WORD \u7ed3\u5c3e b/B \u56de\u5230\u4e0a\u4e00\u4e2aword/WORD \u5f00\u5934 backword f{char} \u79fb\u52a8\u5230char\u5b57\u7b26\u4e0a F{char} \u5411\u524d\u641c\u7d22 t{char} \u79fb\u52a8\u5230char\u7684\u524d\u9762\u5b57\u7b26\u4e0a ;,\u9009\u62e9\u4e0a\u4e00\u4e2a\u4e0b\u4e00\u4e2a 0 \u79fb\u52a8\u5230\u884c\u5934 ^\u79fb\u52a8\u5230\u884c\u5934\u975e\u7a7a\u767d $ \u79fb\u52a8\u5230\u884c\u5c3e g_\u79fb\u52a8\u5230\u884c\u5c3e\u975e\u7a7a\u767d () \u5728\u53e5\u5b50\u95f4\u79fb\u52a8 {} \u5728\u6bb5\u843d\u95f4\u79fb\u52a8 :help \u67e5\u770b\u5e2e\u52a9 gg/G \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u548c\u7ed3\u5c3e ctrl+o \u5feb\u901f\u8fd4\u56de H/M/L \u8df3\u5230\u5c4f\u5e55\u7684 Head / Middle / Lower Ctrl +u / Ctrl +f \u4e0a\u4e0b\u7ffb\u9875 upword / forward zz \u628a\u5f53\u524d\u884c\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u4e2d\u95f4 d \u914d\u5408\u4f7f\u7528\u5220\u9664\u4e00\u4e2a\u5355\u8bcd x \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 dw \u5220\u9664\u5355\u8bcd\u5149\u6807\u53ca\u4e4b\u540e\u7684 daw \u5220\u9664\u5355\u8bcd\u5305\u62ec\u4e4b\u540e\u7684\u7a7a\u683c diw \u5220\u9664\u5355\u8bcd r replace \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 R \u4e0d\u65ad\u66ff\u6362 s substitute \u63d2\u5165\u6a21\u5f0f S \u6574\u884c\u5220\u9664\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f c change c t {char} \u5220\u9664 \u5230 char \u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f / or ? \u5411\u524d\u5411\u540e\u641c\u7d22 n/N \u4e0a\u4e00\u4e2a \u4e0b\u4e00\u4e2a\u5339\u914d","title":"\u5feb\u901f\u56de\u5230\u6700\u540e\u7f16\u8f91 gi"},{"location":"%E7%BC%96%E7%A8%8B/Vim%E7%AC%94%E8%AE%B0/#_1","text":"vim\u66ff\u6362\u547d\u4ee4 :[range] s[ubstitute]/{pattern}/{string}/[flags] range\u8868\u793a\u8303\u56f4 \u6bd4\u5982 :10, 20 \u8868\u793a10-20\u884c, %\u8868\u793a\u5168\u90e8 pattern\u662f\u8981\u66ff\u6362\u7684\u6a21\u5f0f\uff0cstring\u662f\u66ff\u6362\u540e\u6587\u672c Flags\u6709\u51e0\u4e2a\u5e38\u7528\u7684\u6807\u5fd7 g(global) \u8868\u793a\u5168\u5c40\u8303\u56f4\u5185\u6267\u884c c(confirm) \u8868\u793a\u6bcf\u6b21\u786e\u8ba4 n \u62a5\u544a\u5339\u914d\u7684\u5230\u7684\u6b21\u6570\u800c\u4e0d\u66ff\u6362 \u53ef\u4ee5\u7528\u6765\u67e5\u8be2\u5339\u914d\u6b21\u6570 vim \u590d\u5236\u7c98\u8d34\u4e0e\u5bc4\u5b58\u5668 normal\u6a21\u5f0f\u4e0b\u590d\u5236\u7c98\u8d34\uff1a y(yank)\u590d\u5236 p(paste)\u7c98\u8d34 d \u5220\u9664 \u4f7f\u7528 d\u548cp \u7ec4\u5408\u53ef\u4ee5\u8fbe\u5230\u526a\u5207\u7684\u6548\u679c visual\u6a21\u5f0f\u4e0b\u9009\u62e9\uff0cnormal\u6a21\u5f0f\u4e0b\u518d\u4f7f\u7528p\u7c98\u8d34 yiw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd p\u7c98\u8d34 yy \u590d\u5236\u4e00\u884c p\u7c98\u8d34 dd \u5220\u9664\u4e00\u884c p\u7c98\u8d34 insert\u6a21\u5f0f\u4e0b\u7684\u7c98\u8d34 Ctrl+v(Windows) Cmd+v(MacOs) \u9f20\u6807\u53f3\u952e-\u7c98\u8d34 Ctrl + n / ctrl + p \u8865\u5168\u5355\u8bcd ctrl+x ctrl+f \u8865\u5168\u6587\u4ef6\u540d ctrl +x ctrl +o \u8865\u5168\u4ee3\u7801 Vim-plug","title":"\u5411\u524d\u5411\u540e\u5339\u914d \u76f4\u63a5\u641c\u7d22\u5f53\u524d\u5149\u6807\u7684\u5355\u8bcd"},{"location":"%E7%BC%96%E7%A8%8B/centos%20%E9%87%8D%E8%A3%85yum%E4%B8%8Epython/","text":"centos \u91cd\u88c5yum\u4e0epython \u00b6","title":"centos \u91cd\u88c5yum\u4e0epython"},{"location":"%E7%BC%96%E7%A8%8B/centos%20%E9%87%8D%E8%A3%85yum%E4%B8%8Epython/#centos-yumpython","text":"","title":"centos \u91cd\u88c5yum\u4e0epython"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","text":"frp \u670d\u52a1\u5668 \u6811\u8393\u6d3e \u5185\u7f51\u7a7f\u900f \u00b6 \u53c2\u8003\u81ea \u5229\u7528frp\u900f\u7a7f\u8bbf\u95ee\u5185\u7f51\u7684\u6811\u8393\u6d3e \u5b89\u88c5 \u00b6 \u670d\u52a1\u5668\u8bbe\u7f6e \u00b6 \u4e0b\u8f7d \u6700\u65b0\u7248frp\u7a0b\u5e8f \u89e3\u538b \u8bbe\u7f6efrps.ini \uff0c\u5927\u6982\u8bbe\u7f6e\u6210\u8fd9\u6837\uff1a [common] bind_addr = \u670d\u52a1\u5668ip bind_port = 7000 nohup ./frps -c ./frps.ini \u8dd1\u8d77\u7a0b\u5e8f \u8bbe\u7f6e\u5ba2\u6237\u7aef \u00b6 \u4e0b\u8f7d \u6700\u65b0\u7248frp\u7a0b\u5e8f \u89e3\u538bfrp\u5e76\u8bbe\u7f6efrpc.ini \uff0c\u5927\u6982\u8bbe\u7f6e\u6210\u8fd9\u6837\uff1a [common] server_addr = \u670d\u52a1\u5668ip server_port = 7000 [ssh] type = tcp local_ip = 127.0.0.1 local_port = 22 remote_port = 6000 3. nohup ./frpc -c ./frpc.ini \u8dd1\u8d77\u7a0b\u5e8f \u00b6 \u9a8c\u8bc1 \u00b6 ssh -oPort=7000 pi@\u670d\u52a1\u7aefip \uff0c\u6b63\u5e38\u7684\u8bdd\u5c06\u4ee5ssh\u7684\u65b9\u5f0f\u8fdb\u5165\u6811\u8393\u6d3e \u5f00\u673a\u81ea\u542f \u00b6 \u670d\u52a1\u7aef \u00b6 vim /etc/rc.local nohup /home/zza/frp_0.23.1_linux_amd64/frps -c /home/zza/frp_0.23.1_linux_amd64/frps.ini & \u5ba2\u6237\u7aef \u00b6 vim /etc/rc.local nohup /home/zza/frp_0.23.1_linux_arm/frpc -c /home/zza/frp_0.23.1_linux_arm/frpc.ini & \u4f7f\u7528 Systemd \u5b9e\u73b0\u81ea\u52a8\u542f\u52a8 frp \u00b6 Systemd,\u53ef\u4ee5\u4fdd\u8bc1\u5728\u6811\u8393\u6d3e\u610f\u5916\u91cd\u542f\u65f6,\u80fd\u81ea\u52a8\u542f\u52a8 frp \u76f8\u5173\u670d\u52a1.\u8fd9\u6837,\u6211\u4eec\u5c31\u4e0d\u7528\u6574\u5929\u63d0\u5fc3\u540a\u80c6,\u62c5\u5fc3\u5404\u79cd\u610f\u5916\u4e86. \u670d\u52a1\u7aef\u7ba1\u7406 frps \u00b6 \u9700\u8981\u5148 cd \u5230 frp \u89e3\u538b\u76ee\u5f55. cp frps /usr/local/bin/frps mkdir /etc/frp cp frps.ini /etc/frp/frps.ini \u7f16\u5199 frp service \u6587\u4ef6\uff0c\u4ee5 centos7 \u4e3a\u4f8b,\u9002\u7528\u4e8e debian vim /usr/lib/systemd/system/frps.service [Unit] Description=frps After=network.target [Service] TimeoutStartSec=30 ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini ExecStop=/bin/kill $MAINPID [Install] WantedBy=multi-user.target \u542f\u52a8 frp \u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable frps systemctl start frps systemctl status frps \u90e8\u5206\u670d\u52a1\u5668\u4e0a,\u53ef\u80fd\u9700\u8981\u52a0 .service \u540e\u7f00\u6765\u64cd\u4f5c,\u5373: systemctl enable frps.service systemctl start frps.service systemctl status frps.service \u6811\u8393\u6d3e\u7ba1\u7406 frpc \u00b6 \u9700\u8981\u5148 cd frp \u89e3\u538b\u76ee\u5f55. \u590d\u5236\u6587\u4ef6 cp frpc /usr/local/bin/frpc mkdir /etc/frp cp frpc.ini /etc/frp/frpc.ini \u7f16\u5199 frp service \u6587\u4ef6\uff0c\u4ee5 centos7 \u4e3a\u4f8b,\u9002\u7528\u4e8e debian vim /usr/lib/systemd/system/frpc.service [Unit] Description=frpc After=network.target [Service] TimeoutStartSec=30 ExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.ini ExecStop=/bin/kill $MAINPID [Install] WantedBy=multi-user.target \u542f\u52a8 frp \u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable frpc systemctl start frpc systemctl status frpc \u90e8\u5206\u670d\u52a1\u5668\u4e0a,\u53ef\u4ee5\u9700\u8981\u52a0 .service \u540e\u7f00\u6765\u64cd\u4f5c,\u5373: systemctl enable frpc.service systemctl start frpc.service systemctl status frpc.service \u6ce8\u610f: frps \u6216 frpc \u542f\u52a8\u65e0\u6548\u65f6,\u53ef\u4ee5\u5c1d\u8bd5\u5148\u505c\u6b62\u670d\u52a1,\u5982: systemctl stop frpc","title":"frp \u670d\u52a1\u5668 \u6811\u8393\u6d3e \u5185\u7f51\u7a7f\u900f"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#frp","text":"\u53c2\u8003\u81ea \u5229\u7528frp\u900f\u7a7f\u8bbf\u95ee\u5185\u7f51\u7684\u6811\u8393\u6d3e","title":"frp \u670d\u52a1\u5668 \u6811\u8393\u6d3e \u5185\u7f51\u7a7f\u900f"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_1","text":"","title":"\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_2","text":"\u4e0b\u8f7d \u6700\u65b0\u7248frp\u7a0b\u5e8f \u89e3\u538b \u8bbe\u7f6efrps.ini \uff0c\u5927\u6982\u8bbe\u7f6e\u6210\u8fd9\u6837\uff1a [common] bind_addr = \u670d\u52a1\u5668ip bind_port = 7000 nohup ./frps -c ./frps.ini \u8dd1\u8d77\u7a0b\u5e8f","title":"\u670d\u52a1\u5668\u8bbe\u7f6e"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_3","text":"\u4e0b\u8f7d \u6700\u65b0\u7248frp\u7a0b\u5e8f \u89e3\u538bfrp\u5e76\u8bbe\u7f6efrpc.ini \uff0c\u5927\u6982\u8bbe\u7f6e\u6210\u8fd9\u6837\uff1a [common] server_addr = \u670d\u52a1\u5668ip server_port = 7000 [ssh] type = tcp local_ip = 127.0.0.1 local_port = 22 remote_port = 6000","title":"\u8bbe\u7f6e\u5ba2\u6237\u7aef"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#3-nohup-frpc-c-frpcini","text":"","title":"3. nohup ./frpc -c ./frpc.ini \u8dd1\u8d77\u7a0b\u5e8f"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_4","text":"ssh -oPort=7000 pi@\u670d\u52a1\u7aefip \uff0c\u6b63\u5e38\u7684\u8bdd\u5c06\u4ee5ssh\u7684\u65b9\u5f0f\u8fdb\u5165\u6811\u8393\u6d3e","title":"\u9a8c\u8bc1"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_5","text":"","title":"\u5f00\u673a\u81ea\u542f"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_6","text":"vim /etc/rc.local nohup /home/zza/frp_0.23.1_linux_amd64/frps -c /home/zza/frp_0.23.1_linux_amd64/frps.ini &","title":"\u670d\u52a1\u7aef"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_7","text":"vim /etc/rc.local nohup /home/zza/frp_0.23.1_linux_arm/frpc -c /home/zza/frp_0.23.1_linux_arm/frpc.ini &","title":"\u5ba2\u6237\u7aef"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#systemd-frp","text":"Systemd,\u53ef\u4ee5\u4fdd\u8bc1\u5728\u6811\u8393\u6d3e\u610f\u5916\u91cd\u542f\u65f6,\u80fd\u81ea\u52a8\u542f\u52a8 frp \u76f8\u5173\u670d\u52a1.\u8fd9\u6837,\u6211\u4eec\u5c31\u4e0d\u7528\u6574\u5929\u63d0\u5fc3\u540a\u80c6,\u62c5\u5fc3\u5404\u79cd\u610f\u5916\u4e86.","title":"\u4f7f\u7528 Systemd \u5b9e\u73b0\u81ea\u52a8\u542f\u52a8 frp"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#frps","text":"\u9700\u8981\u5148 cd \u5230 frp \u89e3\u538b\u76ee\u5f55. cp frps /usr/local/bin/frps mkdir /etc/frp cp frps.ini /etc/frp/frps.ini \u7f16\u5199 frp service \u6587\u4ef6\uff0c\u4ee5 centos7 \u4e3a\u4f8b,\u9002\u7528\u4e8e debian vim /usr/lib/systemd/system/frps.service [Unit] Description=frps After=network.target [Service] TimeoutStartSec=30 ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini ExecStop=/bin/kill $MAINPID [Install] WantedBy=multi-user.target \u542f\u52a8 frp \u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable frps systemctl start frps systemctl status frps \u90e8\u5206\u670d\u52a1\u5668\u4e0a,\u53ef\u80fd\u9700\u8981\u52a0 .service \u540e\u7f00\u6765\u64cd\u4f5c,\u5373: systemctl enable frps.service systemctl start frps.service systemctl status frps.service","title":"\u670d\u52a1\u7aef\u7ba1\u7406 frps"},{"location":"%E7%BC%96%E7%A8%8B/frp%20%E6%9C%8D%E5%8A%A1%E5%99%A8%20%E6%A0%91%E8%8E%93%E6%B4%BE%20%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#frpc","text":"\u9700\u8981\u5148 cd frp \u89e3\u538b\u76ee\u5f55. \u590d\u5236\u6587\u4ef6 cp frpc /usr/local/bin/frpc mkdir /etc/frp cp frpc.ini /etc/frp/frpc.ini \u7f16\u5199 frp service \u6587\u4ef6\uff0c\u4ee5 centos7 \u4e3a\u4f8b,\u9002\u7528\u4e8e debian vim /usr/lib/systemd/system/frpc.service [Unit] Description=frpc After=network.target [Service] TimeoutStartSec=30 ExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.ini ExecStop=/bin/kill $MAINPID [Install] WantedBy=multi-user.target \u542f\u52a8 frp \u5e76\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable frpc systemctl start frpc systemctl status frpc \u90e8\u5206\u670d\u52a1\u5668\u4e0a,\u53ef\u4ee5\u9700\u8981\u52a0 .service \u540e\u7f00\u6765\u64cd\u4f5c,\u5373: systemctl enable frpc.service systemctl start frpc.service systemctl status frpc.service \u6ce8\u610f: frps \u6216 frpc \u542f\u52a8\u65e0\u6548\u65f6,\u53ef\u4ee5\u5c1d\u8bd5\u5148\u505c\u6b62\u670d\u52a1,\u5982: systemctl stop frpc","title":"\u6811\u8393\u6d3e\u7ba1\u7406 frpc"},{"location":"%E7%BC%96%E7%A8%8B/google.protobuf.Timestamp%20is%20not%20defined/","text":"google.protobuf.Timestamp is not defined \u00b6 \u9519\u8bef \u201cgoogle.protobuf.Timestamp\u201d is not defined. \u00b6 \u672c\u8d28\u4e0a\u5c31\u662f\u6ca1\u627e\u5230\u672c\u673aprotoc\u76ee\u5f55\u4e0b protoc\\include\\google\\protobuf\\timestamp.proto \u6587\u4ef6 \u7b80\u5355\u7c97\u66b4\u7684\u5c06 protoc\\include\\google google\u6587\u4ef6\u5939\u62f7\u8d1d\u8fc7\u6765\u5c31\u597d\u4e86 * protoc\u4e0b\u8f7d\u5730\u5740https://github.com/protocolbuffers/protobuf/releases/ \u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06google\u6587\u4ef6\u5939\u52a0\u5230\u73af\u5883\u53d8\u91cf\u91cc \u592a\u9ebb\u70e6\u4e0d\u5982\u590d\u5236\u6765\u7684\u723d\u5feb","title":"google.protobuf.Timestamp is not defined"},{"location":"%E7%BC%96%E7%A8%8B/google.protobuf.Timestamp%20is%20not%20defined/#googleprotobuftimestamp-is-not-defined","text":"","title":"google.protobuf.Timestamp is not defined"},{"location":"%E7%BC%96%E7%A8%8B/google.protobuf.Timestamp%20is%20not%20defined/#googleprotobuftimestamp-is-not-defined_1","text":"\u672c\u8d28\u4e0a\u5c31\u662f\u6ca1\u627e\u5230\u672c\u673aprotoc\u76ee\u5f55\u4e0b protoc\\include\\google\\protobuf\\timestamp.proto \u6587\u4ef6 \u7b80\u5355\u7c97\u66b4\u7684\u5c06 protoc\\include\\google google\u6587\u4ef6\u5939\u62f7\u8d1d\u8fc7\u6765\u5c31\u597d\u4e86 * protoc\u4e0b\u8f7d\u5730\u5740https://github.com/protocolbuffers/protobuf/releases/ \u5f53\u7136\u4e5f\u53ef\u4ee5\u5c06google\u6587\u4ef6\u5939\u52a0\u5230\u73af\u5883\u53d8\u91cf\u91cc \u592a\u9ebb\u70e6\u4e0d\u5982\u590d\u5236\u6765\u7684\u723d\u5feb","title":"\u9519\u8bef \"google.protobuf.Timestamp\" is not defined."},{"location":"%E7%BC%96%E7%A8%8B/mongodb%20%E6%8E%92%E5%BA%8F%20%E6%A0%B9%E6%8D%AE%20_id%20%E6%8F%92%E5%85%A5%20%E6%B5%8B%E8%AF%95/","text":"mongodb \u6392\u5e8f \u6839\u636e _id \u63d2\u5165 \u6d4b\u8bd5 \u00b6 \u9700\u6c42 \u00b6 \u63d2\u5165\u6570\u636e \u5728\u9ed8\u8ba4\u6392\u5e8f\u4e2d \u6570\u636e\u663e\u793a\u5728\u4e2d\u95f4\u800c\u4e0d\u662f\u6700\u540e \u5b9e\u9a8c\u601d\u8def\uff1a \u6309\u6b63\u5e38\u987a\u5e8f\u63d2\u5165x\u6761\u6570\u636e \u62ff\u7b2c\u4e00\u6761\u6570\u636e \u52a0\u5b57\u6bb5 id\u4e0d\u53d8 \u5220\u9664\u540e\u52a0\u5165 \u4ee3\u7801\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/1/3 11:37 # @Author : zza # @Email : 740713651@qq.com import datetime import time from pprint import pprint import pymongo from mongomock import ObjectId from tqdm import tqdm mongo_url = \"mongodb://127.0.0.1:27017\", 'sort_db' mongo_db = pymongo.MongoClient(mongo_url[0])[mongo_url[1]] def made_data(): mongo_db['demo'].drop() print(\"\u5f00\u59cb\u9020\u6570\u636e\") for i in tqdm(range(10)): time.sleep(1) mongo_db['demo'].insert({\"timestamp\": datetime.datetime.now()}) def set_data(): # \u4e4b\u524d\u60f3\u9020\u4e2a\u6570\u636e\u653e\u8fdb\u53bb \u4fdd\u5b58\u4e00\u4e0b \u5982\u4f55\u751f\u6210 _id # http://api.mongodb.com/python/current/api/bson/objectid.html pprint(list(mongo_db['demo'].find())) gen_time = datetime.datetime(2019, 1, 1, 14, 12, 26) dummy_id = ObjectId.from_datetime(gen_time) dummy_id = str(dummy_id)[:8] + \"5c2da85ffc904a3c84335788\"[8:] dummy_id = ObjectId(dummy_id) print(dummy_id) result = mongo_db['demo'].insert({\"_id\": dummy_id, \"info\": \"id made by python\", \"timestamp\": gen_time}) print(result) pprint(list(mongo_db['demo'].find())) pprint(list(mongo_db['demo'].find({}).sort([(\"_id\", -1)]))) def re_insert_first(): a = mongo_db['demo'].find()[0] mongo_db['demo'].delete_one({\"_id\": a[\"_id\"]}) a.update({\"info\": \"change by py\"}) mongo_db['demo'].insert(a) pprint(list(mongo_db['demo'].find())) made_data() # set_data() re_insert_first() \u53d1\u73b0\u8fd8\u662f\u4e0d\u884c \u540e\u671f\u7684\u89e3\u51b3\u65b9\u6848 \uff1a \u00b6 \u5728 \u6570\u636e\u91cf\u4e0d\u5927\u7684\u60c5\u51b5\u4e0b \u5220\u9664\u540e\u9762\u7684\u6570\u636e \u7136\u540e\u987a\u5e8f\u63d2\u5165","title":"mongodb \u6392\u5e8f \u6839\u636e _id \u63d2\u5165 \u6d4b\u8bd5"},{"location":"%E7%BC%96%E7%A8%8B/mongodb%20%E6%8E%92%E5%BA%8F%20%E6%A0%B9%E6%8D%AE%20_id%20%E6%8F%92%E5%85%A5%20%E6%B5%8B%E8%AF%95/#mongodb-_id","text":"","title":"mongodb \u6392\u5e8f \u6839\u636e _id \u63d2\u5165 \u6d4b\u8bd5"},{"location":"%E7%BC%96%E7%A8%8B/mongodb%20%E6%8E%92%E5%BA%8F%20%E6%A0%B9%E6%8D%AE%20_id%20%E6%8F%92%E5%85%A5%20%E6%B5%8B%E8%AF%95/#_1","text":"\u63d2\u5165\u6570\u636e \u5728\u9ed8\u8ba4\u6392\u5e8f\u4e2d \u6570\u636e\u663e\u793a\u5728\u4e2d\u95f4\u800c\u4e0d\u662f\u6700\u540e \u5b9e\u9a8c\u601d\u8def\uff1a \u6309\u6b63\u5e38\u987a\u5e8f\u63d2\u5165x\u6761\u6570\u636e \u62ff\u7b2c\u4e00\u6761\u6570\u636e \u52a0\u5b57\u6bb5 id\u4e0d\u53d8 \u5220\u9664\u540e\u52a0\u5165 \u4ee3\u7801\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/1/3 11:37 # @Author : zza # @Email : 740713651@qq.com import datetime import time from pprint import pprint import pymongo from mongomock import ObjectId from tqdm import tqdm mongo_url = \"mongodb://127.0.0.1:27017\", 'sort_db' mongo_db = pymongo.MongoClient(mongo_url[0])[mongo_url[1]] def made_data(): mongo_db['demo'].drop() print(\"\u5f00\u59cb\u9020\u6570\u636e\") for i in tqdm(range(10)): time.sleep(1) mongo_db['demo'].insert({\"timestamp\": datetime.datetime.now()}) def set_data(): # \u4e4b\u524d\u60f3\u9020\u4e2a\u6570\u636e\u653e\u8fdb\u53bb \u4fdd\u5b58\u4e00\u4e0b \u5982\u4f55\u751f\u6210 _id # http://api.mongodb.com/python/current/api/bson/objectid.html pprint(list(mongo_db['demo'].find())) gen_time = datetime.datetime(2019, 1, 1, 14, 12, 26) dummy_id = ObjectId.from_datetime(gen_time) dummy_id = str(dummy_id)[:8] + \"5c2da85ffc904a3c84335788\"[8:] dummy_id = ObjectId(dummy_id) print(dummy_id) result = mongo_db['demo'].insert({\"_id\": dummy_id, \"info\": \"id made by python\", \"timestamp\": gen_time}) print(result) pprint(list(mongo_db['demo'].find())) pprint(list(mongo_db['demo'].find({}).sort([(\"_id\", -1)]))) def re_insert_first(): a = mongo_db['demo'].find()[0] mongo_db['demo'].delete_one({\"_id\": a[\"_id\"]}) a.update({\"info\": \"change by py\"}) mongo_db['demo'].insert(a) pprint(list(mongo_db['demo'].find())) made_data() # set_data() re_insert_first() \u53d1\u73b0\u8fd8\u662f\u4e0d\u884c","title":"\u9700\u6c42"},{"location":"%E7%BC%96%E7%A8%8B/mongodb%20%E6%8E%92%E5%BA%8F%20%E6%A0%B9%E6%8D%AE%20_id%20%E6%8F%92%E5%85%A5%20%E6%B5%8B%E8%AF%95/#_2","text":"\u5728 \u6570\u636e\u91cf\u4e0d\u5927\u7684\u60c5\u51b5\u4e0b \u5220\u9664\u540e\u9762\u7684\u6570\u636e \u7136\u540e\u987a\u5e8f\u63d2\u5165","title":"\u540e\u671f\u7684\u89e3\u51b3\u65b9\u6848 \uff1a"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/","text":"python\u8bbe\u8ba1\u8d44\u6599 \u00b6 [ ] \u8868\u793a\u535a\u4e3b\u6ca1\u6709\u5b66\u8fc7\u7684 [x] \u8868\u793a\u535a\u4e3b\u5df2\u7ecf\u5b66\u8fc7\u7684 6\u5927\u8bbe\u8ba1\u539f\u5219 \u00b6 \u4ecb\u7ecd\u7684\u6bd4\u8f83\u8be6\u7ec6 \u9759\u4e0b\u5fc3\u770b [x] \u8bbe\u8ba1\u6a21\u5f0f\u516d\u5927\u539f\u5219 23\u79cd\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \u6bcf\u79cd\u8bbe\u8ba1\u6a21\u5f0f \u5148\u770b1 \u518d\u770b2 \u56fe\u89e323\u79cd\u8bbe\u8ba1\u6a21\u5f0f \u65e0\u4ee3\u7801 1 \u300a\u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f\u300bPython\u7248\u4ee3\u7801\u5b9e\u73b0 23\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4ee3\u7801\u5b9e\u73b0 2 \u4e8c\u5341\u4e09\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u53ca\u5176python\u5b9e\u73b0 \u6570\u5b66 \u00b6 [ ] \u6982\u7387\u8bba [ ] \u6570\u7406\u7edf\u8ba1 [x] \u9ad8\u7b49\u6570\u5b66 [x] \u7ebf\u6027\u4ee3\u6570 [x] \u79bb\u6563\u6570\u5b66 [x] \u590d\u53d8\u51fd\u6570\u4e0e\u79ef\u5206\u53d8\u6362 \u7f16\u7a0b\u65b9\u9762 \u00b6 [ ] \u6570\u636e\u6316\u6398 [ ] \u4eba\u5de5\u667a\u80fd [ ] \u5206\u5e03\u5f0f\u8ba1\u7b97 [x] \u6570\u636e\u7ed3\u6784 [x] \u7b97\u6cd5\u5206\u6790\u4e0e\u8bbe\u8ba1 [x] \u8f6f\u4ef6\u5de5\u7a0b [x] \u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1 [x] \u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406 [x] \u8f6f\u4ef6\u6d4b\u8bd5 [x] \u8ba1\u7b97\u673a\u7f51\u7edc [x] \u7f16\u8bd1\u539f\u7406 [x] \u64cd\u4f5c\u7cfb\u7edf [x] \u4fe1\u606f\u5b89\u5168\u6280\u672f\u6982\u8bba [x] \u6570\u636e\u5e93 Oracle [x] \u6570\u636e\u5e93 SQLServer \u5176\u4ed6\u8bfe \u00b6 [x] \u5c31\u4e1a\u6307\u5bfc [x] \u8ba1\u7b97\u673a\u64cd\u4f5c\u53ca\u7ef4\u62a4 \u786c\u4ef6\u65b9\u9762\u7565","title":"python\u8bbe\u8ba1\u8d44\u6599"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#python","text":"[ ] \u8868\u793a\u535a\u4e3b\u6ca1\u6709\u5b66\u8fc7\u7684 [x] \u8868\u793a\u535a\u4e3b\u5df2\u7ecf\u5b66\u8fc7\u7684","title":"python\u8bbe\u8ba1\u8d44\u6599"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#6","text":"\u4ecb\u7ecd\u7684\u6bd4\u8f83\u8be6\u7ec6 \u9759\u4e0b\u5fc3\u770b [x] \u8bbe\u8ba1\u6a21\u5f0f\u516d\u5927\u539f\u5219","title":"6\u5927\u8bbe\u8ba1\u539f\u5219"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#23","text":"\u6bcf\u79cd\u8bbe\u8ba1\u6a21\u5f0f \u5148\u770b1 \u518d\u770b2 \u56fe\u89e323\u79cd\u8bbe\u8ba1\u6a21\u5f0f \u65e0\u4ee3\u7801 1 \u300a\u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f\u300bPython\u7248\u4ee3\u7801\u5b9e\u73b0 23\u8bbe\u8ba1\u6a21\u5f0f\u7684\u4ee3\u7801\u5b9e\u73b0 2 \u4e8c\u5341\u4e09\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u53ca\u5176python\u5b9e\u73b0","title":"23\u79cd\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#_1","text":"[ ] \u6982\u7387\u8bba [ ] \u6570\u7406\u7edf\u8ba1 [x] \u9ad8\u7b49\u6570\u5b66 [x] \u7ebf\u6027\u4ee3\u6570 [x] \u79bb\u6563\u6570\u5b66 [x] \u590d\u53d8\u51fd\u6570\u4e0e\u79ef\u5206\u53d8\u6362","title":"\u6570\u5b66"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#_2","text":"[ ] \u6570\u636e\u6316\u6398 [ ] \u4eba\u5de5\u667a\u80fd [ ] \u5206\u5e03\u5f0f\u8ba1\u7b97 [x] \u6570\u636e\u7ed3\u6784 [x] \u7b97\u6cd5\u5206\u6790\u4e0e\u8bbe\u8ba1 [x] \u8f6f\u4ef6\u5de5\u7a0b [x] \u9762\u5411\u5bf9\u8c61\u7cfb\u7edf\u5206\u6790\u4e0e\u8bbe\u8ba1 [x] \u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406 [x] \u8f6f\u4ef6\u6d4b\u8bd5 [x] \u8ba1\u7b97\u673a\u7f51\u7edc [x] \u7f16\u8bd1\u539f\u7406 [x] \u64cd\u4f5c\u7cfb\u7edf [x] \u4fe1\u606f\u5b89\u5168\u6280\u672f\u6982\u8bba [x] \u6570\u636e\u5e93 Oracle [x] \u6570\u636e\u5e93 SQLServer","title":"\u7f16\u7a0b\u65b9\u9762"},{"location":"%E7%BC%96%E7%A8%8B/python%E8%AE%BE%E8%AE%A1%E8%B5%84%E6%96%99/#_3","text":"[x] \u5c31\u4e1a\u6307\u5bfc [x] \u8ba1\u7b97\u673a\u64cd\u4f5c\u53ca\u7ef4\u62a4 \u786c\u4ef6\u65b9\u9762\u7565","title":"\u5176\u4ed6\u8bfe"},{"location":"%E7%BC%96%E7%A8%8B/ss/","text":"ss \u00b6 \u5b89\u88c5 \u00b6 pip install shadowsocks cd /etc/ vim /etc/shadowsocks.json \u8d34\u8d34\u4e0b\u9762\u7684\u914d\u7f6e\uff1a { \"server\":\"0.0.0.0\", \"server_port\":8381, \"local_address\": \"127.0.0.1\", \"local_port\":1080, \"password\":\"a123456\", \"timeout\":300, \"method\":\"aes-256-cfb\", \"fast_open\": true, \"workers\": 1 } \u5f00\u542f \u00b6 sudo ssserver -c /etc/shadowsocks.json -d start \u5f00\u673a\u81ea\u542f \u00b6 \u8003\u8651\u5230\u5982\u679cVPS\u88ab\u91cd\u542f\uff08\u5b9e\u9645\u4e0a\u53ea\u4f1a\u4f60\u81ea\u5df1\u91cd\u542f\u2026\u2026\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06shadowsocks\u52a0\u5165\u5f00\u673a\u542f\u52a8\u9879\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a vim /etc/rc.local \u7136\u540e\u5728exit 0\u4e4b\u524d\u52a0\u5165 sudo ssserver -c /etc/shadowsocks.json -d start \u7136\u540e\u91cd\u542fVPS\uff1a sudo reboot now \u91cd\u542f\u540e\u67e5\u770b\u8fdb\u7a0b\uff1a ps aux | grep shadowsocks \u5982\u679cshadowsocks\u6b63\u5e38\u8fd0\u884c\uff0c\u8868\u660e\u8bbe\u7f6e\u6210\u529f\u3002 \u505c\u6b62\u670d\u52a1\u7528 sudo ssserver -c /etc/shadowsocks.json -d stop \u65e5\u5fd7 tailf /var/log/shadowsocks.log https://www.cnblogs.com/Eason1024/p/8177665.html","title":"ss"},{"location":"%E7%BC%96%E7%A8%8B/ss/#ss","text":"","title":"ss"},{"location":"%E7%BC%96%E7%A8%8B/ss/#_1","text":"pip install shadowsocks cd /etc/ vim /etc/shadowsocks.json \u8d34\u8d34\u4e0b\u9762\u7684\u914d\u7f6e\uff1a { \"server\":\"0.0.0.0\", \"server_port\":8381, \"local_address\": \"127.0.0.1\", \"local_port\":1080, \"password\":\"a123456\", \"timeout\":300, \"method\":\"aes-256-cfb\", \"fast_open\": true, \"workers\": 1 }","title":"\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/ss/#_2","text":"sudo ssserver -c /etc/shadowsocks.json -d start","title":"\u5f00\u542f"},{"location":"%E7%BC%96%E7%A8%8B/ss/#_3","text":"\u8003\u8651\u5230\u5982\u679cVPS\u88ab\u91cd\u542f\uff08\u5b9e\u9645\u4e0a\u53ea\u4f1a\u4f60\u81ea\u5df1\u91cd\u542f\u2026\u2026\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06shadowsocks\u52a0\u5165\u5f00\u673a\u542f\u52a8\u9879\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a vim /etc/rc.local \u7136\u540e\u5728exit 0\u4e4b\u524d\u52a0\u5165 sudo ssserver -c /etc/shadowsocks.json -d start \u7136\u540e\u91cd\u542fVPS\uff1a sudo reboot now \u91cd\u542f\u540e\u67e5\u770b\u8fdb\u7a0b\uff1a ps aux | grep shadowsocks \u5982\u679cshadowsocks\u6b63\u5e38\u8fd0\u884c\uff0c\u8868\u660e\u8bbe\u7f6e\u6210\u529f\u3002 \u505c\u6b62\u670d\u52a1\u7528 sudo ssserver -c /etc/shadowsocks.json -d stop \u65e5\u5fd7 tailf /var/log/shadowsocks.log https://www.cnblogs.com/Eason1024/p/8177665.html","title":"\u5f00\u673a\u81ea\u542f"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/","text":"windows\u4e0a\u7684docker \u00b6 \u5b89\u88c5 \u00b6 \u4e0b\u8f7d\u5730\u5740 \u6211\u7684windows\u4e0a\u88c5\u4e86wsl2 \u9ed8\u8ba4\u70b9\u4e0b\u4e00\u6b65\u5c31\u597d\u4e86 \u5b89\u88c5\u5b8c\u6210\u540e\u987a\u624b\u8bbe\u7f6eP\u2026 ps. wsl telnet 127.0.0.1 9999 \u5931\u8d25 \u6211\u6539\u6210\u4e86\u672c\u673aip \u975e\u5e38\u7684\u667a\u80fd\u3002\u3002\u3002 \u8bd5\u73a9 \u00b6 \u5728docker\u7f51\u7ad9\u4e0a\u4e0b\u4e2a python\u955c\u50cf \u73a9\u73a9 docker pull python:3.8 docker run --name docker-tutorial python:3.8 python -c \"print('Hello, World!')\" docker rm docker-tutorial docker run --name docker-tutorial python:3.8 python -c \"import os;print(os.listdir('.'))\" -v $PWD:/usr/src/myapp -w /usr/src/myapp docker rm docker-tutorial -v $PWD/myapp:/usr/src/myapp: \u5c06\u4e3b\u673a\u4e2d\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 myapp \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /usr/src/myapp\u3002 -w /usr/src/myapp: \u6307\u5b9a\u5bb9\u5668\u7684 /usr/src/myapp \u76ee\u5f55\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002 \u5b89\u88c5python\u73af\u5883\u5e76\u4fdd\u5b58 \u00b6 docker run --name -it jupyter-dev python:3.8 bash pip config set global.index-url https://pypi.douban.com/simple pip install jupyter exit docker ps -a docker commit jupyter-dev jupyter-dev:version1 docker images docker run -d -p 8888:8888 --restart=always --name jupyter jupyter-dev:version1 jupyter-notebook --ip='*' --port=8888 --allow-root --no-browser --NotebookApp.token='' \u5173\u95ed docker stop jupyter docker rm jupyter pycharm \u00b6 \u627e\u4e0d\u5230 docker-machine EN-\u627e\u4e0d\u5230 docker-machine \u5efa\u8bae\u88c5\u5728windows\u4e0a \u914d\u7f6epython\u89e3\u91ca\u5668 \u53d1\u73b0\u5e76\u4e0d\u597d\u7528 \u7f51\u4e0a\u6559\u7a0b \u6bd4\u8f83\u597d\u7528 \u4e0d\u8fc7\u5df2\u7ecf\u53ef\u4ee5\u6109\u5feb\u7684debug\u4e86 kubectl \u00b6 \u5148\u88c5\u4e2a\u547d\u4ee4\u8865\u5168 echo \"source <(kubectl completion zsh)\" >> ~/.zshrc source ~/.zshrc \u627e\u5230\u4f60\u60f3\u8fde\u63a5\u7684kubectl\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6 \u6bd4\u5982\u6211\u7684\u5728\u670d\u52a1\u5668\u4e0a rsync -avz root@192.168.20.65:/root/.kube/config /root/.kube/config rsync -avz root@192.168.20.65:/root/.minikube/ca.crt /root/.minikube/ca.crt rsync -avz root@192.168.20.65:/root/.minikube/profiles/minikube/client.crt /root/.minikube/profiles/minikube/client.crt rsync -avz root@192.168.20.65:/root/.minikube/profiles/minikube/client.key /root/.minikube/profiles/minikube/client.key \u7136\u540e kubectl get pods \u4f60\u5c31\u4f1a\u53d1\u73b0\u90fd\u5728\u4f60\u672c\u673a\u4e0a\u770b\u5f97\u5230\u4e86 \u7136\u540e\u5c31\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e2a\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u542f\u52a8\u3002 kubectl get pods contest-jiantou-64b9cd5597-kvbjp -o yaml","title":"windows\u4e0a\u7684docker"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#windowsdocker","text":"","title":"windows\u4e0a\u7684docker"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#_1","text":"\u4e0b\u8f7d\u5730\u5740 \u6211\u7684windows\u4e0a\u88c5\u4e86wsl2 \u9ed8\u8ba4\u70b9\u4e0b\u4e00\u6b65\u5c31\u597d\u4e86 \u5b89\u88c5\u5b8c\u6210\u540e\u987a\u624b\u8bbe\u7f6eP\u2026 ps. wsl telnet 127.0.0.1 9999 \u5931\u8d25 \u6211\u6539\u6210\u4e86\u672c\u673aip \u975e\u5e38\u7684\u667a\u80fd\u3002\u3002\u3002","title":"\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#_2","text":"\u5728docker\u7f51\u7ad9\u4e0a\u4e0b\u4e2a python\u955c\u50cf \u73a9\u73a9 docker pull python:3.8 docker run --name docker-tutorial python:3.8 python -c \"print('Hello, World!')\" docker rm docker-tutorial docker run --name docker-tutorial python:3.8 python -c \"import os;print(os.listdir('.'))\" -v $PWD:/usr/src/myapp -w /usr/src/myapp docker rm docker-tutorial -v $PWD/myapp:/usr/src/myapp: \u5c06\u4e3b\u673a\u4e2d\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 myapp \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /usr/src/myapp\u3002 -w /usr/src/myapp: \u6307\u5b9a\u5bb9\u5668\u7684 /usr/src/myapp \u76ee\u5f55\u4e3a\u5de5\u4f5c\u76ee\u5f55\u3002","title":"\u8bd5\u73a9"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#python","text":"docker run --name -it jupyter-dev python:3.8 bash pip config set global.index-url https://pypi.douban.com/simple pip install jupyter exit docker ps -a docker commit jupyter-dev jupyter-dev:version1 docker images docker run -d -p 8888:8888 --restart=always --name jupyter jupyter-dev:version1 jupyter-notebook --ip='*' --port=8888 --allow-root --no-browser --NotebookApp.token='' \u5173\u95ed docker stop jupyter docker rm jupyter","title":"\u5b89\u88c5python\u73af\u5883\u5e76\u4fdd\u5b58"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#pycharm","text":"\u627e\u4e0d\u5230 docker-machine EN-\u627e\u4e0d\u5230 docker-machine \u5efa\u8bae\u88c5\u5728windows\u4e0a \u914d\u7f6epython\u89e3\u91ca\u5668 \u53d1\u73b0\u5e76\u4e0d\u597d\u7528 \u7f51\u4e0a\u6559\u7a0b \u6bd4\u8f83\u597d\u7528 \u4e0d\u8fc7\u5df2\u7ecf\u53ef\u4ee5\u6109\u5feb\u7684debug\u4e86","title":"pycharm"},{"location":"%E7%BC%96%E7%A8%8B/windows%E4%B8%8A%E7%9A%84docker/#kubectl","text":"\u5148\u88c5\u4e2a\u547d\u4ee4\u8865\u5168 echo \"source <(kubectl completion zsh)\" >> ~/.zshrc source ~/.zshrc \u627e\u5230\u4f60\u60f3\u8fde\u63a5\u7684kubectl\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6 \u6bd4\u5982\u6211\u7684\u5728\u670d\u52a1\u5668\u4e0a rsync -avz root@192.168.20.65:/root/.kube/config /root/.kube/config rsync -avz root@192.168.20.65:/root/.minikube/ca.crt /root/.minikube/ca.crt rsync -avz root@192.168.20.65:/root/.minikube/profiles/minikube/client.crt /root/.minikube/profiles/minikube/client.crt rsync -avz root@192.168.20.65:/root/.minikube/profiles/minikube/client.key /root/.minikube/profiles/minikube/client.key \u7136\u540e kubectl get pods \u4f60\u5c31\u4f1a\u53d1\u73b0\u90fd\u5728\u4f60\u672c\u673a\u4e0a\u770b\u5f97\u5230\u4e86 \u7136\u540e\u5c31\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e2a\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u542f\u52a8\u3002 kubectl get pods contest-jiantou-64b9cd5597-kvbjp -o yaml","title":"kubectl"},{"location":"%E7%BC%96%E7%A8%8B/zsh%E5%AE%89%E8%A3%85/","text":"zsh\u5b89\u88c5 \u00b6 \u6709\u591a\u597d\u7528\u2026\u81ea\u884c\u767e\u5ea6 SH\u5b89\u88c5\u811a\u672c \u00b6 \u547d\u4ee4\u4e0d\u662f\u6253\u9519\u4e86 \u76f8\u540c\u547d\u4ee4\u786e\u5b9e\u9700\u8981\u8fd0\u884c\u4e24\u904d export http_proxy=\"http://192.168.100.228:9999\" export https_proxy=\"http://192.168.100.228:9999\" sh -c \"$(curl -fsSL https://github.com/revir/river-zsh-config/raw/master/install.sh)\" sh -c \"$(curl -fsSL https://github.com/revir/river-zsh-config/raw/master/install.sh)\" source ~/.zshrc \u81ea\u52a8\u5b89\u88c5 \u00b6 zsh oh my zsh \u5f69\u8272\u547d\u4ee4 \u5386\u53f2\u63d0\u793a sh\u811a\u672c\u6240\u5c5egithub\u9879\u76ee bug\u4fee\u590d \u6267\u884c\u7b2c\u4e09\u6b65\u7684\u65f6\u5019\u4f1a\u62a5\u9519 \u9700\u8981\u53bb\u4fee\u6539\u4e0b\u6587\u4ef6 \u6ce8\u91ca\u7ea2\u8272\u7684\u8fd9\u4e00\u884c","title":"zsh\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/zsh%E5%AE%89%E8%A3%85/#zsh","text":"\u6709\u591a\u597d\u7528\u2026\u81ea\u884c\u767e\u5ea6","title":"zsh\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/zsh%E5%AE%89%E8%A3%85/#sh","text":"\u547d\u4ee4\u4e0d\u662f\u6253\u9519\u4e86 \u76f8\u540c\u547d\u4ee4\u786e\u5b9e\u9700\u8981\u8fd0\u884c\u4e24\u904d export http_proxy=\"http://192.168.100.228:9999\" export https_proxy=\"http://192.168.100.228:9999\" sh -c \"$(curl -fsSL https://github.com/revir/river-zsh-config/raw/master/install.sh)\" sh -c \"$(curl -fsSL https://github.com/revir/river-zsh-config/raw/master/install.sh)\" source ~/.zshrc","title":"SH\u5b89\u88c5\u811a\u672c"},{"location":"%E7%BC%96%E7%A8%8B/zsh%E5%AE%89%E8%A3%85/#_1","text":"zsh oh my zsh \u5f69\u8272\u547d\u4ee4 \u5386\u53f2\u63d0\u793a sh\u811a\u672c\u6240\u5c5egithub\u9879\u76ee bug\u4fee\u590d \u6267\u884c\u7b2c\u4e09\u6b65\u7684\u65f6\u5019\u4f1a\u62a5\u9519 \u9700\u8981\u53bb\u4fee\u6539\u4e0b\u6587\u4ef6 \u6ce8\u91ca\u7ea2\u8272\u7684\u8fd9\u4e00\u884c","title":"\u81ea\u52a8\u5b89\u88c5"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/","text":"\u4ee3\u66ffsupervisor - gosuv \u00b6 \u9879\u76ee\u7684\u90e8\u7f72 \u00b6 \u4e00. \u5b89\u88c5gosuv Git\u5730\u5740 \u00b6 \u4ece \u8fd9\u91cc \u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6d4b\u8bd5\u542f\u52a8: gosuv start-server -f \u5c06gosuv\u7684\u4e8c\u8fdb\u5236\u542f\u52a8\u6587\u4ef6\u8f6f\u94fe\u63a5\u5230\u7cfb\u7edfbin\u76ee\u5f55 ln -s gosuv /usr/local/bin \u4e8c. \u5c06gosuv\u5b89\u88c5\u4e3alinux\u7684\u7cfb\u7edf\u670d\u52a1 \u00b6 1.\u7f16\u5199 systemd \u7684\u5355\u5143\u914d\u7f6e\u6587\u4ef6 (\u542f\u52a8\u547d\u4ee4ExecStart\u548c\u542f\u52a8\u8def\u5f84WorkingDirectory\u914c\u60c5\u4fee\u6539) \u00b6 vim /lib/systemd/system/gosuv.service [Unit] Description=gosuv After=syslog.target After=network.target [Service] # Modify these two values and uncomment them if you have # repos with lots of files and get an HTTP error 500 because # of that ### #LimitMEMLOCK=infinity #LimitNOFILE=65535 Type=simple # \u5982\u679c\u8981\u542f\u52a8\u7684\u547d\u4ee4\u662f\u4e00\u4e2adaemon\u8fdb\u7a0b, \u8fd9\u91cc\u7684\u503c\u8bbe\u7f6e\u4e3aforking User=root Group=root # \u53ef\u4ee5\u5c06gosuv\u94fe\u63a5\u5230bin\u76ee\u5f55\u6216\u8005\u76f4\u63a5\u79fb\u52a8\u5230bin\u76ee\u5f55 WorkingDirectory=/usr/local/bin # -f \u53c2\u6570\u6307\u5b9agosuv\u524d\u53f0\u542f\u52a8,\u9ed8\u8ba4\u540e\u53f0\u542f\u52a8(\u5982\u679c\u6ca1\u6709-f\u53c2\u6570, \u5219Type\u9700\u8981\u6539\u4e3aforking) ExecStart=/usr/local/bin/gosuv start-server -f Restart=always # Some distributions may not support these hardening directives. If you cannot start the service due # to an unknown option, comment out the ones not supported by your version of systemd. ProtectSystem=full PrivateDevices=yes PrivateTmp=yes NoNewPrivileges=true [Install] WantedBy=multi-user.target 2. \u5c06\u6b64\u6587\u4ef6\u653e\u5230 /lib/systemd/system \u6587\u4ef6\u5939\u4e0b,\u6b64\u65f6\u5c31\u80fd\u591f\u8ba9\u670d\u52a1\u5f00\u673a\u542f\u52a8\u548c\u81ea\u52a8\u91cd\u542f\u4e86 \u00b6 \u5f00\u673a\u542f\u52a8: systemctl enable gosuv \u542f\u52a8\u670d\u52a1: systemctl start gosuv \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee: localhost:11313","title":"\u4ee3\u66ffsupervisor - gosuv"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#supervisor-gosuv","text":"","title":"\u4ee3\u66ffsupervisor - gosuv"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#_1","text":"","title":"\u9879\u76ee\u7684\u90e8\u7f72"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#gosuv-git","text":"\u4ece \u8fd9\u91cc \u4e0b\u8f7d\u5bf9\u5e94\u7cfb\u7edf\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u6d4b\u8bd5\u542f\u52a8: gosuv start-server -f \u5c06gosuv\u7684\u4e8c\u8fdb\u5236\u542f\u52a8\u6587\u4ef6\u8f6f\u94fe\u63a5\u5230\u7cfb\u7edfbin\u76ee\u5f55 ln -s gosuv /usr/local/bin","title":"\u4e00. \u5b89\u88c5gosuv Git\u5730\u5740"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#gosuvlinux","text":"","title":"\u4e8c. \u5c06gosuv\u5b89\u88c5\u4e3alinux\u7684\u7cfb\u7edf\u670d\u52a1"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#1systemd-execstartworkingdirectory","text":"vim /lib/systemd/system/gosuv.service [Unit] Description=gosuv After=syslog.target After=network.target [Service] # Modify these two values and uncomment them if you have # repos with lots of files and get an HTTP error 500 because # of that ### #LimitMEMLOCK=infinity #LimitNOFILE=65535 Type=simple # \u5982\u679c\u8981\u542f\u52a8\u7684\u547d\u4ee4\u662f\u4e00\u4e2adaemon\u8fdb\u7a0b, \u8fd9\u91cc\u7684\u503c\u8bbe\u7f6e\u4e3aforking User=root Group=root # \u53ef\u4ee5\u5c06gosuv\u94fe\u63a5\u5230bin\u76ee\u5f55\u6216\u8005\u76f4\u63a5\u79fb\u52a8\u5230bin\u76ee\u5f55 WorkingDirectory=/usr/local/bin # -f \u53c2\u6570\u6307\u5b9agosuv\u524d\u53f0\u542f\u52a8,\u9ed8\u8ba4\u540e\u53f0\u542f\u52a8(\u5982\u679c\u6ca1\u6709-f\u53c2\u6570, \u5219Type\u9700\u8981\u6539\u4e3aforking) ExecStart=/usr/local/bin/gosuv start-server -f Restart=always # Some distributions may not support these hardening directives. If you cannot start the service due # to an unknown option, comment out the ones not supported by your version of systemd. ProtectSystem=full PrivateDevices=yes PrivateTmp=yes NoNewPrivileges=true [Install] WantedBy=multi-user.target","title":"1.\u7f16\u5199systemd\u7684\u5355\u5143\u914d\u7f6e\u6587\u4ef6 (\u542f\u52a8\u547d\u4ee4ExecStart\u548c\u542f\u52a8\u8def\u5f84WorkingDirectory\u914c\u60c5\u4fee\u6539)"},{"location":"%E7%BC%96%E7%A8%8B/%E4%BB%A3%E6%9B%BFsupervisor%20-%20gosuv/#2-libsystemdsystem","text":"\u5f00\u673a\u542f\u52a8: systemctl enable gosuv \u542f\u52a8\u670d\u52a1: systemctl start gosuv \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee: localhost:11313","title":"2. \u5c06\u6b64\u6587\u4ef6\u653e\u5230 /lib/systemd/system\u6587\u4ef6\u5939\u4e0b,\u6b64\u65f6\u5c31\u80fd\u591f\u8ba9\u670d\u52a1\u5f00\u673a\u542f\u52a8\u548c\u81ea\u52a8\u91cd\u542f\u4e86"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/","text":"\u5173\u4e8e\u7f16\u7a0b \u00b6 \u6587\u672c\u6765\u81ea\u4e8eQPython\u7f16\u7a0b\u7fa4 \u611f\u8c22 \u3010\u67b6\u6784\u5206\u6790\u3011\u575a\u51b3\u4e0d\u8ba8\u8bba\u4e13\u4e1a\u95ee\u9898\u7684IE6 \u5927\u4f6c \u81ea\u6d4b\u9898 \u00b6 \u968f\u4fbf\u62ff\u6765\u4e00\u4e2a\u8f6f\u4ef6/\u529f\u80fd\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u80fd\u5426\u6b63\u786e\u63a8\u6d4b\u51fa\u80cc\u540e\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u80fd\u4e0d\u80fd\u57285\u5929/7\u5929/10\u5929/30\u5929\u5185 \u7528\u4e00\u4e2a\u65b0\u7684\u6846\u67b6\uff08\u6240\u6709\u65f6\u95f4-2\uff09\u5f00\u53d1\u51fa\u4e00\u4e2a\u6700\u5c0f\u6a21\u578b \u5728\u4e4b\u524d\u6ca1\u63a5\u89e6\u8fc7/\u6ca1\u6709\u77e5\u8bc6\u50a8\u5907\u7684\u60c5\u51b5\u4e0b\u505a\u51faapp/\u7f51\u7ad9/\u5c0f\u7a0b\u5e8f/3d\u6e38\u620f\u7684\u6700\u5c0f\u6a21\u578b..... \u80fd\u4e0d\u80fd\u770b\u51fa\u8ba1\u7b97\u673a\u6bcf\u5c42\u4e4b\u95f4\u4e1c\u897f\u7684\u5173\u8054\u4ee5\u53ca\u8bbe\u8ba1\u601d\u60f3\uff0c\u6bd4\u5982\u8def\u7531\u5668\u548c\u6d88\u606f\u961f\u5217\u3002 \u662f\u5426\u719f\u6089\u5e38\u7528\u7684\u8bed\u8a00\u7684\u865a\u62df\u673a / \u7f16\u8bd1\u5668\uff0c\u548c\u6846\u67b6\u4ece\u5185\u5b58\u5bf9\u8c61\u5e03\u5c40\u5230\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u539f\u7406\u518d\u5230GC\uff0c\u4ece\u6846\u67b6\u5b9e\u73b0\u539f\u7406\u5230\u8bbe\u8ba1\u601d\u60f3\uff0c\u89e3\u51b3\u95ee\u9898\u3002 \u5bf9\u8ba1\u7b97\u673a\u7f51\u7edc\uff0c\u8ba1\u7b97\u673a\u7ec4\u6210\uff0c\u7f16\u8bd1\u539f\u7406\uff0c\u6570\u636e\u7ed3\u6784\u6709\u4e00\u5b9a\u4e86\u89e3\uff0c\u80fd\u591f\u8fdb\u884c\u591a\u5b66\u79d1\u8054\u52a8\u7684\u95ee\u9898\u5206\u6790\u548c\u6027\u80fd\u5206\u6790\u4ee5\u53ca\u95ee\u9898\u67e5\u627e\u3002\uff08\u91cd\u70b9\u662f\u8054\u52a8\u5206\u6790\uff09 \u662f\u5426\u5177\u5907\u4e25\u8c28\u7684\u5206\u6790\u95ee\u9898\u7684\u80fd\u529b\uff0c\u6bd4\u5982\u5355\u4e00\u53d8\u91cf\u539f\u5219\uff0c\u5047\u8bf4\u6f14\u7ece\u63a8\u7406\u3002 \u662f\u5426\u80fd\u591f\u77e5\u9053\u4ec0\u4e48\u8be5\u4f18\u5316\uff0c\u4ec0\u4e48\u4e0d\u8be5\u4f18\u5316\uff0c\u7528\u6700\u5c0f\u4ee3\u4ef7\u6362\u6700\u5927\u6536\u76ca\u3002 \u4ec0\u4e48\u53eb\u7f16\u7a0b \u00b6 \u7f16\u7a0b\u5176\u5b9e\u53ea\u662f\u5728\u505a\u4e24\u4ef6\u4e8b\uff1a\u89e3\u51b3\u95ee\u9898\u4ee5\u53ca\uff0c\u66f4\u597d\u7684\u89e3\u51b3\u95ee\u9898\u3002 \u4e0d\u7ba1\u662f\u5199\u4ee3\u7801\uff0c\u6284\u5f00\u6e90\u9879\u76ee\uff0c\u9020\u8f6e\u5b50\uff0c\u62d6\u62fd\u5f00\u53d1\u51faapp\uff0c\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u95ee\u9898\u3002 \u53ea\u8981\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u6ca1\u6709\u5bf9\u9519\u3002 \u4ee3\u7801\u8bf4\u5230\u5e95\u5c31\u662f\u5de5\u5177\u7684\u4e00\u79cd\u3002\u80fd\u89e3\u51b3\u95ee\u9898\u5c31\u662f\u53ca\u683c\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u5982\u679c\u4f60\u7528\u4ee3\u7801\u89e3\u51b3\u4e0d\u51fa\u6765\u4f60\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u90a3\u4f60\u5c31\u662f\u4e0d\u5982\u7528\u62d6\u62fd\u5f00\u53d1\u7684\u3002 \u66f4\u597d\u7684\u89e3\u51b3\u95ee\u9898\u662f\u4e00\u79cd\u8fdb\u9636\u80fd\u529b\uff0c\u7528\u66f4\u597d\u7684\u7b97\u6cd5\u80fd\u4e0d\u80fd\u63d0\u9ad8\u8bc6\u522b\u51c6\u786e\u7387\uff0c\u7528\u66f4\u65b0\u7684\u6846\u67b6\u662f\u4e0d\u662f\u80fd\u6362\u6765\u66f4\u4f18\u79c0\u7684\u54cd\u5e94\u901f\u5ea6\u3002\u6211\u80fd\u4e0d\u80fd\u901a\u8fc7\u4f18\u5316\u63d0\u9ad8\u6211\u89e3\u51b3\u95ee\u9898\u7684\u901f\u5ea6\u548c\u8d28\u91cf\u3002 \u4ec0\u4e48\u53eb\u7f16\u7a0b\u80fd\u529b\u53ca\u683c \u00b6 1\u3002\u80fd\u628a\u5b9e\u9645\u95ee\u9898\u62bd\u8c61\uff0c\u7136\u540e\u7528\u8ba1\u7b97\u673a\u6765\u63cf\u8ff0\u548c\u89e3\u51b3\u95ee\u9898\u3002 2\u3002\u53ef\u4ee5\u79f0\u81ea\u5df1\u4e3axxx\u8bed\u8a00\u7a0b\u5e8f\u5458\uff0c\u4f46\u662f\u4e0d\u6050\u60e7\u5199\u4efb\u4f55\u8bed\u8a00\u4efb\u4f55\u9879\u76ee\u7684\u4ee3\u7801\u3002\u4ece\u6765\u4e0d\u4f1a\u89c9\u5f97\uff1a\u8fd9\u4e2a\u6211\u4e0d\u4f1a\u6240\u4ee5\u505a\u4e0d\u4e86\u3002 3\u3002\u80fd\u591f\u8fdb\u884c\u7b80\u5355\u7684\u6027\u80fd\u5206\u6790\uff0c\u5206\u6790\uff0c\u4e0d\u662f\u778e\u60f3\u3002\u6211\u770b\u8fc7\u592a\u591a\u901a\u8fc7\u778e\u60f3\u5224\u65ad\u6027\u80fd\u7684\u81ea\u4ee5\u4e3a\u662f\u7684\u4eba\u4e86\u3002\u8fd9\u9700\u8981\u5bf9\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u8bed\u8a00\u5b9e\u73b0\u6709\u4e00\u5b9a\u4e86\u89e3\u3002 4\u3002\u6709\u57fa\u7840\u7684debug\u548c\u5206\u6790\u95ee\u9898\u7684\u80fd\u529b\u3002\u4e0d\u4f1a\u867e\u7403\u6d4b\u8bd5\u4ee3\u7801\u3002 \u4ec0\u4e48\u53eb\u7f16\u7a0b\u80fd\u529b\u4f18\u79c0 \u00b6 \u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u80fd\u4e0d\u501f\u52a9\u8c03\u8bd5\u5668\uff08\u5bf9\u5c31\u662f\u8bf4\u6211\uff08\u9003\uff09\uff09\uff0c\u901a\u8fc7\u62a5\u9519\u4ee5\u53ca\u51fa\u73b0\u7684\u72b6\u51b5\u5224\u65ad\u662f\u54ea\u4e2a\u5730\u65b9\u51fa\u95ee\u9898\u4e86\uff08\u4e5f\u7b97\u9ed1\u76d2\u6d4b\u8bd5\u7684\u4e00\u79cd\uff1f\uff09 \u80fd\u591f\u8fdb\u884c\u6027\u80fd\u5206\u6790\uff0c\u627e\u51fa\u6027\u80fd\u74f6\u9888\uff0c\u8fd9\u91cc\u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u5c31\u66f4\u591a\u4e86\uff0c\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u6574\u4f53\u5316\u601d\u60f3\uff08\u4ece\u4e0a\u5230\u4e0b\u5bfb\u627e\u6027\u80fd\u74f6\u9888\u3002\u5f00\u59cb\u4e8e\u4ee3\u7801\uff08\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff09\uff0c\u7ec8\u6b62\u4e8e\u4ee3\u7801\uff08CPU\u7ea7\u522b\uff09\uff0c\u5bf9\u4e1a\u52a1\u7684\u719f\u6089\u3002 \u4ec0\u4e48\u53eb\u4f1a\u7f16\u7a0b\u5462 \u00b6 \uff08\u81f3\u5c11\u540c\u9f84\u4eba\u91cc\u6211\u6ca1\u89c1\u8fc7\u4efb\u4f55\u4eba\u8ddf\u6211\u601d\u8003\u4e00\u6837\u7684\u95ee\u9898\u3002\uff09 \u80fd\u591f\u505a\u51fa\u51b3\u5b9a\uff1a - \u5230\u5e95\u8be5\u4e0d\u8be5\u91c7\u53d6\u8fd9\u4e2a\u4f18\u5316 - \u4ec0\u4e48\u65f6\u5019\u91cd\u6784\u4ee3\u7801 - \u5230\u5e95\u8be5\u4e0d\u8be5\u5347\u7ea7\u6846\u67b6 \u8fd9\u4e2a\u8981\u8003\u8651\u7684\u65b9\u9762\u592a\u591a\u4e86\uff0c\u5f00\u53d1\u6210\u672c\uff0c\u65f6\u95f4\u6210\u672c\uff0c\u98ce\u9669\uff0c\u534f\u8c03\u6027\u3002 \u6709\u4e00\u4e9b\u4f18\u5316\u662f\u6ca1\u610f\u4e49\u7684/\u6b21\u8981\u77db\u76fe\u3002\u800c\u5927\u5bb6\u90fd\u559c\u6b22\u6293\u7740\u770b\u5f97\u5230\u7684\u4e1c\u897f\u4f18\u5316\u3002 \u5982\u679c\u4f60\u4e00\u53e5\u90fd\u770b\u4e0d\u61c2\uff0c\u6162\u6162\u5b66python\u5427\u3002 \u5982\u679c\u4f60\u5c31\u770b\u5f97\u61c2\u51e0\u53e5\uff0c\u8bf4\u660e\u4f60\u6839\u672c\u6ca1\u5165\u95e8\u7f16\u7a0b\u3002 \u5982\u679c\u4f60\u80fd\u7406\u89e3\u5927\u90e8\u5206\u5185\u5bb9\uff0c\u8bf4\u660e\u5b66\u4e60\u65b9\u5411\u8fd8\u7b97\u6b63\u786e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6309\u7167\u8fd9\u6837\u7684\u65b9\u5411\u5b66\u4e0b\u53bb\u3002 \u6587\u672c\u6765\u81ea\u4e8eQPython\u7f16\u7a0b\u7fa4 \u611f\u8c22 \u3010\u67b6\u6784\u5206\u6790\u3011\u575a\u51b3\u4e0d\u8ba8\u8bba\u4e13\u4e1a\u95ee\u9898\u7684IE6 \u5927\u4f6c","title":"\u5173\u4e8e\u7f16\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_1","text":"\u6587\u672c\u6765\u81ea\u4e8eQPython\u7f16\u7a0b\u7fa4 \u611f\u8c22 \u3010\u67b6\u6784\u5206\u6790\u3011\u575a\u51b3\u4e0d\u8ba8\u8bba\u4e13\u4e1a\u95ee\u9898\u7684IE6 \u5927\u4f6c","title":"\u5173\u4e8e\u7f16\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_2","text":"\u968f\u4fbf\u62ff\u6765\u4e00\u4e2a\u8f6f\u4ef6/\u529f\u80fd\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u80fd\u5426\u6b63\u786e\u63a8\u6d4b\u51fa\u80cc\u540e\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u80fd\u4e0d\u80fd\u57285\u5929/7\u5929/10\u5929/30\u5929\u5185 \u7528\u4e00\u4e2a\u65b0\u7684\u6846\u67b6\uff08\u6240\u6709\u65f6\u95f4-2\uff09\u5f00\u53d1\u51fa\u4e00\u4e2a\u6700\u5c0f\u6a21\u578b \u5728\u4e4b\u524d\u6ca1\u63a5\u89e6\u8fc7/\u6ca1\u6709\u77e5\u8bc6\u50a8\u5907\u7684\u60c5\u51b5\u4e0b\u505a\u51faapp/\u7f51\u7ad9/\u5c0f\u7a0b\u5e8f/3d\u6e38\u620f\u7684\u6700\u5c0f\u6a21\u578b..... \u80fd\u4e0d\u80fd\u770b\u51fa\u8ba1\u7b97\u673a\u6bcf\u5c42\u4e4b\u95f4\u4e1c\u897f\u7684\u5173\u8054\u4ee5\u53ca\u8bbe\u8ba1\u601d\u60f3\uff0c\u6bd4\u5982\u8def\u7531\u5668\u548c\u6d88\u606f\u961f\u5217\u3002 \u662f\u5426\u719f\u6089\u5e38\u7528\u7684\u8bed\u8a00\u7684\u865a\u62df\u673a / \u7f16\u8bd1\u5668\uff0c\u548c\u6846\u67b6\u4ece\u5185\u5b58\u5bf9\u8c61\u5e03\u5c40\u5230\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u539f\u7406\u518d\u5230GC\uff0c\u4ece\u6846\u67b6\u5b9e\u73b0\u539f\u7406\u5230\u8bbe\u8ba1\u601d\u60f3\uff0c\u89e3\u51b3\u95ee\u9898\u3002 \u5bf9\u8ba1\u7b97\u673a\u7f51\u7edc\uff0c\u8ba1\u7b97\u673a\u7ec4\u6210\uff0c\u7f16\u8bd1\u539f\u7406\uff0c\u6570\u636e\u7ed3\u6784\u6709\u4e00\u5b9a\u4e86\u89e3\uff0c\u80fd\u591f\u8fdb\u884c\u591a\u5b66\u79d1\u8054\u52a8\u7684\u95ee\u9898\u5206\u6790\u548c\u6027\u80fd\u5206\u6790\u4ee5\u53ca\u95ee\u9898\u67e5\u627e\u3002\uff08\u91cd\u70b9\u662f\u8054\u52a8\u5206\u6790\uff09 \u662f\u5426\u5177\u5907\u4e25\u8c28\u7684\u5206\u6790\u95ee\u9898\u7684\u80fd\u529b\uff0c\u6bd4\u5982\u5355\u4e00\u53d8\u91cf\u539f\u5219\uff0c\u5047\u8bf4\u6f14\u7ece\u63a8\u7406\u3002 \u662f\u5426\u80fd\u591f\u77e5\u9053\u4ec0\u4e48\u8be5\u4f18\u5316\uff0c\u4ec0\u4e48\u4e0d\u8be5\u4f18\u5316\uff0c\u7528\u6700\u5c0f\u4ee3\u4ef7\u6362\u6700\u5927\u6536\u76ca\u3002","title":"\u81ea\u6d4b\u9898"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_3","text":"\u7f16\u7a0b\u5176\u5b9e\u53ea\u662f\u5728\u505a\u4e24\u4ef6\u4e8b\uff1a\u89e3\u51b3\u95ee\u9898\u4ee5\u53ca\uff0c\u66f4\u597d\u7684\u89e3\u51b3\u95ee\u9898\u3002 \u4e0d\u7ba1\u662f\u5199\u4ee3\u7801\uff0c\u6284\u5f00\u6e90\u9879\u76ee\uff0c\u9020\u8f6e\u5b50\uff0c\u62d6\u62fd\u5f00\u53d1\u51faapp\uff0c\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u95ee\u9898\u3002 \u53ea\u8981\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u6ca1\u6709\u5bf9\u9519\u3002 \u4ee3\u7801\u8bf4\u5230\u5e95\u5c31\u662f\u5de5\u5177\u7684\u4e00\u79cd\u3002\u80fd\u89e3\u51b3\u95ee\u9898\u5c31\u662f\u53ca\u683c\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u5982\u679c\u4f60\u7528\u4ee3\u7801\u89e3\u51b3\u4e0d\u51fa\u6765\u4f60\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u90a3\u4f60\u5c31\u662f\u4e0d\u5982\u7528\u62d6\u62fd\u5f00\u53d1\u7684\u3002 \u66f4\u597d\u7684\u89e3\u51b3\u95ee\u9898\u662f\u4e00\u79cd\u8fdb\u9636\u80fd\u529b\uff0c\u7528\u66f4\u597d\u7684\u7b97\u6cd5\u80fd\u4e0d\u80fd\u63d0\u9ad8\u8bc6\u522b\u51c6\u786e\u7387\uff0c\u7528\u66f4\u65b0\u7684\u6846\u67b6\u662f\u4e0d\u662f\u80fd\u6362\u6765\u66f4\u4f18\u79c0\u7684\u54cd\u5e94\u901f\u5ea6\u3002\u6211\u80fd\u4e0d\u80fd\u901a\u8fc7\u4f18\u5316\u63d0\u9ad8\u6211\u89e3\u51b3\u95ee\u9898\u7684\u901f\u5ea6\u548c\u8d28\u91cf\u3002","title":"\u4ec0\u4e48\u53eb\u7f16\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_4","text":"1\u3002\u80fd\u628a\u5b9e\u9645\u95ee\u9898\u62bd\u8c61\uff0c\u7136\u540e\u7528\u8ba1\u7b97\u673a\u6765\u63cf\u8ff0\u548c\u89e3\u51b3\u95ee\u9898\u3002 2\u3002\u53ef\u4ee5\u79f0\u81ea\u5df1\u4e3axxx\u8bed\u8a00\u7a0b\u5e8f\u5458\uff0c\u4f46\u662f\u4e0d\u6050\u60e7\u5199\u4efb\u4f55\u8bed\u8a00\u4efb\u4f55\u9879\u76ee\u7684\u4ee3\u7801\u3002\u4ece\u6765\u4e0d\u4f1a\u89c9\u5f97\uff1a\u8fd9\u4e2a\u6211\u4e0d\u4f1a\u6240\u4ee5\u505a\u4e0d\u4e86\u3002 3\u3002\u80fd\u591f\u8fdb\u884c\u7b80\u5355\u7684\u6027\u80fd\u5206\u6790\uff0c\u5206\u6790\uff0c\u4e0d\u662f\u778e\u60f3\u3002\u6211\u770b\u8fc7\u592a\u591a\u901a\u8fc7\u778e\u60f3\u5224\u65ad\u6027\u80fd\u7684\u81ea\u4ee5\u4e3a\u662f\u7684\u4eba\u4e86\u3002\u8fd9\u9700\u8981\u5bf9\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u8bed\u8a00\u5b9e\u73b0\u6709\u4e00\u5b9a\u4e86\u89e3\u3002 4\u3002\u6709\u57fa\u7840\u7684debug\u548c\u5206\u6790\u95ee\u9898\u7684\u80fd\u529b\u3002\u4e0d\u4f1a\u867e\u7403\u6d4b\u8bd5\u4ee3\u7801\u3002","title":"\u4ec0\u4e48\u53eb\u7f16\u7a0b\u80fd\u529b\u53ca\u683c"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_5","text":"\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u80fd\u4e0d\u501f\u52a9\u8c03\u8bd5\u5668\uff08\u5bf9\u5c31\u662f\u8bf4\u6211\uff08\u9003\uff09\uff09\uff0c\u901a\u8fc7\u62a5\u9519\u4ee5\u53ca\u51fa\u73b0\u7684\u72b6\u51b5\u5224\u65ad\u662f\u54ea\u4e2a\u5730\u65b9\u51fa\u95ee\u9898\u4e86\uff08\u4e5f\u7b97\u9ed1\u76d2\u6d4b\u8bd5\u7684\u4e00\u79cd\uff1f\uff09 \u80fd\u591f\u8fdb\u884c\u6027\u80fd\u5206\u6790\uff0c\u627e\u51fa\u6027\u80fd\u74f6\u9888\uff0c\u8fd9\u91cc\u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u5c31\u66f4\u591a\u4e86\uff0c\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u6574\u4f53\u5316\u601d\u60f3\uff08\u4ece\u4e0a\u5230\u4e0b\u5bfb\u627e\u6027\u80fd\u74f6\u9888\u3002\u5f00\u59cb\u4e8e\u4ee3\u7801\uff08\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\uff09\uff0c\u7ec8\u6b62\u4e8e\u4ee3\u7801\uff08CPU\u7ea7\u522b\uff09\uff0c\u5bf9\u4e1a\u52a1\u7684\u719f\u6089\u3002","title":"\u4ec0\u4e48\u53eb\u7f16\u7a0b\u80fd\u529b\u4f18\u79c0"},{"location":"%E7%BC%96%E7%A8%8B/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/#_6","text":"\uff08\u81f3\u5c11\u540c\u9f84\u4eba\u91cc\u6211\u6ca1\u89c1\u8fc7\u4efb\u4f55\u4eba\u8ddf\u6211\u601d\u8003\u4e00\u6837\u7684\u95ee\u9898\u3002\uff09 \u80fd\u591f\u505a\u51fa\u51b3\u5b9a\uff1a - \u5230\u5e95\u8be5\u4e0d\u8be5\u91c7\u53d6\u8fd9\u4e2a\u4f18\u5316 - \u4ec0\u4e48\u65f6\u5019\u91cd\u6784\u4ee3\u7801 - \u5230\u5e95\u8be5\u4e0d\u8be5\u5347\u7ea7\u6846\u67b6 \u8fd9\u4e2a\u8981\u8003\u8651\u7684\u65b9\u9762\u592a\u591a\u4e86\uff0c\u5f00\u53d1\u6210\u672c\uff0c\u65f6\u95f4\u6210\u672c\uff0c\u98ce\u9669\uff0c\u534f\u8c03\u6027\u3002 \u6709\u4e00\u4e9b\u4f18\u5316\u662f\u6ca1\u610f\u4e49\u7684/\u6b21\u8981\u77db\u76fe\u3002\u800c\u5927\u5bb6\u90fd\u559c\u6b22\u6293\u7740\u770b\u5f97\u5230\u7684\u4e1c\u897f\u4f18\u5316\u3002 \u5982\u679c\u4f60\u4e00\u53e5\u90fd\u770b\u4e0d\u61c2\uff0c\u6162\u6162\u5b66python\u5427\u3002 \u5982\u679c\u4f60\u5c31\u770b\u5f97\u61c2\u51e0\u53e5\uff0c\u8bf4\u660e\u4f60\u6839\u672c\u6ca1\u5165\u95e8\u7f16\u7a0b\u3002 \u5982\u679c\u4f60\u80fd\u7406\u89e3\u5927\u90e8\u5206\u5185\u5bb9\uff0c\u8bf4\u660e\u5b66\u4e60\u65b9\u5411\u8fd8\u7b97\u6b63\u786e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6309\u7167\u8fd9\u6837\u7684\u65b9\u5411\u5b66\u4e0b\u53bb\u3002 \u6587\u672c\u6765\u81ea\u4e8eQPython\u7f16\u7a0b\u7fa4 \u611f\u8c22 \u3010\u67b6\u6784\u5206\u6790\u3011\u575a\u51b3\u4e0d\u8ba8\u8bba\u4e13\u4e1a\u95ee\u9898\u7684IE6 \u5927\u4f6c","title":"\u4ec0\u4e48\u53eb\u4f1a\u7f16\u7a0b\u5462"},{"location":"%E7%BC%96%E7%A8%8B/%E5%9B%BD%E5%86%85%20github%20%E6%85%A2/","text":"\u56fd\u5185 github \u6162 \u00b6 \u5728hosts\u6587\u4ef6\u4e2d\u52a0\u5165\u5982\u4e0b\u51e0\u53e5\u5373\u53ef\uff1a \u00b6 vim /etc/hosts linux vim C:\\Windows\\System32\\drivers\\etc\\hosts windows 192.30.252.123 www.github.com 103.245.222.133 assets-cdn.github.com 185.31.18.133 avatars0.githubusercontent.com 185.31.19.133 avatars1.githubusercontent.com \u73b0\u5728\u8fd9\u4e2aIP\u4f3c\u4e4e\u4e5f\u4e0d\u7ba1\u7528\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u4f7f\u7528\u4e86shadowsocks\u7684\u53ef\u4ee5\u7528git\u4f7f\u7528\u4ee3\u7406 \u00b6 git config --global http.proxy socks5://127.0.0.1:9999 git config --global https.proxy socks5://127.0.0.1:9999 \u7528\u5b8c\u8bb0\u5f97\u5173\u4e0a\uff0c\u4e0d\u7136\u5185\u7f51\u7684git\u4e5f\u4f1a\u5f88\u6162 git config --global --unset http.proxy git config --global --unset https.proxy","title":"\u56fd\u5185 github \u6162"},{"location":"%E7%BC%96%E7%A8%8B/%E5%9B%BD%E5%86%85%20github%20%E6%85%A2/#github","text":"","title":"\u56fd\u5185 github \u6162"},{"location":"%E7%BC%96%E7%A8%8B/%E5%9B%BD%E5%86%85%20github%20%E6%85%A2/#hosts","text":"vim /etc/hosts linux vim C:\\Windows\\System32\\drivers\\etc\\hosts windows 192.30.252.123 www.github.com 103.245.222.133 assets-cdn.github.com 185.31.18.133 avatars0.githubusercontent.com 185.31.19.133 avatars1.githubusercontent.com","title":"\u5728hosts\u6587\u4ef6\u4e2d\u52a0\u5165\u5982\u4e0b\u51e0\u53e5\u5373\u53ef\uff1a"},{"location":"%E7%BC%96%E7%A8%8B/%E5%9B%BD%E5%86%85%20github%20%E6%85%A2/#ipshadowsocksgit","text":"git config --global http.proxy socks5://127.0.0.1:9999 git config --global https.proxy socks5://127.0.0.1:9999 \u7528\u5b8c\u8bb0\u5f97\u5173\u4e0a\uff0c\u4e0d\u7136\u5185\u7f51\u7684git\u4e5f\u4f1a\u5f88\u6162 git config --global --unset http.proxy git config --global --unset https.proxy","title":"\u73b0\u5728\u8fd9\u4e2aIP\u4f3c\u4e4e\u4e5f\u4e0d\u7ba1\u7528\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u4f7f\u7528\u4e86shadowsocks\u7684\u53ef\u4ee5\u7528git\u4f7f\u7528\u4ee3\u7406"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"\u590d\u4e60\u7b14\u8bb0 \u00b6 \u672c\u590d\u4e60\u7b14\u8bb0\u57fa\u672c\u6765\u81ea\u4e8e\u7f51\u4e0a\u590d\u5236 \u672c\u590d\u4e60\u7b14\u8bb0\u4e3b\u8981\u7528\u9014\u5728\u4e8e\u6574\u7406\u540e\u653e\u5728\u624b\u673a\u4e0a\u542c \u672c\u590d\u4e60\u8d44\u6599\u4e3b\u8981\u7ed9\u535a\u4e3b\u7528 \u535a\u4e3b\u89c9\u5f97\u4e0d\u91cd\u8981\u7684\u3001\u6bd4\u5982python\u57fa\u7840\u8bed\u6cd5\u4ec0\u4e48\u7684 \u3001\u5c31\u4e0d\u4f1a\u7ed9\u51fa\u4e86\uff0c\u7cfb\u7edf\u5b66\u4e60\u8bf7gayhub\u641c\u7d22\u3002 Python \u00b6 Python\u4e2d\u7684\u5143\u7c7b(metaclass)\uff1a \u00b6 \u62e6\u622a\u7c7b\u7684\u521b\u5efa \u4fee\u6539\u7c7b \u8fd4\u56de\u4fee\u6539\u4e4b\u540e\u7684\u7c7b \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf \u00b6 class Person: name=\"aaa\" p1=Person() p2=Person() p1.name=\"bbb\" print(p1.name) # bbb print(p2.name) # aaa print(Person.name) # aaa Python\u81ea\u7701 \u00b6 \u7b80\u5355\u4e00\u53e5\u5c31\u662f\u8fd0\u884c\u65f6\u80fd\u591f\u83b7\u5f97\u5bf9\u8c61\u7684\u7c7b\u578b.\u6bd4\u5982type(),dir(),getattr(),hasattr(),isinstance(). Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf \u00b6 foo :\u4e00\u79cd\u7ea6\u5b9a,Python\u5185\u90e8\u7684\u540d\u5b57,\u7528\u6765\u533a\u522b\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u547d\u540d,\u4ee5\u9632\u51b2\u7a81\uff0c\u5c31\u662f\u4f8b\u5982__init__(), del (), call ()\u8fd9\u4e9b\u7279\u6b8a\u65b9\u6cd5 _foo:\u4e00\u79cd\u7ea6\u5b9a,\u7528\u6765\u6307\u5b9a\u53d8\u91cf\u79c1\u6709.\u7a0b\u5e8f\u5458\u7528\u6765\u6307\u5b9a\u79c1\u6709\u53d8\u91cf\u7684\u4e00\u79cd\u65b9\u5f0f.\u4e0d\u80fd\u7528from module import * \u5bfc\u5165\uff0c\u5176\u4ed6\u65b9\u9762\u548c\u516c\u6709\u4e00\u6837\u8bbf\u95ee\uff1b __foo:\u8fd9\u4e2a\u6709\u771f\u6b63\u7684\u610f\u4e49:\u89e3\u6790\u5668\u7528_classname__foo\u6765\u4ee3\u66ff\u8fd9\u4e2a\u540d\u5b57,\u4ee5\u533a\u522b\u548c\u5176\u4ed6\u7c7b\u76f8\u540c\u7684\u547d\u540d,\u5b83\u65e0\u6cd5\u76f4\u63a5\u50cf\u516c\u6709\u6210\u5458\u4e00\u6837\u968f\u4fbf\u8bbf\u95ee,\u901a\u8fc7\u5bf9\u8c61\u540d._\u7c7b\u540d__xxx\u8fd9\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee. \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 \u00b6 \u95ee\uff1a \u5c06\u5217\u8868\u751f\u6210\u5f0f\u4e2d[]\u6539\u6210() \u4e4b\u540e\u6570\u636e\u7ed3\u6784\u662f\u5426\u6539\u53d8\uff1f \u7b54\u6848\uff1a\u662f\uff0c\u4ece\u5217\u8868\u53d8\u4e3a\u751f\u6210\u5668 \u8fed\u4ee3\u5668\uff1a\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\uff1a next(iter([1,2,3,4])) class MyNumbers: def __iter__(self): self.a = 1 return self def __next__(self): x = self.a self.a += 1 if self.a> 3: raise StopIteration return x myclass = MyNumbers() myiter = iter(myclass) print(next(myiter)) print(next(myiter)) \u751f\u6210\u5668\uff1a\u4f7f\u7528\u4e86 yield \u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u751f\u6210\u5668\uff08 generator \uff09\uff0c\u7b80\u5355\u70b9\u7406\u89e3\u751f\u6210\u5668\u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 \u9762\u5411\u5207\u9762\u7f16\u7a0b(AOP)\u548c\u88c5\u9970\u5668 \u00b6 \u88ab\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f:\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u7b49\u3002 \u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002 Python\u4e2d\u91cd\u8f7d \u00b6 \u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002 \u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002 \u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002 Python \u90fd\u4e0d\u9700\u8981 \u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b \u00b6 python\u7684\u591a\u7236\u7c7b\u7ee7\u627f\u95ee\u9898 \u65b0\u5f0f\u7c7b\u7ee7\u627f\u662f\u6839\u636eC3\u7b97\u6cd5,\u65e7\u5f0f\u7c7b\u662f\u6df1\u5ea6\u4f18\u5148\u3002 \u5728Python3.6\u4e0b,className.mro()\u67e5\u770b\u7ee7\u627f\u987a\u5e8f\u3002 slots \u00b6 __slots__\u662f\u4e00\u4e2a\u7c7b\u53d8\u91cf\uff0c__slots__\u5c5e\u6027\u53ef\u4ee5\u8d4b\u503c\u4e00\u4e2a\u5305\u542b\u7c7b\u5c5e\u6027\u540d\u7684\u5b57\u7b26\u4e32\u5143\u7ec4\uff0c \u6216\u8005\u662f\u53ef\u8fed\u4ee3\u53d8\u91cf\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u8981\u5728\u7c7b\u5b9a\u4e49\u7684\u65f6\u5019\uff0c \u4f7f\u7528__slots__ = a Tuple\u6765\u5b9a\u4e49\u8be5\u5c5e\u6027\u5c31\u53ef\u4ee5\u4e86\u3002 __new__\u548c__init__\u7684\u533a\u522b \u00b6 \u8fd9\u4e2a__new__\u786e\u5b9e\u5f88\u5c11\u89c1\u5230,\u5148\u505a\u4e86\u89e3\u5427. __new__\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5,\u800c__init__\u662f\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5. __new__\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u521b\u5efa\u7684\u5b9e\u4f8b,\u800c__init__\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de. \u53ea\u6709\u5728__new__\u8fd4\u56de\u4e00\u4e2acls\u7684\u5b9e\u4f8b\u65f6\u540e\u9762\u7684__init__\u624d\u80fd\u88ab\u8c03\u7528. \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u65f6\u8c03\u7528__new__,\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u7528__init__. ps: __metaclass__\u662f\u521b\u5efa\u7c7b\u65f6\u8d77\u4f5c\u7528.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4f7f\u7528__metaclass__,__new__\u548c__init__\u6765\u5206\u522b\u5728\u7c7b\u521b\u5efa,\u5b9e\u4f8b\u521b\u5efa\u548c\u5b9e\u4f8b\u521d\u59cb\u5316\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5c0f\u624b\u811a. \u5355\u4f8b\u6a21\u5f0f \u00b6 class Singleton(object): def __new__(cls, *args, **kw): if not hasattr(cls, '_instance'): orig = super(Singleton, cls) cls._instance = orig.__new__(cls, *args, **kw) return cls._instance class MyClass(Singleton): a = 1 # -------------------- # \u88c5\u9970\u5668\u7248\u672c def singleton(cls): instances = {} def getinstance(*args, **kw): if cls not in instances: instances[cls] = cls(*args, **kw) return instances[cls] return getinstance @singleton class MyClass: ... # -------------------- # \u4f5c\u4e3apython\u7684\u6a21\u5757\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f # mysingleton.py class My_Singleton(object): def foo(self): pass my_singleton = My_Singleton() # to use from mysingleton import my_singleton my_singleton.foo() \u5171\u4eab\u5c5e\u6027\u903b\u8f91\u4e0a\u4e5f\u662f\u5355\u4f8b\u6a21\u5f0f \u521b\u5efa\u5b9e\u4f8b\u65f6\u628a\u6240\u6709\u5b9e\u4f8b\u7684__dict__\u6307\u5411\u540c\u4e00\u4e2a\u5b57\u5178,\u8fd9\u6837\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 class Borg(object): _state = {} def __new__(cls, *args, **kw): ob = super(Borg, cls).__new__(cls, *args, **kw) ob.__dict__ = cls._state return ob class MyClass2(Borg): a = 1 Python\u4e2d\u7684\u4f5c\u7528\u57df \u00b6 Python \u4e2d\uff0c\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u603b\u662f\u7531\u5728\u4ee3\u7801\u4e2d\u88ab\u8d4b\u503c\u7684\u5730\u65b9\u6240\u51b3\u5b9a\u7684\u3002 \u5f53 Python \u9047\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u8bdd\u4ed6\u4f1a\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff1a \u672c\u5730\u4f5c\u7528\u57df\uff08Local\uff09\u2192\u5f53\u524d\u4f5c\u7528\u57df\u88ab\u5d4c\u5165\u7684\u672c\u5730\u4f5c\u7528\u57df\uff08Enclosing locals\uff09\u2192\u5168\u5c40/\u6a21\u5757\u4f5c\u7528\u57df\uff08Global\uff09\u2192\u5185\u7f6e\u4f5c\u7528\u57df\uff08Built-in\uff09 GIL\u7ebf\u7a0b\u5168\u5c40\u9501 \u00b6 \u7ebf\u7a0b\u5168\u5c40\u9501(Global Interpreter Lock),\u5373Python\u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u800c\u91c7\u53d6\u7684\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c\u7684\u9650\u5236, \u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u4e2a\u6838\u53ea\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u8fd0\u884c\u4e00\u4e2a\u7ebf\u7a0b. \u5bf9\u4e8eio\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u8d77\u5230\u4f5c\u7528\uff0c \u4f46\u5bf9\u4e8ecpu\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u51e0\u4e4e\u5360\u4e0d\u5230\u4efb\u4f55\u4f18\u52bf\uff0c\u8fd8\u6709\u53ef\u80fd\u56e0\u4e3a\u4e89\u593a\u8d44\u6e90\u800c\u53d8\u6162\u3002 \u5728python3.x\u4e2d\uff0cGIL\u4e0d\u4f7f\u7528ticks\u8ba1\u6570\uff0c \u6539\u4e3a\u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653eGIL\uff09\uff0c \u8fd9\u6837\u5bf9CPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\u66f4\u52a0\u53cb\u597d\uff0c \u4f46\u4f9d\u7136\u6ca1\u6709\u89e3\u51b3GIL\u5bfc\u81f4\u7684\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u95ee\u9898 \u95ed\u5305 \u00b6 \u95ed\u5305\u53ef\u4ee5\u4fdd\u5b58\u5f53\u524d\u7684\u8fd0\u884c\u73af\u5883 \u95ed\u5305\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u70b9: * \u5fc5\u987b\u6709\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570 * \u5185\u5d4c\u51fd\u6570\u5fc5\u987b\u5f15\u7528\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf * \u5916\u90e8\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u5185\u5d4c\u51fd\u6570 Python\u51fd\u6570\u5f0f\u7f16\u7a0b \u00b6 filter >>>a = [1,2,3,4,5,6,7] >>>b = filter(lambda x: x > 5, a) >>>print b >>>[6,7] map >>> a = map(lambda x:x*2,[1,2,3]) >>> list(a) [2, 4, 6] reduce from functools import reduce ...: def c(x,y): ...: print(x,y) ...: return x*y ...: reduce(c,range(1,5)) 1 2 2 3 6 4 Out[10]: 24 Python\u5783\u573e\u56de\u6536\u673a\u5236 \u00b6 Python GC\u4e3b\u8981\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff08reference counting\uff09\u6765\u8ddf\u8e2a\u548c\u56de\u6536\u5783\u573e\u3002 \u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u65b0\u7684\u5f15\u7528\u65f6\uff0c\u5b83\u7684ob_refcnt\u5c31\u4f1a\u589e\u52a0\uff0c \u5f53\u5f15\u7528\u5b83\u7684\u5bf9\u8c61\u88ab\u5220\u9664\uff0c\u5b83\u7684ob_refcnt\u5c31\u4f1a\u51cf\u5c11. \u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u8be5\u5bf9\u8c61\u751f\u547d\u5c31\u7ed3\u675f\u4e86\u3002 \u57fa\u672c\u601d\u8def\u662f\u5148\u6309\u9700\u5206\u914d\uff0c\u7b49\u5230\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u65f6\u5019\u4ece\u5bc4\u5b58\u5668\u548c\u7a0b\u5e8f\u6808\u4e0a\u7684\u5f15\u7528\u51fa\u53d1\uff0c \u904d\u5386\u4ee5\u5bf9\u8c61\u4e3a\u8282\u70b9\u3001\u4ee5\u5f15\u7528\u4e3a\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u628a\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0\uff0c \u7136\u540e\u6e05\u626b\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u628a\u6240\u6709\u6ca1\u6807\u8bb0\u7684\u5bf9\u8c61\u91ca\u653e\u3002 Python\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u4e09\u4ee3\u5bf9\u8c61\u96c6\u5408\uff0c\u7d22\u5f15\u6570\u8d8a\u5927\uff0c\u5bf9\u8c61\u5b58\u6d3b\u65f6\u95f4\u8d8a\u957f\u3002 \u5f53\u67d0\u4e9b\u5185\u5b58\u5757M\u7ecf\u8fc7\u4e863\u6b21\u5783\u573e\u6536\u96c6\u7684\u6e05\u6d17\u4e4b\u540e\u8fd8\u5b58\u6d3b\u65f6\uff0c \u6211\u4eec\u5c31\u5c06\u5185\u5b58\u5757M\u5212\u5230\u4e00\u4e2a\u96c6\u5408A\u4e2d\u53bb\uff0c\u800c\u65b0\u5206\u914d\u7684\u5185\u5b58\u90fd\u5212\u5206\u5230\u96c6\u5408B\u4e2d\u53bb\u3002 \u5f53\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u53ea\u5bf9\u96c6\u5408B\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002 \u64cd\u4f5c\u7cfb\u7edf \u00b6 select,poll\u548cepoll \u00b6 select\u67093\u4e2a\u7f3a\u70b9: * \u8fde\u63a5\u6570\u53d7\u9650 * \u67e5\u627e\u914d\u5bf9\u901f\u5ea6\u6162 * \u6570\u636e\u7531\u5185\u6838\u62f7\u8d1d\u5230\u7528\u6237\u6001 poll\u4f7f\u7528pollfd\u7ed3\u6784\u800c\u4e0d\u662fselect\u7684fd_set\u7ed3\u6784\uff0cpoll\u6539\u5584\u4e86\u7b2c\u4e00\u4e2a\u7f3a\u70b9\u3002 epoll\u6539\u4e86\u4e09\u4e2a\u7f3a\u70b9. poll\u5728\u201c\u9192\u7740\u201d\u7684\u65f6\u5019\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5c31\u7eea\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\u5c31\u884c\u4e86 \u8c03\u5ea6\u7b97\u6cd5 \u00b6 \u9ad8\u7ea7\u8c03\u5ea6\uff08\u4f5c\u4e1a\u8c03\u5ea6/\u957f\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u4f4e\uff09\uff1a\u5c06\u5916\u5b58\u4f5c\u4e1a\u8c03\u5165\u5185\u5b58 \u4f4e\u7ea7\u8c03\u5ea6\uff08\u8fdb\u7a0b\u8c03\u5ea6/\u77ed\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u9ad8\uff09\uff1a\u51b3\u5b9a\u5c31\u5c31\u7eea\u961f\u5217\u4e2d\u54ea\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u5904\u7406\u673a\u5e76\u6267\u884c \u4ec0\u4e48\u662f\u8c03\u5ea6\uff1f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u8d44\u6e90\u5206\u914d \u4ec0\u4e48\u662f\u9965\u997f\uff1f\u67d0\u5199\u8fdb\u7a0b\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u5f97\u4e0d\u5230\u5904\u7406 \u8c03\u5ea6\u7b97\u6cd5\u7684\u5206\u7c7b * \u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u62a2\uff09\uff1a\u53ef\u4ee5\u6682\u505c\u67d0\u4e2a\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5c06\u5904\u7406\u53ca\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b * \u975e\u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u62a2\u8d70\uff09\uff1a\u4e00\u65e6\u5904\u7406\u53ca\u5206\u914d\u7ed9\u4e86\u67d0\u4e2a\u8fdb\u7a0b\uff0c\u4ed6\u5c31\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u7ed3\u675f \u5177\u4f53\u8c03\u5ea6\u7b97\u6cd5\uff1a * 1.\u5148\u6765\u5148\u670d\u52a1\uff08FCFS\uff09\uff1a\u6309\u7167\u5230\u8fbe\u987a\u5e8f\uff0c\u975e\u62a2\u5360\u5f0f,\u4e0d\u4f1a\u9965\u997f * 2.\u77ed\u4f5c\u4e1a/\u8fdb\u7a0b\u4f18\u5148\uff08SJF\uff09:\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f * 3.\u9ad8\u54cd\u5e94\u6bd4\u4f18\u5148\uff08HRRN\uff09:\u7efc\u5408\u8003\u8651\u7b49\u5f85\u65f6\u95f4\u548c\u8981\u6c42\u670d\u52a1\u4e8b\u4ef6\u8ba1\u7b97\u4e00\u4e2a\u4f18\u5148\u6743\uff0c\u975e\u62a2\u5360\uff0c\u4e0d\u4f1a\u9965\u997f * 4.\u65f6\u95f4\u7247\u8f6e\u8f6c\uff08RR\uff09:\u8f6e\u6d41\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u670d\u52a1\uff0c\u62a2\u5360\u5f0f\uff0c\u4e0d\u4f1a\u9965\u997f * 5.\u4f18\u5148\u7ea7\uff1a\u6839\u636e\u4f18\u5148\u7ea7\uff0c\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f * 6.\u591a\u7ea7\u53cd\u9988\u961f\u5217\uff1a * \u8bbe\u7f6e\u591a\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u7684\u8fdb\u7a0b\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u6392\u961f\uff0c\u7136\u540e\u6309\u7167\u65f6\u95f4\u7247\u8f6e\u8f6c\u5206\u914d\u65f6\u95f4\u7247 * \u82e5\u65f6\u95f4\u7247\u7528\u5b8c\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u7ea7\u961f\u5c3e\uff0c\u53ea\u6709\u5f53\u524d\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u624d\u4f1a\u4e3a\u4e0b\u4e00\u7ea7\u961f\u5217\u5206\u914d\u65f6\u95f4\u7247\u3002 * \u62a2\u5360\u5f0f\uff0c\u53ef\u80fd\u4f1a\u9965\u997f \u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\uff1a * \u5148\u6765\u5148\u670d\u52a1\u8c03\u5ea6\u7b97\u6cd5 * \u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5 * \u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5 \u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff1a * \u4ee5\u4e0a6\u79cd\u90fd\u53ef\u4ee5\u662f\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5 \u6b7b\u9501 \u00b6 \u539f\u56e0: * \u7ade\u4e89\u8d44\u6e90 * \u7a0b\u5e8f\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5f53 \u5fc5\u8981\u6761\u4ef6: * \u4e92\u65a5\u6761\u4ef6 * \u8bf7\u6c42\u548c\u4fdd\u6301\u6761\u4ef6 * \u4e0d\u5265\u593a\u6761\u4ef6 * \u73af\u8def\u7b49\u5f85\u6761\u4ef6 \u5904\u7406\u6b7b\u9501\u57fa\u672c\u65b9\u6cd5: \u9884\u9632\u6b7b\u9501(\u6452\u5f03\u96641\u4ee5\u5916\u7684\u6761\u4ef6) \u907f\u514d\u6b7b\u9501(\u94f6\u884c\u5bb6\u7b97\u6cd5) \u68c0\u6d4b\u6b7b\u9501(\u8d44\u6e90\u5206\u914d\u56fe) \u89e3\u9664\u6b7b\u9501\uff1a \u5265\u593a\u8d44\u6e90 or \u64a4\u9500\u8fdb\u7a0b \u9875\u9762\u7f6e\u6362\u7b97\u6cd5 \u00b6 \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5OPT:\u4e0d\u53ef\u80fd\u5b9e\u73b0 \u5148\u8fdb\u5148\u51faFIFO \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7b97\u6cd5LRU:\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u91cc\u6700\u4e45\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\u9875\u9762\u4e88\u4ee5\u7f6e\u6362. clock\u7b97\u6cd5 \u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1 \u00b6 \u8fb9\u7f18\u89e6\u53d1\u662f\u6307\u6bcf\u5f53\u72b6\u6001\u53d8\u5316\u65f6\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\uff0c\u6761\u4ef6\u89e6\u53d1\u662f\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6 Python\u4e2d\u5f02\u6b65\u7f16\u7a0b\u5173\u952e\u5b57\u90fd\u6709\u4ec0\u4e48\uff1f\u5728Python\u4e2d\u5f02\u6b65\u7f16\u7a0b\u4e0eGenerator\uff0c\u534f\u7a0b\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f \u00b6 yeild async await Generator \u662f\u4e00\u4e2a\u5f02\u6b65\u5b9e\u73b0\u7684\u751f\u6210\u5668 \uff0c\u662f\u534f\u7a0b \u3002 \u534f\u7a0b\u662f\u7528\u6237\u6001\u7684\u7ebf\u7a0b\u3002 Python\u4e2d\u88c5\u9970\u5668\u7684\u672c\u8d28\u76f8\u5f53\u4e8e\u4ec0\u4e48\uff1f \u00b6 \u88c5\u9970\u5668\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u95ed\u5305\u51fd\u6570\uff0c\u800c\u95ed\u5305\u51fd\u6570\u7684\u672c\u8d28\u662f\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u5916\u6ea2\u3002 \uff08\u5916\u5c42\u51fd\u6570\u4e2d\u5305\u88f9\u7684\u5185\u90e8\u51fd\u6570\u53ef\u4f7f\u7528\u5916\u5c42\u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u63a5\u53d7\u5176\u503c\uff09 \u600e\u4e48\u83b7\u53d6xx\u7aef\u53e3\u5bf9\u5e94\u7684\u8fdb\u7a0b\u5e76\u6740\u6389\u5b83\u7684linux\u547d\u4ee4 \u00b6 sudo lsof -i:\u7aef\u53e3\u53f7\u3000\u3000\u3000\u3000\u3000\u3000//\u67e5\u627e\u5bf9\u5e94\u7684\u8fdb\u7a0b\u53f7 sudo kill -9 \u8fdb\u7a0b\u53f7\u3000\u3000\u3000\u3000\u3000\u3000//\u6740\u6b7b\u5bf9\u5e94\u7684\u8fdb\u7a0b \u7b5b\u9009Linux 10-15k \u5927\u5c0f\u7684\u6587\u4ef6 \u00b6 find -size +10k -15k \u600e\u4e48\u67e5\u627e\u6587\u4ef6\u4e2d\u5305\u542b\u67d0\u6587\u5b57\u7684\u547d\u4ee4 \u00b6 grep -rn \"phpernote\" * -C 5 -r \u662f\u9012\u5f52\u67e5\u627e -n \u662f\u663e\u793a\u884c\u53f7 -C number \u5339\u914d\u7684\u4e0a\u4e0b\u6587\u5206\u522b\u663e\u793a[number]\u884c docker\u7684\u5e95\u5c42\u5b9e\u73b0 \u00b6 Linux \u4e0a\u7684\u547d\u540d\u7a7a\u95f4\uff08Namespaces\uff09\u3001 \u63a7\u5236\u7ec4\uff08Control groups\uff09\u3001 Union \u6587\u4ef6\u7cfb\u7edf\uff08Union file systems\uff09 \u548c\u5bb9\u5668\u683c\u5f0f\uff08Container format\uff09\u3002 \u5806\u6808\u4e0e\u961f\u5217\u7684\u533a\u522b \u00b6 \u5806\u6808FILO \u961f\u5217FIFO \u9488\u5bf9\u7528\u6237\u4e0b\u8ba2\u5355\uff0c\u8ba2\u5355\u5b9a\u65f6\u5931\u6548\u7684\u529f\u80fd\uff0c\u5728\u5fae\u670d\u52a1\u7684\u8bbe\u8ba1\u601d\u8def\u4e0b\uff0c\u5e94\u8be5\u5982\u4f55\u6765\u8bbe\u8ba1\u5b9e\u73b0\uff1f \u00b6 \u53ef\u4ee5\u4f7f\u7528redis\u7684\u5b9a\u65f6\u5b58\u50a8key-value\u65b9\u5f0f EXPIRE key timeout\uff0c \u83b7\u53d6key\u65f6\u6ca1\u6709\u8fd9\u4e2akey\uff0c\u5219\u8ba4\u4e3a\u8ba2\u5355\u5931\u6548\uff0c\u8ba9\u5f53\u524d\u7a0b\u5e8f\u62ff\u53d6\u8ba2\u5355\u4fe1\u606f\uff0c\u8fd4\u56de\u7528\u6237\u63d0\u793a\u8ba2\u5355\u5931\u8d25\u3002 \u7ebf\u7a0b \u8fdb\u7a0b\u548c\u534f\u7a0b\u7684\u533a\u522b \u00b6 \u8fdb\u7a0b\uff1a\u6700\u5c0f\u5206\u914d\u5355\u5143\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u8d44\u6e90\u533a\u57df\u3002\u8fdb\u7a0b\u7684\u73af\u5883\u5305\u62ec\u73af\u5883\u53d8\u91cf\uff0c\u8fdb\u7a0b\u6240\u638c\u63a7\u7684\u8d44\u6e90\uff0c\u6709\u4e2d\u592e\u5904\u7406\u5668\uff0c\u6709\u5185\u5b58\uff0c\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u6620\u5c04\u7684\u7f51\u7edc\u7aef\u53e3\u7b49\u3002 \u7ebf\u7a0b\uff1acpu\u6700\u5c0f\u6267\u884c\u5355\u4f4d\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5730\u5740\u7a7a\u95f4\u548c\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u3002 \u534f\u7a0b\uff1a\u7528\u6237\u6001\u6267\u884c\uff0c\u5b8c\u5168\u662f\u7531\u7528\u6237\u7a0b\u5e8f\u6240\u63a7\u5236\u3002\u201c\u534f\u7a0b\u5c31\u662f\u4f60\u53ef\u4ee5\u6682\u505c\u6267\u884c\u7684\u51fd\u6570\u201d\u3002 \u6570\u636e\u5e93 \u00b6 \u4e8b\u7269\u56db\u7279\u6027 \u00b6 \u539f\u5b50\u6027\uff08Atomicity\uff09\uff1a\u8981\u4e48\u5168\u90e8\u88ab\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\u3002 \u4e00\u81f4\u6027\uff08Consistency\uff09\uff1a\u4e8b\u52a1\u5e94\u786e\u4fdd\u6570\u636e\u5e93\u7684\u72b6\u6001\u4ece\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u8f6c\u53d8\u4e3a\u53e6\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u3002 \u9694\u79bb\u6027\uff08Isolation\uff09\uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u5e94\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1\u7684\u6267\u884c\u3002 \u6301\u4e45\u6027\uff08Durability\uff09\uff1a\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u4ed6\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u5e94\u8be5\u6c38\u4e45\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u3002 mysql \u6570\u636e\u5e93\u7d22\u5f15 \u00b6 \u805a\u96c6\u7d22\u5f15,\u975e\u805a\u96c6\u7d22\u5f15,B-Tree,B+Tree Redis\u539f\u7406 \u00b6 Redis\u662f\u4e00\u4e2a\u5b8c\u5168\u5f00\u6e90\u514d\u8d39\u7684key-value\u5185\u5b58\u6570\u636e\u5e93\uff0c\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5176\u6709\u7740\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784 strings\u3001map\u3001 list\u3001sets\u3001 sorted sets \u901f\u5ea6\u5feb\uff1a\u4f7f\u7528\u6807\u51c6C\u5199\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\uff0c\u8bfb\u5199\u901f\u5ea6\u5206\u522b\u8fbe\u523010\u4e07/20\u4e07\uff0c \u6301\u4e45\u5316\uff1a\u5bf9\u6570\u636e\u7684\u66f4\u65b0\u91c7\u7528Copy-on-write\u6280\u672f\uff0c\u53ef\u4ee5\u5f02\u6b65\u5730\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u7b56\u7565\uff0c\u4e00\u662f\u6839\u636e\u65f6\u95f4\uff0c\u66f4\u65b0\u6b21\u6570\u7684\u5feb\u7167\uff08save 300 10 \uff09\u4e8c\u662f\u57fa\u4e8e\u8bed\u53e5\u8ffd\u52a0\u65b9\u5f0f(Append-only file\uff0caof) \u81ea\u52a8\u64cd\u4f5c\uff1a\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u64cd\u4f5c\u90fd\u662f\u81ea\u52a8\u7684\uff0c\u5f88\u5b89\u5168 \u5feb\u901f\u7684\u4e3b\u2013\u4ece\u590d\u5236\uff0c\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\uff0cSlave\u572821\u79d2\u5373\u5b8c\u6210\u4e86\u5bf9Amazon\u7f51\u7ad910G key set\u7684\u590d\u5236\u3002 Sharding\u6280\u672f\uff1a \u5f88\u5bb9\u6613\u5c06\u6570\u636e\u5206\u5e03\u5230\u591a\u4e2aRedis\u5b9e\u4f8b\u4e2d \u7f3a\u70b9: * \u5185\u5b58\u8d35\uff0c\u53ea\u80fd\u7528\u4e8e\u5c0f\u6570\u636e\u9ad8\u6027\u80fd\u3002 * \u96be\u652f\u6301\u5728\u7ebf\u6269\u5bb9 Multi-Version Concurrent Control \u00b6 Read Uncommitted\uff1a\u6700\u4f4e\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u4ec0\u4e48\u90fd\u4e0d\u9700\u8981\u505a\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u7ed3\u679c\u3002\u6240\u6709\u7684\u5e76\u53d1\u4e8b\u52a1\u95ee\u9898\u90fd\u4f1a\u53d1\u751f\u3002 Read Committed\uff1a\u53ea\u6709\u5728\u4e8b\u52a1\u63d0\u4ea4\u540e\uff0c\u5176\u66f4\u65b0\u7ed3\u679c\u624d\u4f1a\u88ab\u5176\u4ed6\u4e8b\u52a1\u770b\u89c1\u3002\u53ef\u4ee5\u89e3\u51b3\u810f\u8bfb\u95ee\u9898\u3002 Repeated Read\uff1a\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u5bf9\u4e8e\u540c\u4e00\u4efd\u6570\u636e\u7684\u8bfb\u53d6\u7ed3\u679c\u603b\u662f\u76f8\u540c\u7684\uff0c\u65e0\u8bba\u662f\u5426\u6709\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4efd\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u4e8b\u52a1\u662f\u5426\u63d0\u4ea4\u3002\u53ef\u4ee5\u89e3\u51b3\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3002 Serialization\uff1a\u4e8b\u52a1\u4e32\u884c\u5316\u6267\u884c\uff0c\u9694\u79bb\u7ea7\u522b\u6700\u9ad8\uff0c\u727a\u7272\u4e86\u7cfb\u7edf\u7684\u5e76\u53d1\u6027\u3002\u53ef\u4ee5\u89e3\u51b3\u5e76\u53d1\u4e8b\u52a1\u7684\u6240\u6709\u95ee\u9898 MyISAM\u548cInnoDB \u00b6 MyISAM \u9002\u5408\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u91cf\u67e5\u8be2\u7684\u5e94\u7528\uff0c\u4f46\u5176\u5bf9\u4e8e\u6709\u5927\u91cf\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u5f88\u597d\u3002 \u751a\u81f3\u4f60\u53ea\u662f\u9700\u8981update\u4e00\u4e2a\u5b57\u6bb5\uff0c\u6574\u4e2a\u8868\u90fd\u4f1a\u88ab\u9501\u8d77\u6765\uff0c\u800c\u522b\u7684\u8fdb\u7a0b\uff0c\u5c31\u7b97\u662f\u8bfb\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u64cd\u4f5c\u76f4\u5230\u8bfb\u64cd\u4f5c\u5b8c\u6210\u3002 \u53e6\u5916\uff0cMyISAM \u5bf9\u4e8e SELECT COUNT(*) \u8fd9\u7c7b\u7684\u8ba1\u7b97\u662f\u8d85\u5feb\u65e0\u6bd4\u7684\u3002 InnoDB \u7684\u8d8b\u52bf\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u7684\u5e94\u7528\uff0c\u5b83\u4f1a\u6bd4 MyISAM \u8fd8\u6162\u3002 \u4ed6\u662f\u5b83\u652f\u6301\u201c\u884c\u9501\u201d \uff0c\u4e8e\u662f\u5728\u5199\u64cd\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u4f18\u79c0\u3002\u5e76\u4e14\uff0c\u4ed6\u8fd8\u652f\u6301\u66f4\u591a\u7684\u9ad8\u7ea7\u5e94\u7528\uff0c\u6bd4\u5982\uff1a\u4e8b\u52a1\u3002 TCP\u534f\u8bae\u4e2d\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325 \u00b6 \u6ce8\u610f: \u4e2d\u65ad\u8fde\u63a5\u7aef\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef. \u4e0b\u9762\u4ec5\u4ee5\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u4e3e\u4f8b, \u53cd\u4e4b\u4ea6\u7136. urllib\u548curllib2\u7684\u533a\u522b \u00b6 urllib\u63d0\u4f9burlencode\u65b9\u6cd5\u7528\u6765GET\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u4ea7\u751f\uff0c\u800curllib2\u6ca1\u6709\u3002\u8fd9\u662f\u4e3a\u4f55urllib\u5e38\u548curllib2\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\u3002 urllib2\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u7c7b\u7684\u5b9e\u4f8b\u6765\u8bbe\u7f6eURL\u8bf7\u6c42\u7684headers\uff0curllib\u4ec5\u53ef\u4ee5\u63a5\u53d7URL\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u53ef\u4ee5\u4f2a\u88c5\u4f60\u7684User Agent\u5b57\u7b26\u4e32\u7b49\u3002 Post\u548cGet \u00b6 HTTP\u65b9\u6cd5\u7684\u5e42\u7b49\u6027\u662f\u6307\u4e00\u6b21\u548c\u591a\u6b21\u8bf7\u6c42\u67d0\u4e00\u4e2a\u8d44\u6e90\u5e94\u8be5\u5177\u6709\u540c\u6837\u7684\u526f\u4f5c\u7528\u3002(\u6ce8\u610f\u662f\u526f\u4f5c\u7528) GET\u7684URL\u4f1a\u88ab\u653e\u5728\u6d4f\u89c8\u5668\u5386\u53f2\u548cWEB \u670d\u52a1\u5668\u65e5\u5fd7\u91cc\u9762\u3002\uff0cPOST \u53d1\u5b8c\u57fa\u672c\u5c31\u6ca1\u6709\u4e86\u3002post\u53ef\u4ee5\u53d1\u9001\u7684\u6570\u636e\u591f\u5927\uff0cget\u53d7\u67d0\u4e9b\u7248\u672cie\u9650\u5236\u53d1\u4e0d\u4e86\u591a\u5c11\u4e1c\u897f\u3002get\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5e42\u7b49\u7684\uff0c\u4e5f\u5c31\u662f\u8bf7\u6c421\u6b21\u548cn\u6b21\u662f\u4e00\u6837\u7684\u3002 apache\u548cnginx\u7684\u533a\u522b \u00b6 nginx \u76f8\u5bf9 apache \u7684\u4f18\u70b9\uff1a * \u8f7b\u91cf\u7ea7\uff0c\u540c\u6837\u8d77web \u670d\u52a1\uff0c\u6bd4apache \u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\u53ca\u8d44\u6e90 * \u6297\u5e76\u53d1\uff0cnginx \u5904\u7406\u8bf7\u6c42\u662f\u5f02\u6b65\u975e\u963b\u585e\u7684\uff0c\u652f\u6301\u66f4\u591a\u7684\u5e76\u53d1\u8fde\u63a5\uff0c\u800capache \u5219\u662f\u963b\u585e\u578b\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u4e0bnginx \u80fd\u4fdd\u6301\u4f4e\u8d44\u6e90\u4f4e\u6d88\u8017\u9ad8\u6027\u80fd * \u914d\u7f6e\u7b80\u6d01 * \u9ad8\u5ea6\u6a21\u5757\u5316\u7684\u8bbe\u8ba1\uff0c\u7f16\u5199\u6a21\u5757\u76f8\u5bf9\u7b80\u5355 * \u793e\u533a\u6d3b\u8dc3 apache \u76f8\u5bf9nginx \u7684\u4f18\u70b9\uff1a * rewrite \uff0c\u6bd4nginx \u7684rewrite \u5f3a\u5927 * \u6a21\u5757\u8d85\u591a\uff0c\u57fa\u672c\u60f3\u5230\u7684\u90fd\u53ef\u4ee5\u627e\u5230 * \u5c11bug \uff0cnginx \u7684bug \u76f8\u5bf9\u8f83\u591a * \u8d85\u7a33\u5b9a APISIX: \u548c\u4f20\u7edf API \u7f51\u5173\u76f8\u6bd4\uff0c \u5177\u5907\u52a8\u6001\u8def\u7531\u548c\u63d2\u4ef6\u70ed\u52a0\u8f7d\uff0c\u7279\u522b\u9002\u5408\u5fae\u670d\u52a1\u4f53\u7cfb\u4e0b\u7684 API \u7ba1\u7406\u3002 \u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58 \u00b6 \u660e\u6587\u4fdd\u5b58 \u660e\u6587hash\u540e\u4fdd\u5b58,\u5982md5 MD5+Salt\u65b9\u5f0f,\u8fd9\u4e2asalt\u53ef\u4ee5\u968f\u673a \u77e5\u4e4e\u4f7f\u7528\u4e86Bcrypy(\u597d\u50cf)\u52a0\u5bc6 XSRF\u548cXSS \u00b6 CSRF\u91cd\u70b9\u5728\u8bf7\u6c42,XSS\u91cd\u70b9\u5728\u811a\u672c CGI\u548cWSGI \u00b6 CGI\u662f\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u8fde\u63a5web\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u7528\u6237\u901a\u8fc7CGI\u6765\u83b7\u53d6\u52a8\u6001\u6570\u636e\u6216\u6587\u4ef6\u7b49\u3002 CGI\u7a0b\u5e8f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u7528\u51e0\u4e4e\u6240\u6709\u8bed\u8a00\u6765\u5199\uff0c\u5305\u62ecperl\uff0cc\uff0clua\uff0cpython\u7b49\u7b49\u3002 WSGI, Web Server Gateway Interface\uff0c\u662fPython\u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u548cWeb\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u79cd\u63a5\u53e3\uff0cWSGI\u7684\u5176\u4e2d\u4e00\u4e2a\u76ee\u7684\u5c31\u662f\u8ba9\u7528\u6237\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u8bed\u8a00(Python)\u7f16\u5199\u524d\u540e\u7aef\u3002 Socket \u00b6 Socket=Ip address+ TCP/UDP + port \u6d4f\u89c8\u5668\u7f13\u5b58 \u00b6 Cache-control\uff1a\u503c\u53ef\u4ee5\u662fpublic\u3001private\u3001no-cache\u3001no- store\u3001no-transform\u3001must-revalidate\u3001proxy-revalidate\u3001max-age no-cache\u4ee3\u8868\u4e0d\u7f13\u5b58\u8fc7\u671f\u7684\u8d44\u6e90\uff0c\u7f13\u5b58\u4f1a\u5411\u670d\u52a1\u5668\u8fdb\u884c\u6709\u6548\u5904\u7406\u786e\u8ba4\u4e4b\u540e\u5904\u7406\u8d44\u6e90 \u800cno-store\u624d\u662f\u771f\u6b63\u7684\u4e0d\u8fdb\u884c\u7f13\u5b58\u3002 304 Not Modified Ajax \u00b6 AJAX,Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09, \u662f\u4e0e\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002 unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC) \u00b6 \u7ba1\u9053 Pipe from multiprocessing import Process, Pipe Pipe().send(\"Hello 11\") \u547d\u540d\u7ba1\u9053 named pipe import os fd = os.open('pipetest',os.O_NONBLOCK | os.O_CREAT | os.O_RDWR) os.write(fd,\"hello\") \u4fe1\u53f7\uff08Signal\uff09 import signal signal.signal(signal.SIGTERM,lambda a,b;print(a,b)) \u6d88\u606f\uff08Message\uff09\u961f\u5217 import Queue Queue.Queue().put \u5171\u4eab\u5185\u5b58 / \u5185\u5b58\u6620\u5c04\uff08mapped memory\uff09 import mmap with contextlib.closing(mmap.mmap(-1, 100, tagname='SASU', access=mmap.ACCESS_WRITE)) as m: m.write() m.flush() \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u539f\u7406\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u91cf\uff0c\u5bf9\u591a\u4e2a\u8fdb\u7a0b\u53ef\u89c1\uff0c\u4e14\u591a\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u64cd\u4f5c\u3002\u8fdb\u7a0b\u901a\u8fc7\u5bf9\u6570\u91cf\u591a\u5c11\u7684\u5224\u65ad\u6267\u884c\u5404\u81ea\u7684\u884c\u4e3a\u3002(\u751f\u4ea7\u8005/\u6d88\u8d39\u8005) multiprocessing --> Semaphore() sem = Semaphore(num) \u529f\u80fd\uff1a\u521b\u5efa\u4fe1\u53f7\u91cf \u53c2\u6570\uff1a\u4fe1\u53f7\u91cf\u521d\u59cb\u503c \u8fd4\u56de\uff1a\u4fe1\u53f7\u91cf\u5bf9\u8c61 sem.get_value() \u83b7\u53d6\u4fe1\u53f7\u91cf\u503c sem.acquire() \u5c06\u4fe1\u53f7\u91cf\u51cf1 \u5f53\u4fe1\u53f7\u91cf\u4e3a0\u65f6\u4f1a\u963b\u585e sem.release() \u5c06\u4fe1\u53f7\u91cf\u52a01 \u5957\u63a5\u53e3\uff08Socket\uff09 import socket http\u548ctcp\u7684\u533a\u522b \u00b6 HTTP\u5728\u5e94\u7528\u5c42\uff0cTCP \u548c UDP \u90fd\u4f4d\u4e8e\u8ba1\u7b97\u673a\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u8fd0\u8f93\u5c42\u3002 HTTP \u4e2d\u5305\u62ec\u8bb8\u591a\u65b9\u6cd5\uff0cGet \uff0cPost \u7b49\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \u00b6 \u770b\u5faa\u73af\u5d4c\u5957 \u589e\u957f\u65b9\u5f0f \u5faa\u73af\u7ed3\u675f\u6761\u4ef6 # log2 N for(i=0;i<n:i*2) a++ \u89e3\u51b3\u670d\u52a1\u6027\u80fd\u74f6\u9888 \u00b6 \u589e\u52a0worker \u9884\u5904\u7406\u6570\u636e \u5f02\u6b65\u5904\u7406io\u5bc6\u96c6\u578b\u95ee\u9898 \u591a\u7ebf\u7a0b\u5904\u7406cpu\u5bc6\u96c6\u578b\u95ee\u9898 \u961f\u5217 \u71c3\u5c3d\u56fe\u5206\u6790 mongodb\u7d22\u5f15 \u00b6 MySQL \u4e4b\u6240\u4ee5\u9009\u62e9 B+\uff0c\u90a3\u662f\u56e0\u4e3a\u51fa\u4e8e\u8303\u56f4\u9009\u62e9\u8003\u8651\u7684\u3002\u90a3\u4e48 MongoDB \u9009\u62e9 B \u6811\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5355\u4e00\u6570\u636e\u67e5\u8be2\u591a\uff0c\u8303\u56f4\u67e5\u8be2\u5c11\u3002 fastapi \u4e0e flask \u7684\u4e0d\u540c \u00b6 todo \u00b6 \u4e3a\u4ec0\u4e48\u8981\u7528 gunicorn \u00b6 WSGI \u540c\u6b65\u5904\u7406\u6a21\u5f0f\u7684, WSGI \u91c7\u7528\u591a\u7ebf\u7a0b\u65b9\u5f0f\u6765\u652f\u6301\u5e76\u53d1 gunicorn\u662fprefork\u6a21\u5f0f\uff0c\u4ecenginx\u6bcf\u53d1\u8fc7\u6765\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5b83\u5c31fork\u4e00\u4e2a\u8fdb\u7a0b\u53bb\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u5e76buffer\u76f8\u5173\u7684\u6570\u636e\u3002wsgi\u670d\u52a1\u5668\u90fd\u662f\u4e13\u95e8\u4e3a\u751f\u4ea7\u73af\u5883 flask \u7528\u5f02\u6b65\u7684\u65b9\u6cd5 \u00b6 gevent mongo \u8bbe\u7f6etimeout\u7684data \u00b6 \u5173\u952e\u8bcd: expireAfterSeconds\u3001TTL MongoDB\u7684\u8fc7\u671f\u8bbe\u7f6e\u4f9d\u8d56\u7d22\u5f15(TTL-index)\uff0c \u8bbe\u7f6e\u8fc7\u671f\u5b57\u6bb5\u4f7f\u7528\u7684\u7d22\u5f15\u540e\uff0c \u63d2\u5165\u6570\u636e\u65f6\u5728\u8be5\u5b57\u6bb5\u6307\u5b9a\u65e5\u671f\u65f6\u95f4\uff0c \u7ecf\u8fc7\u5728\u521b\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a\u7684\u79d2\u6570\u540e\uff0c\u8be5\u8bb0\u5f55\u4f1a\u88abMongoDB\u8ba4\u4e3a\u5df2\u7ecf\u8fc7\u671f\uff0c\u7136\u540e\u5220\u9664\u3002 grpc \u4e0e http\u7684\u4e0d\u540c \u00b6 grpc \u5e8f\u5217\u5316\u901f\u5ea6\u5feb\uff0c\u538b\u7f29\u6548\u7387\u9ad8\u3002\u4f20\u8f93\u534f\u8bae \u91c7\u7528http2\uff0c\u6027\u80fd\u6bd4http1.1\u597d\u4e86\u5f88\u591a\u3002 http\u6bcf\u6b21\u8bf7\u6c42\u53d1\u9001\u4e00\u4e2arequest\uff0c\u670d\u52a1\u5668\u54cd\u5e94\u4e4b\u540e\u5c31\u65ad\u6389\u3002 bcolz hdf5 \u00b6 Bcolz\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u4ef6\u5939 hdf5\u662f\u4e00\u4e2a.h5\u6587\u4ef6 Bcolz\u5b58\u50a8(\u538b\u7f29)\u6570\u636e\u7684\u901f\u5ea6\u662fHDF5\u768410\u500d\u4ee5\u4e0a\uff0c\u5e76\u53d1\u5b8c\u6210\u3002 rabbitmq \u548c kafuka \u533a\u522b \u00b6 \u540d\u79f0 \u5e94\u7528\u573a\u666f\u65b9\u9762 \u67b6\u6784\u6a21\u578b\u65b9\u9762 \u541e\u5410\u91cf\u65b9\u9762 \u96c6\u7fa4\u8d1f\u8f7d\u5747\u8861\u65b9\u9762 RabbitMQ \u7528\u4e8e\u5b9e\u65f6\u7684\uff0c\u5bf9\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u6d88\u606f\u4f20\u9012\u4e0a\u3002 \u4ee5broker\u4e3a\u4e2d\u5fc3\uff0c\u6709\u6d88\u606f\u7684\u786e\u8ba4\u673a\u5236\u3002 \u652f\u6301\u6d88\u606f\u7684\u53ef\u9760\u7684\u4f20\u9012\uff0c\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff0c\u57fa\u4e8e\u5b58\u50a8\u7684\u53ef\u9760\u6027\u7684\u8981\u6c42\u5b58\u50a8\u53ef\u4ee5\u91c7\u7528\u5185\u5b58\u6216\u786c\u76d8\uff0c\u541e\u5410\u91cf\u5c0f\u3002 \u672c\u8eab\u4e0d\u652f\u6301\u8d1f\u8f7d\u5747\u8861\uff0c\u9700\u8981loadbalancer\u7684\u652f\u6301 kafka \u7528\u4e8e\u5904\u4e8e\u6d3b\u8dc3\u7684\u6d41\u5f0f\u6570\u636e\uff0c\u5927\u6570\u636e\u91cf\u7684\u6570\u636e\u5904\u7406\u4e0a\u3002 \u4ee5consumer\u4e3a\u4e2d\u5fc3\uff0c\u65e0\u6d88\u606f\u7684\u786e\u8ba4\u673a\u5236\u3002 \u5185\u90e8\u91c7\u7528\u6d88\u606f\u7684\u6279\u91cf\u5904\u7406\uff0c\u6570\u636e\u7684\u5b58\u50a8\u548c\u83b7\u53d6\u662f\u672c\u5730\u78c1\u76d8\u987a\u5e8f\u6279\u91cf\u64cd\u4f5c\uff0c\u6d88\u606f\u5904\u7406\u7684\u6548\u7387\u9ad8\uff0c\u541e\u5410\u91cf\u9ad8\u3002 \u91c7\u7528zookeeper\u5bf9\u96c6\u7fa4\u4e2d\u7684broker\uff0cconsumer\u8fdb\u884c\u7ba1\u7406\uff0c\u53ef\u4ee5\u6ce8\u518ctopic\u5230zookeeper\u4e0a\uff0c\u901a\u8fc7zookeeper\u7684\u534f\u8c03\u673a\u5236\uff0cproducer\u4fdd\u5b58\u5bf9\u5e94\u7684topic\u7684broker\u4fe1\u606f\uff0c\u53ef\u4ee5\u968f\u673a\u6216\u8005\u8f6e\u8be2\u53d1\u9001\u5230broker\u4e0a\uff0cproducer\u53ef\u4ee5\u57fa\u4e8e\u8bed\u4e49\u6307\u5b9a\u5206\u7247\uff0c\u6d88\u606f\u53d1\u9001\u5230broker\u7684\u67d0\u4e2a\u5206\u7247\u4e0a\u3002 QPS TPS \u00b6 \u6211\u62ff\u666e\u7f57\u7c73\u65af\u7684\u65e5\u5fd7\u770b\u7684 GET\u8bf7\u6c42\u7684 \u603b\u8bf7\u6c42\u6570\u91cf / \u603b\u7b49\u5f85\u65f6\u957f = QPS 668971.0 / 7273.539398193359 = 91.97324 \u5927\u698292\uff0c\u4e5f\u4e0d\u77e5\u9053\u65f6\u591a\u65f6\u5c11 \u56e0\u4e3a\u4e0d\u662f\u7eafGET\u8bf7\u6c42\uff0c\u4e5f\u7b97\u6570\u636e\u5e93\u5199\u5165\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u4e5f\u7b97TPS\u3002 RabbitMQ\u7684\u7ed3\u6784 \u00b6 Broker\uff1a\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6d88\u606f\u961f\u5217\u670d\u52a1\u5668\u5b9e\u4f53\u3002 Exchange\uff1a\u6d88\u606f\u4ea4\u6362\u673a\uff0c\u5b83\u6307\u5b9a\u6d88\u606f\u6309\u4ec0\u4e48\u89c4\u5219\uff0c\u8def\u7531\u5230\u54ea\u4e2a\u961f\u5217\u3002 Queue\uff1a\u6d88\u606f\u961f\u5217\u8f7d\u4f53\uff0c\u6bcf\u4e2a\u6d88\u606f\u90fd\u4f1a\u88ab\u6295\u5165\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u961f\u5217\u3002 Binding\uff1a\u7ed1\u5b9a\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u628aexchange\u548cqueue\u6309\u7167\u8def\u7531\u89c4\u5219\u7ed1\u5b9a\u8d77\u6765\u3002 Routing Key\uff1a\u8def\u7531\u5173\u952e\u5b57\uff0cexchange\u6839\u636e\u8fd9\u4e2a\u5173\u952e\u5b57\u8fdb\u884c\u6d88\u606f\u6295\u9012\u3002 vhost\uff1a\u865a\u62df\u4e3b\u673a\uff0c\u4e00\u4e2abroker\u91cc\u53ef\u4ee5\u5f00\u8bbe\u591a\u4e2avhost\uff0c\u7528\u4f5c\u4e0d\u540c\u7528\u6237\u7684\u6743\u9650\u5206\u79bb\u3002 producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u5c31\u662f\u6295\u9012\u6d88\u606f\u7684\u7a0b\u5e8f\u3002 consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u5c31\u662f\u63a5\u53d7\u6d88\u606f\u7684\u7a0b\u5e8f\u3002 channel\uff1a\u6d88\u606f\u901a\u9053\uff0c\u5728\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a\u8fde\u63a5\u91cc\uff0c\u53ef\u5efa\u7acb\u591a\u4e2achannel\uff0c\u6bcf\u4e2achannel\u4ee3\u8868\u4e00\u4e2a\u4f1a\u8bdd\u4efb\u52a1\u3002 \u7535\u8111\u4e0a\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 www.baidu.com\uff0c\u56de\u8f66\uff0c\u5230\u767e\u5ea6\u9875\u9762\u51fa\u73b0\u3002\u4e2d\u95f4\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f \u00b6 \u7b80\u5355\u7248\u672c * DNS\u89e3\u6790\u57df\u540d\u5230ip\u5730\u5740 * \u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42 * \u670d\u52a1\u5668\u63a5\u53d7\u5230\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 * \u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94 * \u6d4f\u89c8\u5668\u9488\u5bf9\u54cd\u5e94\u8fdb\u884c\u89e3\u7801\uff0c\u83b7\u53d6\u5230html * \u6d4f\u89c8\u5668\u6e32\u67d3html\u3001\u6784\u5efadom\u8282\u70b9\u3001\u52a0\u8f7dcss\u3001\u8fd0\u884c\u811a\u672c \u8fd9\u9053\u9898\u62d3\u5c55\u6027\u6781\u9ad8\uff1a https://www.zhihu.com/question/437193010/answer/1653724247 Todo \u00b6 \u56e0\u4e3a\u653e\u5728Todo list\u6709\u591a\u7aef\u540c\u6b65\u95ee\u9898\uff0c\u6570\u636e\u4f1a\u6d88\u5931\uff0c\u6240\u4ee5\u6362\u6210\u7b80\u4e66\u8bb0\u5f55\u3002 \u5f85\u6574\u7406\u8d44\u6599 https://github.com/resumejob/interview-questions https://github.com/hantmac/Python-Interview-Customs-Collection https://github.com/jackfrued/Python-Interview-Bible/blob/master/Python%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8-%E5%9F%BA%E7%A1%80%E7%AF%87-2020.md https://github.com/resumejob/interview-questions#%E8%85%BE%E8%AE%AF https://github.com/julycoding/The-Art-Of-Programming-By-July/blob/master/ebook/zh/03.01.md https://www.cnblogs.com/Leo_wl/p/12076011.html https://mp.weixin.qq.com/s/ENWm8W2hBvlw5pBDQTHpfA https://my.oschina.net/yzbty32/blog/549305 https://juejin.cn/post/6844903958624878606 \u590d\u4e60\u547d\u4ee4 https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/lsof.html netstat https://m.runoob.com/linux/linux-comm-awk.html shc last awk zabbix https://coding.imooc.com/class/chapter/318.html#Anchor \u5df2\u770b\u8fc7\u7684\u8d44\u6599 \u00b6 https://github.com/taizilongxu/interview_python https://zhuanlan.zhihu.com/p/20953544 https://www.jianshu.com/p/2a17957ce https://www.jianshu.com/p/J4U6rR https://www.runoob.com/python3/python3-namespace-scope.html https://zhuanlan.zhihu.com/p/73204847 https://xieguanglei.github.io/blog/post/red-black-tree.html https://www.jianshu.com/p/c25601f0cc43 https://blog.csdn.net/u013129109/article/details/79608384 https://www.cnblogs.com/nankezhishi/archive/2012/06/09/getandpost.html https://www.cnblogs.com/0201zcr/p/5296843.html https://segmentfault.com/a/1190000008227211 https://zhuanlan.zhihu.com/p/34248254 \u8d44\u6599\u5927\u5168 \u00b6 https://github.com/EbookFoundation/free-programming-books/blob/master/books/free-programming-books-zh.md","title":"\u590d\u4e60\u7b14\u8bb0"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"\u672c\u590d\u4e60\u7b14\u8bb0\u57fa\u672c\u6765\u81ea\u4e8e\u7f51\u4e0a\u590d\u5236 \u672c\u590d\u4e60\u7b14\u8bb0\u4e3b\u8981\u7528\u9014\u5728\u4e8e\u6574\u7406\u540e\u653e\u5728\u624b\u673a\u4e0a\u542c \u672c\u590d\u4e60\u8d44\u6599\u4e3b\u8981\u7ed9\u535a\u4e3b\u7528 \u535a\u4e3b\u89c9\u5f97\u4e0d\u91cd\u8981\u7684\u3001\u6bd4\u5982python\u57fa\u7840\u8bed\u6cd5\u4ec0\u4e48\u7684 \u3001\u5c31\u4e0d\u4f1a\u7ed9\u51fa\u4e86\uff0c\u7cfb\u7edf\u5b66\u4e60\u8bf7gayhub\u641c\u7d22\u3002","title":"\u590d\u4e60\u7b14\u8bb0"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python","text":"","title":"Python"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#pythonmetaclass","text":"\u62e6\u622a\u7c7b\u7684\u521b\u5efa \u4fee\u6539\u7c7b \u8fd4\u56de\u4fee\u6539\u4e4b\u540e\u7684\u7c7b","title":"Python\u4e2d\u7684\u5143\u7c7b(metaclass)\uff1a"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"class Person: name=\"aaa\" p1=Person() p2=Person() p1.name=\"bbb\" print(p1.name) # bbb print(p2.name) # aaa print(Person.name) # aaa","title":"\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_1","text":"\u7b80\u5355\u4e00\u53e5\u5c31\u662f\u8fd0\u884c\u65f6\u80fd\u591f\u83b7\u5f97\u5bf9\u8c61\u7684\u7c7b\u578b.\u6bd4\u5982type(),dir(),getattr(),hasattr(),isinstance().","title":"Python\u81ea\u7701"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_2","text":"foo :\u4e00\u79cd\u7ea6\u5b9a,Python\u5185\u90e8\u7684\u540d\u5b57,\u7528\u6765\u533a\u522b\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u547d\u540d,\u4ee5\u9632\u51b2\u7a81\uff0c\u5c31\u662f\u4f8b\u5982__init__(), del (), call ()\u8fd9\u4e9b\u7279\u6b8a\u65b9\u6cd5 _foo:\u4e00\u79cd\u7ea6\u5b9a,\u7528\u6765\u6307\u5b9a\u53d8\u91cf\u79c1\u6709.\u7a0b\u5e8f\u5458\u7528\u6765\u6307\u5b9a\u79c1\u6709\u53d8\u91cf\u7684\u4e00\u79cd\u65b9\u5f0f.\u4e0d\u80fd\u7528from module import * \u5bfc\u5165\uff0c\u5176\u4ed6\u65b9\u9762\u548c\u516c\u6709\u4e00\u6837\u8bbf\u95ee\uff1b __foo:\u8fd9\u4e2a\u6709\u771f\u6b63\u7684\u610f\u4e49:\u89e3\u6790\u5668\u7528_classname__foo\u6765\u4ee3\u66ff\u8fd9\u4e2a\u540d\u5b57,\u4ee5\u533a\u522b\u548c\u5176\u4ed6\u7c7b\u76f8\u540c\u7684\u547d\u540d,\u5b83\u65e0\u6cd5\u76f4\u63a5\u50cf\u516c\u6709\u6210\u5458\u4e00\u6837\u968f\u4fbf\u8bbf\u95ee,\u901a\u8fc7\u5bf9\u8c61\u540d._\u7c7b\u540d__xxx\u8fd9\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee.","title":"Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"\u95ee\uff1a \u5c06\u5217\u8868\u751f\u6210\u5f0f\u4e2d[]\u6539\u6210() \u4e4b\u540e\u6570\u636e\u7ed3\u6784\u662f\u5426\u6539\u53d8\uff1f \u7b54\u6848\uff1a\u662f\uff0c\u4ece\u5217\u8868\u53d8\u4e3a\u751f\u6210\u5668 \u8fed\u4ee3\u5668\uff1a\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u53ef\u4ee5\u8bb0\u4f4f\u904d\u5386\u7684\u4f4d\u7f6e\u7684\u5bf9\u8c61\uff1a next(iter([1,2,3,4])) class MyNumbers: def __iter__(self): self.a = 1 return self def __next__(self): x = self.a self.a += 1 if self.a> 3: raise StopIteration return x myclass = MyNumbers() myiter = iter(myclass) print(next(myiter)) print(next(myiter)) \u751f\u6210\u5668\uff1a\u4f7f\u7528\u4e86 yield \u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u751f\u6210\u5668\uff08 generator \uff09\uff0c\u7b80\u5355\u70b9\u7406\u89e3\u751f\u6210\u5668\u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002","title":"\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#aop","text":"\u88ab\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f:\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u7b49\u3002 \u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002","title":"\u9762\u5411\u5207\u9762\u7f16\u7a0b(AOP)\u548c\u88c5\u9970\u5668"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_3","text":"\u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002 \u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002 \u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002 Python \u90fd\u4e0d\u9700\u8981","title":"Python\u4e2d\u91cd\u8f7d"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"python\u7684\u591a\u7236\u7c7b\u7ee7\u627f\u95ee\u9898 \u65b0\u5f0f\u7c7b\u7ee7\u627f\u662f\u6839\u636eC3\u7b97\u6cd5,\u65e7\u5f0f\u7c7b\u662f\u6df1\u5ea6\u4f18\u5148\u3002 \u5728Python3.6\u4e0b,className.mro()\u67e5\u770b\u7ee7\u627f\u987a\u5e8f\u3002","title":"\u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#slots","text":"__slots__\u662f\u4e00\u4e2a\u7c7b\u53d8\u91cf\uff0c__slots__\u5c5e\u6027\u53ef\u4ee5\u8d4b\u503c\u4e00\u4e2a\u5305\u542b\u7c7b\u5c5e\u6027\u540d\u7684\u5b57\u7b26\u4e32\u5143\u7ec4\uff0c \u6216\u8005\u662f\u53ef\u8fed\u4ee3\u53d8\u91cf\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ea\u8981\u5728\u7c7b\u5b9a\u4e49\u7684\u65f6\u5019\uff0c \u4f7f\u7528__slots__ = a Tuple\u6765\u5b9a\u4e49\u8be5\u5c5e\u6027\u5c31\u53ef\u4ee5\u4e86\u3002","title":"slots"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#__new____init__","text":"\u8fd9\u4e2a__new__\u786e\u5b9e\u5f88\u5c11\u89c1\u5230,\u5148\u505a\u4e86\u89e3\u5427. __new__\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5,\u800c__init__\u662f\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5. __new__\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u521b\u5efa\u7684\u5b9e\u4f8b,\u800c__init__\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de. \u53ea\u6709\u5728__new__\u8fd4\u56de\u4e00\u4e2acls\u7684\u5b9e\u4f8b\u65f6\u540e\u9762\u7684__init__\u624d\u80fd\u88ab\u8c03\u7528. \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u65f6\u8c03\u7528__new__,\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u7528__init__. ps: __metaclass__\u662f\u521b\u5efa\u7c7b\u65f6\u8d77\u4f5c\u7528.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4f7f\u7528__metaclass__,__new__\u548c__init__\u6765\u5206\u522b\u5728\u7c7b\u521b\u5efa,\u5b9e\u4f8b\u521b\u5efa\u548c\u5b9e\u4f8b\u521d\u59cb\u5316\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5c0f\u624b\u811a.","title":"__new__\u548c__init__\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"class Singleton(object): def __new__(cls, *args, **kw): if not hasattr(cls, '_instance'): orig = super(Singleton, cls) cls._instance = orig.__new__(cls, *args, **kw) return cls._instance class MyClass(Singleton): a = 1 # -------------------- # \u88c5\u9970\u5668\u7248\u672c def singleton(cls): instances = {} def getinstance(*args, **kw): if cls not in instances: instances[cls] = cls(*args, **kw) return instances[cls] return getinstance @singleton class MyClass: ... # -------------------- # \u4f5c\u4e3apython\u7684\u6a21\u5757\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f # mysingleton.py class My_Singleton(object): def foo(self): pass my_singleton = My_Singleton() # to use from mysingleton import my_singleton my_singleton.foo() \u5171\u4eab\u5c5e\u6027\u903b\u8f91\u4e0a\u4e5f\u662f\u5355\u4f8b\u6a21\u5f0f \u521b\u5efa\u5b9e\u4f8b\u65f6\u628a\u6240\u6709\u5b9e\u4f8b\u7684__dict__\u6307\u5411\u540c\u4e00\u4e2a\u5b57\u5178,\u8fd9\u6837\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 class Borg(object): _state = {} def __new__(cls, *args, **kw): ob = super(Borg, cls).__new__(cls, *args, **kw) ob.__dict__ = cls._state return ob class MyClass2(Borg): a = 1","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_4","text":"Python \u4e2d\uff0c\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u603b\u662f\u7531\u5728\u4ee3\u7801\u4e2d\u88ab\u8d4b\u503c\u7684\u5730\u65b9\u6240\u51b3\u5b9a\u7684\u3002 \u5f53 Python \u9047\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u8bdd\u4ed6\u4f1a\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff1a \u672c\u5730\u4f5c\u7528\u57df\uff08Local\uff09\u2192\u5f53\u524d\u4f5c\u7528\u57df\u88ab\u5d4c\u5165\u7684\u672c\u5730\u4f5c\u7528\u57df\uff08Enclosing locals\uff09\u2192\u5168\u5c40/\u6a21\u5757\u4f5c\u7528\u57df\uff08Global\uff09\u2192\u5185\u7f6e\u4f5c\u7528\u57df\uff08Built-in\uff09","title":"Python\u4e2d\u7684\u4f5c\u7528\u57df"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#gil","text":"\u7ebf\u7a0b\u5168\u5c40\u9501(Global Interpreter Lock),\u5373Python\u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u800c\u91c7\u53d6\u7684\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c\u7684\u9650\u5236, \u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u4e2a\u6838\u53ea\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u8fd0\u884c\u4e00\u4e2a\u7ebf\u7a0b. \u5bf9\u4e8eio\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u8d77\u5230\u4f5c\u7528\uff0c \u4f46\u5bf9\u4e8ecpu\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u51e0\u4e4e\u5360\u4e0d\u5230\u4efb\u4f55\u4f18\u52bf\uff0c\u8fd8\u6709\u53ef\u80fd\u56e0\u4e3a\u4e89\u593a\u8d44\u6e90\u800c\u53d8\u6162\u3002 \u5728python3.x\u4e2d\uff0cGIL\u4e0d\u4f7f\u7528ticks\u8ba1\u6570\uff0c \u6539\u4e3a\u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653eGIL\uff09\uff0c \u8fd9\u6837\u5bf9CPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\u66f4\u52a0\u53cb\u597d\uff0c \u4f46\u4f9d\u7136\u6ca1\u6709\u89e3\u51b3GIL\u5bfc\u81f4\u7684\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u95ee\u9898","title":"GIL\u7ebf\u7a0b\u5168\u5c40\u9501"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"\u95ed\u5305\u53ef\u4ee5\u4fdd\u5b58\u5f53\u524d\u7684\u8fd0\u884c\u73af\u5883 \u95ed\u5305\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u70b9: * \u5fc5\u987b\u6709\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570 * \u5185\u5d4c\u51fd\u6570\u5fc5\u987b\u5f15\u7528\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf * \u5916\u90e8\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u5185\u5d4c\u51fd\u6570","title":"\u95ed\u5305"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_5","text":"filter >>>a = [1,2,3,4,5,6,7] >>>b = filter(lambda x: x > 5, a) >>>print b >>>[6,7] map >>> a = map(lambda x:x*2,[1,2,3]) >>> list(a) [2, 4, 6] reduce from functools import reduce ...: def c(x,y): ...: print(x,y) ...: return x*y ...: reduce(c,range(1,5)) 1 2 2 3 6 4 Out[10]: 24","title":"Python\u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_6","text":"Python GC\u4e3b\u8981\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff08reference counting\uff09\u6765\u8ddf\u8e2a\u548c\u56de\u6536\u5783\u573e\u3002 \u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u65b0\u7684\u5f15\u7528\u65f6\uff0c\u5b83\u7684ob_refcnt\u5c31\u4f1a\u589e\u52a0\uff0c \u5f53\u5f15\u7528\u5b83\u7684\u5bf9\u8c61\u88ab\u5220\u9664\uff0c\u5b83\u7684ob_refcnt\u5c31\u4f1a\u51cf\u5c11. \u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u8be5\u5bf9\u8c61\u751f\u547d\u5c31\u7ed3\u675f\u4e86\u3002 \u57fa\u672c\u601d\u8def\u662f\u5148\u6309\u9700\u5206\u914d\uff0c\u7b49\u5230\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u65f6\u5019\u4ece\u5bc4\u5b58\u5668\u548c\u7a0b\u5e8f\u6808\u4e0a\u7684\u5f15\u7528\u51fa\u53d1\uff0c \u904d\u5386\u4ee5\u5bf9\u8c61\u4e3a\u8282\u70b9\u3001\u4ee5\u5f15\u7528\u4e3a\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u628a\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0\uff0c \u7136\u540e\u6e05\u626b\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u628a\u6240\u6709\u6ca1\u6807\u8bb0\u7684\u5bf9\u8c61\u91ca\u653e\u3002 Python\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u4e09\u4ee3\u5bf9\u8c61\u96c6\u5408\uff0c\u7d22\u5f15\u6570\u8d8a\u5927\uff0c\u5bf9\u8c61\u5b58\u6d3b\u65f6\u95f4\u8d8a\u957f\u3002 \u5f53\u67d0\u4e9b\u5185\u5b58\u5757M\u7ecf\u8fc7\u4e863\u6b21\u5783\u573e\u6536\u96c6\u7684\u6e05\u6d17\u4e4b\u540e\u8fd8\u5b58\u6d3b\u65f6\uff0c \u6211\u4eec\u5c31\u5c06\u5185\u5b58\u5757M\u5212\u5230\u4e00\u4e2a\u96c6\u5408A\u4e2d\u53bb\uff0c\u800c\u65b0\u5206\u914d\u7684\u5185\u5b58\u90fd\u5212\u5206\u5230\u96c6\u5408B\u4e2d\u53bb\u3002 \u5f53\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u53ea\u5bf9\u96c6\u5408B\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002","title":"Python\u5783\u573e\u56de\u6536\u673a\u5236"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#selectpollepoll","text":"select\u67093\u4e2a\u7f3a\u70b9: * \u8fde\u63a5\u6570\u53d7\u9650 * \u67e5\u627e\u914d\u5bf9\u901f\u5ea6\u6162 * \u6570\u636e\u7531\u5185\u6838\u62f7\u8d1d\u5230\u7528\u6237\u6001 poll\u4f7f\u7528pollfd\u7ed3\u6784\u800c\u4e0d\u662fselect\u7684fd_set\u7ed3\u6784\uff0cpoll\u6539\u5584\u4e86\u7b2c\u4e00\u4e2a\u7f3a\u70b9\u3002 epoll\u6539\u4e86\u4e09\u4e2a\u7f3a\u70b9. poll\u5728\u201c\u9192\u7740\u201d\u7684\u65f6\u5019\u53ea\u8981\u5224\u65ad\u4e00\u4e0b\u5c31\u7eea\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\u5c31\u884c\u4e86","title":"select,poll\u548cepoll"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_8","text":"\u9ad8\u7ea7\u8c03\u5ea6\uff08\u4f5c\u4e1a\u8c03\u5ea6/\u957f\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u4f4e\uff09\uff1a\u5c06\u5916\u5b58\u4f5c\u4e1a\u8c03\u5165\u5185\u5b58 \u4f4e\u7ea7\u8c03\u5ea6\uff08\u8fdb\u7a0b\u8c03\u5ea6/\u77ed\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u9ad8\uff09\uff1a\u51b3\u5b9a\u5c31\u5c31\u7eea\u961f\u5217\u4e2d\u54ea\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u5904\u7406\u673a\u5e76\u6267\u884c \u4ec0\u4e48\u662f\u8c03\u5ea6\uff1f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u8d44\u6e90\u5206\u914d \u4ec0\u4e48\u662f\u9965\u997f\uff1f\u67d0\u5199\u8fdb\u7a0b\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u5f97\u4e0d\u5230\u5904\u7406 \u8c03\u5ea6\u7b97\u6cd5\u7684\u5206\u7c7b * \u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u62a2\uff09\uff1a\u53ef\u4ee5\u6682\u505c\u67d0\u4e2a\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5c06\u5904\u7406\u53ca\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b * \u975e\u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u62a2\u8d70\uff09\uff1a\u4e00\u65e6\u5904\u7406\u53ca\u5206\u914d\u7ed9\u4e86\u67d0\u4e2a\u8fdb\u7a0b\uff0c\u4ed6\u5c31\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u7ed3\u675f \u5177\u4f53\u8c03\u5ea6\u7b97\u6cd5\uff1a * 1.\u5148\u6765\u5148\u670d\u52a1\uff08FCFS\uff09\uff1a\u6309\u7167\u5230\u8fbe\u987a\u5e8f\uff0c\u975e\u62a2\u5360\u5f0f,\u4e0d\u4f1a\u9965\u997f * 2.\u77ed\u4f5c\u4e1a/\u8fdb\u7a0b\u4f18\u5148\uff08SJF\uff09:\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f * 3.\u9ad8\u54cd\u5e94\u6bd4\u4f18\u5148\uff08HRRN\uff09:\u7efc\u5408\u8003\u8651\u7b49\u5f85\u65f6\u95f4\u548c\u8981\u6c42\u670d\u52a1\u4e8b\u4ef6\u8ba1\u7b97\u4e00\u4e2a\u4f18\u5148\u6743\uff0c\u975e\u62a2\u5360\uff0c\u4e0d\u4f1a\u9965\u997f * 4.\u65f6\u95f4\u7247\u8f6e\u8f6c\uff08RR\uff09:\u8f6e\u6d41\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u670d\u52a1\uff0c\u62a2\u5360\u5f0f\uff0c\u4e0d\u4f1a\u9965\u997f * 5.\u4f18\u5148\u7ea7\uff1a\u6839\u636e\u4f18\u5148\u7ea7\uff0c\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f * 6.\u591a\u7ea7\u53cd\u9988\u961f\u5217\uff1a * \u8bbe\u7f6e\u591a\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u7684\u8fdb\u7a0b\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u6392\u961f\uff0c\u7136\u540e\u6309\u7167\u65f6\u95f4\u7247\u8f6e\u8f6c\u5206\u914d\u65f6\u95f4\u7247 * \u82e5\u65f6\u95f4\u7247\u7528\u5b8c\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u7ea7\u961f\u5c3e\uff0c\u53ea\u6709\u5f53\u524d\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u624d\u4f1a\u4e3a\u4e0b\u4e00\u7ea7\u961f\u5217\u5206\u914d\u65f6\u95f4\u7247\u3002 * \u62a2\u5360\u5f0f\uff0c\u53ef\u80fd\u4f1a\u9965\u997f \u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\uff1a * \u5148\u6765\u5148\u670d\u52a1\u8c03\u5ea6\u7b97\u6cd5 * \u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5 * \u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5 \u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff1a * \u4ee5\u4e0a6\u79cd\u90fd\u53ef\u4ee5\u662f\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5","title":"\u8c03\u5ea6\u7b97\u6cd5"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_9","text":"\u539f\u56e0: * \u7ade\u4e89\u8d44\u6e90 * \u7a0b\u5e8f\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5f53 \u5fc5\u8981\u6761\u4ef6: * \u4e92\u65a5\u6761\u4ef6 * \u8bf7\u6c42\u548c\u4fdd\u6301\u6761\u4ef6 * \u4e0d\u5265\u593a\u6761\u4ef6 * \u73af\u8def\u7b49\u5f85\u6761\u4ef6 \u5904\u7406\u6b7b\u9501\u57fa\u672c\u65b9\u6cd5: \u9884\u9632\u6b7b\u9501(\u6452\u5f03\u96641\u4ee5\u5916\u7684\u6761\u4ef6) \u907f\u514d\u6b7b\u9501(\u94f6\u884c\u5bb6\u7b97\u6cd5) \u68c0\u6d4b\u6b7b\u9501(\u8d44\u6e90\u5206\u914d\u56fe) \u89e3\u9664\u6b7b\u9501\uff1a \u5265\u593a\u8d44\u6e90 or \u64a4\u9500\u8fdb\u7a0b","title":"\u6b7b\u9501"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_10","text":"\u6700\u4f73\u7f6e\u6362\u7b97\u6cd5OPT:\u4e0d\u53ef\u80fd\u5b9e\u73b0 \u5148\u8fdb\u5148\u51faFIFO \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7b97\u6cd5LRU:\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u91cc\u6700\u4e45\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\u9875\u9762\u4e88\u4ee5\u7f6e\u6362. clock\u7b97\u6cd5","title":"\u9875\u9762\u7f6e\u6362\u7b97\u6cd5"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_11","text":"\u8fb9\u7f18\u89e6\u53d1\u662f\u6307\u6bcf\u5f53\u72b6\u6001\u53d8\u5316\u65f6\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\uff0c\u6761\u4ef6\u89e6\u53d1\u662f\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6","title":"\u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#pythonpythongenerator","text":"yeild async await Generator \u662f\u4e00\u4e2a\u5f02\u6b65\u5b9e\u73b0\u7684\u751f\u6210\u5668 \uff0c\u662f\u534f\u7a0b \u3002 \u534f\u7a0b\u662f\u7528\u6237\u6001\u7684\u7ebf\u7a0b\u3002","title":"Python\u4e2d\u5f02\u6b65\u7f16\u7a0b\u5173\u952e\u5b57\u90fd\u6709\u4ec0\u4e48\uff1f\u5728Python\u4e2d\u5f02\u6b65\u7f16\u7a0b\u4e0eGenerator\uff0c\u534f\u7a0b\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#python_7","text":"\u88c5\u9970\u5668\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u95ed\u5305\u51fd\u6570\uff0c\u800c\u95ed\u5305\u51fd\u6570\u7684\u672c\u8d28\u662f\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u5916\u6ea2\u3002 \uff08\u5916\u5c42\u51fd\u6570\u4e2d\u5305\u88f9\u7684\u5185\u90e8\u51fd\u6570\u53ef\u4f7f\u7528\u5916\u5c42\u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u63a5\u53d7\u5176\u503c\uff09","title":"Python\u4e2d\u88c5\u9970\u5668\u7684\u672c\u8d28\u76f8\u5f53\u4e8e\u4ec0\u4e48\uff1f"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#xxlinux","text":"sudo lsof -i:\u7aef\u53e3\u53f7\u3000\u3000\u3000\u3000\u3000\u3000//\u67e5\u627e\u5bf9\u5e94\u7684\u8fdb\u7a0b\u53f7 sudo kill -9 \u8fdb\u7a0b\u53f7\u3000\u3000\u3000\u3000\u3000\u3000//\u6740\u6b7b\u5bf9\u5e94\u7684\u8fdb\u7a0b","title":"\u600e\u4e48\u83b7\u53d6xx\u7aef\u53e3\u5bf9\u5e94\u7684\u8fdb\u7a0b\u5e76\u6740\u6389\u5b83\u7684linux\u547d\u4ee4"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#linux-10-15k","text":"find -size +10k -15k","title":"\u7b5b\u9009Linux 10-15k \u5927\u5c0f\u7684\u6587\u4ef6"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_12","text":"grep -rn \"phpernote\" * -C 5 -r \u662f\u9012\u5f52\u67e5\u627e -n \u662f\u663e\u793a\u884c\u53f7 -C number \u5339\u914d\u7684\u4e0a\u4e0b\u6587\u5206\u522b\u663e\u793a[number]\u884c","title":"\u600e\u4e48\u67e5\u627e\u6587\u4ef6\u4e2d\u5305\u542b\u67d0\u6587\u5b57\u7684\u547d\u4ee4"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#docker","text":"Linux \u4e0a\u7684\u547d\u540d\u7a7a\u95f4\uff08Namespaces\uff09\u3001 \u63a7\u5236\u7ec4\uff08Control groups\uff09\u3001 Union \u6587\u4ef6\u7cfb\u7edf\uff08Union file systems\uff09 \u548c\u5bb9\u5668\u683c\u5f0f\uff08Container format\uff09\u3002","title":"docker\u7684\u5e95\u5c42\u5b9e\u73b0"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_13","text":"\u5806\u6808FILO \u961f\u5217FIFO","title":"\u5806\u6808\u4e0e\u961f\u5217\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_14","text":"\u53ef\u4ee5\u4f7f\u7528redis\u7684\u5b9a\u65f6\u5b58\u50a8key-value\u65b9\u5f0f EXPIRE key timeout\uff0c \u83b7\u53d6key\u65f6\u6ca1\u6709\u8fd9\u4e2akey\uff0c\u5219\u8ba4\u4e3a\u8ba2\u5355\u5931\u6548\uff0c\u8ba9\u5f53\u524d\u7a0b\u5e8f\u62ff\u53d6\u8ba2\u5355\u4fe1\u606f\uff0c\u8fd4\u56de\u7528\u6237\u63d0\u793a\u8ba2\u5355\u5931\u8d25\u3002","title":"\u9488\u5bf9\u7528\u6237\u4e0b\u8ba2\u5355\uff0c\u8ba2\u5355\u5b9a\u65f6\u5931\u6548\u7684\u529f\u80fd\uff0c\u5728\u5fae\u670d\u52a1\u7684\u8bbe\u8ba1\u601d\u8def\u4e0b\uff0c\u5e94\u8be5\u5982\u4f55\u6765\u8bbe\u8ba1\u5b9e\u73b0\uff1f"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_15","text":"\u8fdb\u7a0b\uff1a\u6700\u5c0f\u5206\u914d\u5355\u5143\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u8d44\u6e90\u533a\u57df\u3002\u8fdb\u7a0b\u7684\u73af\u5883\u5305\u62ec\u73af\u5883\u53d8\u91cf\uff0c\u8fdb\u7a0b\u6240\u638c\u63a7\u7684\u8d44\u6e90\uff0c\u6709\u4e2d\u592e\u5904\u7406\u5668\uff0c\u6709\u5185\u5b58\uff0c\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u6620\u5c04\u7684\u7f51\u7edc\u7aef\u53e3\u7b49\u3002 \u7ebf\u7a0b\uff1acpu\u6700\u5c0f\u6267\u884c\u5355\u4f4d\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5730\u5740\u7a7a\u95f4\u548c\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u5171\u4eab\u5168\u5c40\u53d8\u91cf\u3002 \u534f\u7a0b\uff1a\u7528\u6237\u6001\u6267\u884c\uff0c\u5b8c\u5168\u662f\u7531\u7528\u6237\u7a0b\u5e8f\u6240\u63a7\u5236\u3002\u201c\u534f\u7a0b\u5c31\u662f\u4f60\u53ef\u4ee5\u6682\u505c\u6267\u884c\u7684\u51fd\u6570\u201d\u3002","title":"\u7ebf\u7a0b \u8fdb\u7a0b\u548c\u534f\u7a0b\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_16","text":"","title":"\u6570\u636e\u5e93"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_17","text":"\u539f\u5b50\u6027\uff08Atomicity\uff09\uff1a\u8981\u4e48\u5168\u90e8\u88ab\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\u3002 \u4e00\u81f4\u6027\uff08Consistency\uff09\uff1a\u4e8b\u52a1\u5e94\u786e\u4fdd\u6570\u636e\u5e93\u7684\u72b6\u6001\u4ece\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u8f6c\u53d8\u4e3a\u53e6\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u3002 \u9694\u79bb\u6027\uff08Isolation\uff09\uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u5e94\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1\u7684\u6267\u884c\u3002 \u6301\u4e45\u6027\uff08Durability\uff09\uff1a\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u4ed6\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u5e94\u8be5\u6c38\u4e45\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u3002","title":"\u4e8b\u7269\u56db\u7279\u6027"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#mysql","text":"\u805a\u96c6\u7d22\u5f15,\u975e\u805a\u96c6\u7d22\u5f15,B-Tree,B+Tree","title":"mysql \u6570\u636e\u5e93\u7d22\u5f15"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#redis","text":"Redis\u662f\u4e00\u4e2a\u5b8c\u5168\u5f00\u6e90\u514d\u8d39\u7684key-value\u5185\u5b58\u6570\u636e\u5e93\uff0c\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5176\u6709\u7740\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784 strings\u3001map\u3001 list\u3001sets\u3001 sorted sets \u901f\u5ea6\u5feb\uff1a\u4f7f\u7528\u6807\u51c6C\u5199\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\uff0c\u8bfb\u5199\u901f\u5ea6\u5206\u522b\u8fbe\u523010\u4e07/20\u4e07\uff0c \u6301\u4e45\u5316\uff1a\u5bf9\u6570\u636e\u7684\u66f4\u65b0\u91c7\u7528Copy-on-write\u6280\u672f\uff0c\u53ef\u4ee5\u5f02\u6b65\u5730\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u7b56\u7565\uff0c\u4e00\u662f\u6839\u636e\u65f6\u95f4\uff0c\u66f4\u65b0\u6b21\u6570\u7684\u5feb\u7167\uff08save 300 10 \uff09\u4e8c\u662f\u57fa\u4e8e\u8bed\u53e5\u8ffd\u52a0\u65b9\u5f0f(Append-only file\uff0caof) \u81ea\u52a8\u64cd\u4f5c\uff1a\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u64cd\u4f5c\u90fd\u662f\u81ea\u52a8\u7684\uff0c\u5f88\u5b89\u5168 \u5feb\u901f\u7684\u4e3b\u2013\u4ece\u590d\u5236\uff0c\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\uff0cSlave\u572821\u79d2\u5373\u5b8c\u6210\u4e86\u5bf9Amazon\u7f51\u7ad910G key set\u7684\u590d\u5236\u3002 Sharding\u6280\u672f\uff1a \u5f88\u5bb9\u6613\u5c06\u6570\u636e\u5206\u5e03\u5230\u591a\u4e2aRedis\u5b9e\u4f8b\u4e2d \u7f3a\u70b9: * \u5185\u5b58\u8d35\uff0c\u53ea\u80fd\u7528\u4e8e\u5c0f\u6570\u636e\u9ad8\u6027\u80fd\u3002 * \u96be\u652f\u6301\u5728\u7ebf\u6269\u5bb9","title":"Redis\u539f\u7406"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#multi-version-concurrent-control","text":"Read Uncommitted\uff1a\u6700\u4f4e\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u4ec0\u4e48\u90fd\u4e0d\u9700\u8981\u505a\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u7ed3\u679c\u3002\u6240\u6709\u7684\u5e76\u53d1\u4e8b\u52a1\u95ee\u9898\u90fd\u4f1a\u53d1\u751f\u3002 Read Committed\uff1a\u53ea\u6709\u5728\u4e8b\u52a1\u63d0\u4ea4\u540e\uff0c\u5176\u66f4\u65b0\u7ed3\u679c\u624d\u4f1a\u88ab\u5176\u4ed6\u4e8b\u52a1\u770b\u89c1\u3002\u53ef\u4ee5\u89e3\u51b3\u810f\u8bfb\u95ee\u9898\u3002 Repeated Read\uff1a\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u5bf9\u4e8e\u540c\u4e00\u4efd\u6570\u636e\u7684\u8bfb\u53d6\u7ed3\u679c\u603b\u662f\u76f8\u540c\u7684\uff0c\u65e0\u8bba\u662f\u5426\u6709\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4efd\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u4e8b\u52a1\u662f\u5426\u63d0\u4ea4\u3002\u53ef\u4ee5\u89e3\u51b3\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3002 Serialization\uff1a\u4e8b\u52a1\u4e32\u884c\u5316\u6267\u884c\uff0c\u9694\u79bb\u7ea7\u522b\u6700\u9ad8\uff0c\u727a\u7272\u4e86\u7cfb\u7edf\u7684\u5e76\u53d1\u6027\u3002\u53ef\u4ee5\u89e3\u51b3\u5e76\u53d1\u4e8b\u52a1\u7684\u6240\u6709\u95ee\u9898","title":"Multi-Version Concurrent Control"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#myisaminnodb","text":"MyISAM \u9002\u5408\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u91cf\u67e5\u8be2\u7684\u5e94\u7528\uff0c\u4f46\u5176\u5bf9\u4e8e\u6709\u5927\u91cf\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u5f88\u597d\u3002 \u751a\u81f3\u4f60\u53ea\u662f\u9700\u8981update\u4e00\u4e2a\u5b57\u6bb5\uff0c\u6574\u4e2a\u8868\u90fd\u4f1a\u88ab\u9501\u8d77\u6765\uff0c\u800c\u522b\u7684\u8fdb\u7a0b\uff0c\u5c31\u7b97\u662f\u8bfb\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u64cd\u4f5c\u76f4\u5230\u8bfb\u64cd\u4f5c\u5b8c\u6210\u3002 \u53e6\u5916\uff0cMyISAM \u5bf9\u4e8e SELECT COUNT(*) \u8fd9\u7c7b\u7684\u8ba1\u7b97\u662f\u8d85\u5feb\u65e0\u6bd4\u7684\u3002 InnoDB \u7684\u8d8b\u52bf\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u7684\u5e94\u7528\uff0c\u5b83\u4f1a\u6bd4 MyISAM \u8fd8\u6162\u3002 \u4ed6\u662f\u5b83\u652f\u6301\u201c\u884c\u9501\u201d \uff0c\u4e8e\u662f\u5728\u5199\u64cd\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u4f18\u79c0\u3002\u5e76\u4e14\uff0c\u4ed6\u8fd8\u652f\u6301\u66f4\u591a\u7684\u9ad8\u7ea7\u5e94\u7528\uff0c\u6bd4\u5982\uff1a\u4e8b\u52a1\u3002","title":"MyISAM\u548cInnoDB"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#tcp","text":"\u6ce8\u610f: \u4e2d\u65ad\u8fde\u63a5\u7aef\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef. \u4e0b\u9762\u4ec5\u4ee5\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u4e3e\u4f8b, \u53cd\u4e4b\u4ea6\u7136.","title":"TCP\u534f\u8bae\u4e2d\u7684\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#urlliburllib2","text":"urllib\u63d0\u4f9burlencode\u65b9\u6cd5\u7528\u6765GET\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u4ea7\u751f\uff0c\u800curllib2\u6ca1\u6709\u3002\u8fd9\u662f\u4e3a\u4f55urllib\u5e38\u548curllib2\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\u3002 urllib2\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u7c7b\u7684\u5b9e\u4f8b\u6765\u8bbe\u7f6eURL\u8bf7\u6c42\u7684headers\uff0curllib\u4ec5\u53ef\u4ee5\u63a5\u53d7URL\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u53ef\u4ee5\u4f2a\u88c5\u4f60\u7684User Agent\u5b57\u7b26\u4e32\u7b49\u3002","title":"urllib\u548curllib2\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#postget","text":"HTTP\u65b9\u6cd5\u7684\u5e42\u7b49\u6027\u662f\u6307\u4e00\u6b21\u548c\u591a\u6b21\u8bf7\u6c42\u67d0\u4e00\u4e2a\u8d44\u6e90\u5e94\u8be5\u5177\u6709\u540c\u6837\u7684\u526f\u4f5c\u7528\u3002(\u6ce8\u610f\u662f\u526f\u4f5c\u7528) GET\u7684URL\u4f1a\u88ab\u653e\u5728\u6d4f\u89c8\u5668\u5386\u53f2\u548cWEB \u670d\u52a1\u5668\u65e5\u5fd7\u91cc\u9762\u3002\uff0cPOST \u53d1\u5b8c\u57fa\u672c\u5c31\u6ca1\u6709\u4e86\u3002post\u53ef\u4ee5\u53d1\u9001\u7684\u6570\u636e\u591f\u5927\uff0cget\u53d7\u67d0\u4e9b\u7248\u672cie\u9650\u5236\u53d1\u4e0d\u4e86\u591a\u5c11\u4e1c\u897f\u3002get\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5e42\u7b49\u7684\uff0c\u4e5f\u5c31\u662f\u8bf7\u6c421\u6b21\u548cn\u6b21\u662f\u4e00\u6837\u7684\u3002","title":"Post\u548cGet"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#apachenginx","text":"nginx \u76f8\u5bf9 apache \u7684\u4f18\u70b9\uff1a * \u8f7b\u91cf\u7ea7\uff0c\u540c\u6837\u8d77web \u670d\u52a1\uff0c\u6bd4apache \u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\u53ca\u8d44\u6e90 * \u6297\u5e76\u53d1\uff0cnginx \u5904\u7406\u8bf7\u6c42\u662f\u5f02\u6b65\u975e\u963b\u585e\u7684\uff0c\u652f\u6301\u66f4\u591a\u7684\u5e76\u53d1\u8fde\u63a5\uff0c\u800capache \u5219\u662f\u963b\u585e\u578b\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u4e0bnginx \u80fd\u4fdd\u6301\u4f4e\u8d44\u6e90\u4f4e\u6d88\u8017\u9ad8\u6027\u80fd * \u914d\u7f6e\u7b80\u6d01 * \u9ad8\u5ea6\u6a21\u5757\u5316\u7684\u8bbe\u8ba1\uff0c\u7f16\u5199\u6a21\u5757\u76f8\u5bf9\u7b80\u5355 * \u793e\u533a\u6d3b\u8dc3 apache \u76f8\u5bf9nginx \u7684\u4f18\u70b9\uff1a * rewrite \uff0c\u6bd4nginx \u7684rewrite \u5f3a\u5927 * \u6a21\u5757\u8d85\u591a\uff0c\u57fa\u672c\u60f3\u5230\u7684\u90fd\u53ef\u4ee5\u627e\u5230 * \u5c11bug \uff0cnginx \u7684bug \u76f8\u5bf9\u8f83\u591a * \u8d85\u7a33\u5b9a APISIX: \u548c\u4f20\u7edf API \u7f51\u5173\u76f8\u6bd4\uff0c \u5177\u5907\u52a8\u6001\u8def\u7531\u548c\u63d2\u4ef6\u70ed\u52a0\u8f7d\uff0c\u7279\u522b\u9002\u5408\u5fae\u670d\u52a1\u4f53\u7cfb\u4e0b\u7684 API \u7ba1\u7406\u3002","title":"apache\u548cnginx\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_18","text":"\u660e\u6587\u4fdd\u5b58 \u660e\u6587hash\u540e\u4fdd\u5b58,\u5982md5 MD5+Salt\u65b9\u5f0f,\u8fd9\u4e2asalt\u53ef\u4ee5\u968f\u673a \u77e5\u4e4e\u4f7f\u7528\u4e86Bcrypy(\u597d\u50cf)\u52a0\u5bc6","title":"\u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#xsrfxss","text":"CSRF\u91cd\u70b9\u5728\u8bf7\u6c42,XSS\u91cd\u70b9\u5728\u811a\u672c","title":"XSRF\u548cXSS"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#cgiwsgi","text":"CGI\u662f\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u8fde\u63a5web\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u7528\u6237\u901a\u8fc7CGI\u6765\u83b7\u53d6\u52a8\u6001\u6570\u636e\u6216\u6587\u4ef6\u7b49\u3002 CGI\u7a0b\u5e8f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u7528\u51e0\u4e4e\u6240\u6709\u8bed\u8a00\u6765\u5199\uff0c\u5305\u62ecperl\uff0cc\uff0clua\uff0cpython\u7b49\u7b49\u3002 WSGI, Web Server Gateway Interface\uff0c\u662fPython\u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u548cWeb\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u79cd\u63a5\u53e3\uff0cWSGI\u7684\u5176\u4e2d\u4e00\u4e2a\u76ee\u7684\u5c31\u662f\u8ba9\u7528\u6237\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u8bed\u8a00(Python)\u7f16\u5199\u524d\u540e\u7aef\u3002","title":"CGI\u548cWSGI"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#socket","text":"Socket=Ip address+ TCP/UDP + port","title":"Socket"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_19","text":"Cache-control\uff1a\u503c\u53ef\u4ee5\u662fpublic\u3001private\u3001no-cache\u3001no- store\u3001no-transform\u3001must-revalidate\u3001proxy-revalidate\u3001max-age no-cache\u4ee3\u8868\u4e0d\u7f13\u5b58\u8fc7\u671f\u7684\u8d44\u6e90\uff0c\u7f13\u5b58\u4f1a\u5411\u670d\u52a1\u5668\u8fdb\u884c\u6709\u6548\u5904\u7406\u786e\u8ba4\u4e4b\u540e\u5904\u7406\u8d44\u6e90 \u800cno-store\u624d\u662f\u771f\u6b63\u7684\u4e0d\u8fdb\u884c\u7f13\u5b58\u3002 304 Not Modified","title":"\u6d4f\u89c8\u5668\u7f13\u5b58"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#ajax","text":"AJAX,Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09, \u662f\u4e0e\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002","title":"Ajax"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#unixipc","text":"\u7ba1\u9053 Pipe from multiprocessing import Process, Pipe Pipe().send(\"Hello 11\") \u547d\u540d\u7ba1\u9053 named pipe import os fd = os.open('pipetest',os.O_NONBLOCK | os.O_CREAT | os.O_RDWR) os.write(fd,\"hello\") \u4fe1\u53f7\uff08Signal\uff09 import signal signal.signal(signal.SIGTERM,lambda a,b;print(a,b)) \u6d88\u606f\uff08Message\uff09\u961f\u5217 import Queue Queue.Queue().put \u5171\u4eab\u5185\u5b58 / \u5185\u5b58\u6620\u5c04\uff08mapped memory\uff09 import mmap with contextlib.closing(mmap.mmap(-1, 100, tagname='SASU', access=mmap.ACCESS_WRITE)) as m: m.write() m.flush() \u4fe1\u53f7\u91cf\uff08semaphore\uff09 \u539f\u7406\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u91cf\uff0c\u5bf9\u591a\u4e2a\u8fdb\u7a0b\u53ef\u89c1\uff0c\u4e14\u591a\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u64cd\u4f5c\u3002\u8fdb\u7a0b\u901a\u8fc7\u5bf9\u6570\u91cf\u591a\u5c11\u7684\u5224\u65ad\u6267\u884c\u5404\u81ea\u7684\u884c\u4e3a\u3002(\u751f\u4ea7\u8005/\u6d88\u8d39\u8005) multiprocessing --> Semaphore() sem = Semaphore(num) \u529f\u80fd\uff1a\u521b\u5efa\u4fe1\u53f7\u91cf \u53c2\u6570\uff1a\u4fe1\u53f7\u91cf\u521d\u59cb\u503c \u8fd4\u56de\uff1a\u4fe1\u53f7\u91cf\u5bf9\u8c61 sem.get_value() \u83b7\u53d6\u4fe1\u53f7\u91cf\u503c sem.acquire() \u5c06\u4fe1\u53f7\u91cf\u51cf1 \u5f53\u4fe1\u53f7\u91cf\u4e3a0\u65f6\u4f1a\u963b\u585e sem.release() \u5c06\u4fe1\u53f7\u91cf\u52a01 \u5957\u63a5\u53e3\uff08Socket\uff09 import socket","title":"unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC)"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#httptcp","text":"HTTP\u5728\u5e94\u7528\u5c42\uff0cTCP \u548c UDP \u90fd\u4f4d\u4e8e\u8ba1\u7b97\u673a\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u8fd0\u8f93\u5c42\u3002 HTTP \u4e2d\u5305\u62ec\u8bb8\u591a\u65b9\u6cd5\uff0cGet \uff0cPost \u7b49\u3002","title":"http\u548ctcp\u7684\u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_20","text":"\u770b\u5faa\u73af\u5d4c\u5957 \u589e\u957f\u65b9\u5f0f \u5faa\u73af\u7ed3\u675f\u6761\u4ef6 # log2 N for(i=0;i<n:i*2) a++","title":"\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_21","text":"\u589e\u52a0worker \u9884\u5904\u7406\u6570\u636e \u5f02\u6b65\u5904\u7406io\u5bc6\u96c6\u578b\u95ee\u9898 \u591a\u7ebf\u7a0b\u5904\u7406cpu\u5bc6\u96c6\u578b\u95ee\u9898 \u961f\u5217 \u71c3\u5c3d\u56fe\u5206\u6790","title":"\u89e3\u51b3\u670d\u52a1\u6027\u80fd\u74f6\u9888"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#mongodb","text":"MySQL \u4e4b\u6240\u4ee5\u9009\u62e9 B+\uff0c\u90a3\u662f\u56e0\u4e3a\u51fa\u4e8e\u8303\u56f4\u9009\u62e9\u8003\u8651\u7684\u3002\u90a3\u4e48 MongoDB \u9009\u62e9 B \u6811\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5355\u4e00\u6570\u636e\u67e5\u8be2\u591a\uff0c\u8303\u56f4\u67e5\u8be2\u5c11\u3002","title":"mongodb\u7d22\u5f15"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#fastapi-flask","text":"","title":"fastapi \u4e0e flask \u7684\u4e0d\u540c"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#todo","text":"","title":"todo"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#gunicorn","text":"WSGI \u540c\u6b65\u5904\u7406\u6a21\u5f0f\u7684, WSGI \u91c7\u7528\u591a\u7ebf\u7a0b\u65b9\u5f0f\u6765\u652f\u6301\u5e76\u53d1 gunicorn\u662fprefork\u6a21\u5f0f\uff0c\u4ecenginx\u6bcf\u53d1\u8fc7\u6765\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5b83\u5c31fork\u4e00\u4e2a\u8fdb\u7a0b\u53bb\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u5e76buffer\u76f8\u5173\u7684\u6570\u636e\u3002wsgi\u670d\u52a1\u5668\u90fd\u662f\u4e13\u95e8\u4e3a\u751f\u4ea7\u73af\u5883","title":"\u4e3a\u4ec0\u4e48\u8981\u7528 gunicorn"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#flask","text":"gevent","title":"flask \u7528\u5f02\u6b65\u7684\u65b9\u6cd5"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#mongo-timeoutdata","text":"\u5173\u952e\u8bcd: expireAfterSeconds\u3001TTL MongoDB\u7684\u8fc7\u671f\u8bbe\u7f6e\u4f9d\u8d56\u7d22\u5f15(TTL-index)\uff0c \u8bbe\u7f6e\u8fc7\u671f\u5b57\u6bb5\u4f7f\u7528\u7684\u7d22\u5f15\u540e\uff0c \u63d2\u5165\u6570\u636e\u65f6\u5728\u8be5\u5b57\u6bb5\u6307\u5b9a\u65e5\u671f\u65f6\u95f4\uff0c \u7ecf\u8fc7\u5728\u521b\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a\u7684\u79d2\u6570\u540e\uff0c\u8be5\u8bb0\u5f55\u4f1a\u88abMongoDB\u8ba4\u4e3a\u5df2\u7ecf\u8fc7\u671f\uff0c\u7136\u540e\u5220\u9664\u3002","title":"mongo \u8bbe\u7f6etimeout\u7684data"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#grpc-http","text":"grpc \u5e8f\u5217\u5316\u901f\u5ea6\u5feb\uff0c\u538b\u7f29\u6548\u7387\u9ad8\u3002\u4f20\u8f93\u534f\u8bae \u91c7\u7528http2\uff0c\u6027\u80fd\u6bd4http1.1\u597d\u4e86\u5f88\u591a\u3002 http\u6bcf\u6b21\u8bf7\u6c42\u53d1\u9001\u4e00\u4e2arequest\uff0c\u670d\u52a1\u5668\u54cd\u5e94\u4e4b\u540e\u5c31\u65ad\u6389\u3002","title":"grpc \u4e0e http\u7684\u4e0d\u540c"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#bcolz-hdf5","text":"Bcolz\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u4ef6\u5939 hdf5\u662f\u4e00\u4e2a.h5\u6587\u4ef6 Bcolz\u5b58\u50a8(\u538b\u7f29)\u6570\u636e\u7684\u901f\u5ea6\u662fHDF5\u768410\u500d\u4ee5\u4e0a\uff0c\u5e76\u53d1\u5b8c\u6210\u3002","title":"bcolz hdf5"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#rabbitmq-kafuka","text":"\u540d\u79f0 \u5e94\u7528\u573a\u666f\u65b9\u9762 \u67b6\u6784\u6a21\u578b\u65b9\u9762 \u541e\u5410\u91cf\u65b9\u9762 \u96c6\u7fa4\u8d1f\u8f7d\u5747\u8861\u65b9\u9762 RabbitMQ \u7528\u4e8e\u5b9e\u65f6\u7684\uff0c\u5bf9\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u6d88\u606f\u4f20\u9012\u4e0a\u3002 \u4ee5broker\u4e3a\u4e2d\u5fc3\uff0c\u6709\u6d88\u606f\u7684\u786e\u8ba4\u673a\u5236\u3002 \u652f\u6301\u6d88\u606f\u7684\u53ef\u9760\u7684\u4f20\u9012\uff0c\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff0c\u57fa\u4e8e\u5b58\u50a8\u7684\u53ef\u9760\u6027\u7684\u8981\u6c42\u5b58\u50a8\u53ef\u4ee5\u91c7\u7528\u5185\u5b58\u6216\u786c\u76d8\uff0c\u541e\u5410\u91cf\u5c0f\u3002 \u672c\u8eab\u4e0d\u652f\u6301\u8d1f\u8f7d\u5747\u8861\uff0c\u9700\u8981loadbalancer\u7684\u652f\u6301 kafka \u7528\u4e8e\u5904\u4e8e\u6d3b\u8dc3\u7684\u6d41\u5f0f\u6570\u636e\uff0c\u5927\u6570\u636e\u91cf\u7684\u6570\u636e\u5904\u7406\u4e0a\u3002 \u4ee5consumer\u4e3a\u4e2d\u5fc3\uff0c\u65e0\u6d88\u606f\u7684\u786e\u8ba4\u673a\u5236\u3002 \u5185\u90e8\u91c7\u7528\u6d88\u606f\u7684\u6279\u91cf\u5904\u7406\uff0c\u6570\u636e\u7684\u5b58\u50a8\u548c\u83b7\u53d6\u662f\u672c\u5730\u78c1\u76d8\u987a\u5e8f\u6279\u91cf\u64cd\u4f5c\uff0c\u6d88\u606f\u5904\u7406\u7684\u6548\u7387\u9ad8\uff0c\u541e\u5410\u91cf\u9ad8\u3002 \u91c7\u7528zookeeper\u5bf9\u96c6\u7fa4\u4e2d\u7684broker\uff0cconsumer\u8fdb\u884c\u7ba1\u7406\uff0c\u53ef\u4ee5\u6ce8\u518ctopic\u5230zookeeper\u4e0a\uff0c\u901a\u8fc7zookeeper\u7684\u534f\u8c03\u673a\u5236\uff0cproducer\u4fdd\u5b58\u5bf9\u5e94\u7684topic\u7684broker\u4fe1\u606f\uff0c\u53ef\u4ee5\u968f\u673a\u6216\u8005\u8f6e\u8be2\u53d1\u9001\u5230broker\u4e0a\uff0cproducer\u53ef\u4ee5\u57fa\u4e8e\u8bed\u4e49\u6307\u5b9a\u5206\u7247\uff0c\u6d88\u606f\u53d1\u9001\u5230broker\u7684\u67d0\u4e2a\u5206\u7247\u4e0a\u3002","title":"rabbitmq \u548c kafuka \u533a\u522b"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#qps-tps","text":"\u6211\u62ff\u666e\u7f57\u7c73\u65af\u7684\u65e5\u5fd7\u770b\u7684 GET\u8bf7\u6c42\u7684 \u603b\u8bf7\u6c42\u6570\u91cf / \u603b\u7b49\u5f85\u65f6\u957f = QPS 668971.0 / 7273.539398193359 = 91.97324 \u5927\u698292\uff0c\u4e5f\u4e0d\u77e5\u9053\u65f6\u591a\u65f6\u5c11 \u56e0\u4e3a\u4e0d\u662f\u7eafGET\u8bf7\u6c42\uff0c\u4e5f\u7b97\u6570\u636e\u5e93\u5199\u5165\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u4e5f\u7b97TPS\u3002","title":"QPS TPS"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#rabbitmq","text":"Broker\uff1a\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6d88\u606f\u961f\u5217\u670d\u52a1\u5668\u5b9e\u4f53\u3002 Exchange\uff1a\u6d88\u606f\u4ea4\u6362\u673a\uff0c\u5b83\u6307\u5b9a\u6d88\u606f\u6309\u4ec0\u4e48\u89c4\u5219\uff0c\u8def\u7531\u5230\u54ea\u4e2a\u961f\u5217\u3002 Queue\uff1a\u6d88\u606f\u961f\u5217\u8f7d\u4f53\uff0c\u6bcf\u4e2a\u6d88\u606f\u90fd\u4f1a\u88ab\u6295\u5165\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u961f\u5217\u3002 Binding\uff1a\u7ed1\u5b9a\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u628aexchange\u548cqueue\u6309\u7167\u8def\u7531\u89c4\u5219\u7ed1\u5b9a\u8d77\u6765\u3002 Routing Key\uff1a\u8def\u7531\u5173\u952e\u5b57\uff0cexchange\u6839\u636e\u8fd9\u4e2a\u5173\u952e\u5b57\u8fdb\u884c\u6d88\u606f\u6295\u9012\u3002 vhost\uff1a\u865a\u62df\u4e3b\u673a\uff0c\u4e00\u4e2abroker\u91cc\u53ef\u4ee5\u5f00\u8bbe\u591a\u4e2avhost\uff0c\u7528\u4f5c\u4e0d\u540c\u7528\u6237\u7684\u6743\u9650\u5206\u79bb\u3002 producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u5c31\u662f\u6295\u9012\u6d88\u606f\u7684\u7a0b\u5e8f\u3002 consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u5c31\u662f\u63a5\u53d7\u6d88\u606f\u7684\u7a0b\u5e8f\u3002 channel\uff1a\u6d88\u606f\u901a\u9053\uff0c\u5728\u5ba2\u6237\u7aef\u7684\u6bcf\u4e2a\u8fde\u63a5\u91cc\uff0c\u53ef\u5efa\u7acb\u591a\u4e2achannel\uff0c\u6bcf\u4e2achannel\u4ee3\u8868\u4e00\u4e2a\u4f1a\u8bdd\u4efb\u52a1\u3002","title":"RabbitMQ\u7684\u7ed3\u6784"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#wwwbaiducom","text":"\u7b80\u5355\u7248\u672c * DNS\u89e3\u6790\u57df\u540d\u5230ip\u5730\u5740 * \u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42 * \u670d\u52a1\u5668\u63a5\u53d7\u5230\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 * \u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94 * \u6d4f\u89c8\u5668\u9488\u5bf9\u54cd\u5e94\u8fdb\u884c\u89e3\u7801\uff0c\u83b7\u53d6\u5230html * \u6d4f\u89c8\u5668\u6e32\u67d3html\u3001\u6784\u5efadom\u8282\u70b9\u3001\u52a0\u8f7dcss\u3001\u8fd0\u884c\u811a\u672c \u8fd9\u9053\u9898\u62d3\u5c55\u6027\u6781\u9ad8\uff1a https://www.zhihu.com/question/437193010/answer/1653724247","title":"\u7535\u8111\u4e0a\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 www.baidu.com\uff0c\u56de\u8f66\uff0c\u5230\u767e\u5ea6\u9875\u9762\u51fa\u73b0\u3002\u4e2d\u95f4\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#todo_1","text":"\u56e0\u4e3a\u653e\u5728Todo list\u6709\u591a\u7aef\u540c\u6b65\u95ee\u9898\uff0c\u6570\u636e\u4f1a\u6d88\u5931\uff0c\u6240\u4ee5\u6362\u6210\u7b80\u4e66\u8bb0\u5f55\u3002 \u5f85\u6574\u7406\u8d44\u6599 https://github.com/resumejob/interview-questions https://github.com/hantmac/Python-Interview-Customs-Collection https://github.com/jackfrued/Python-Interview-Bible/blob/master/Python%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8-%E5%9F%BA%E7%A1%80%E7%AF%87-2020.md https://github.com/resumejob/interview-questions#%E8%85%BE%E8%AE%AF https://github.com/julycoding/The-Art-Of-Programming-By-July/blob/master/ebook/zh/03.01.md https://www.cnblogs.com/Leo_wl/p/12076011.html https://mp.weixin.qq.com/s/ENWm8W2hBvlw5pBDQTHpfA https://my.oschina.net/yzbty32/blog/549305 https://juejin.cn/post/6844903958624878606 \u590d\u4e60\u547d\u4ee4 https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/lsof.html netstat https://m.runoob.com/linux/linux-comm-awk.html shc last awk zabbix https://coding.imooc.com/class/chapter/318.html#Anchor","title":"Todo"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_22","text":"https://github.com/taizilongxu/interview_python https://zhuanlan.zhihu.com/p/20953544 https://www.jianshu.com/p/2a17957ce https://www.jianshu.com/p/J4U6rR https://www.runoob.com/python3/python3-namespace-scope.html https://zhuanlan.zhihu.com/p/73204847 https://xieguanglei.github.io/blog/post/red-black-tree.html https://www.jianshu.com/p/c25601f0cc43 https://blog.csdn.net/u013129109/article/details/79608384 https://www.cnblogs.com/nankezhishi/archive/2012/06/09/getandpost.html https://www.cnblogs.com/0201zcr/p/5296843.html https://segmentfault.com/a/1190000008227211 https://zhuanlan.zhihu.com/p/34248254","title":"\u5df2\u770b\u8fc7\u7684\u8d44\u6599"},{"location":"%E7%BC%96%E7%A8%8B/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/#_23","text":"https://github.com/EbookFoundation/free-programming-books/blob/master/books/free-programming-books-zh.md","title":"\u8d44\u6599\u5927\u5168"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/","text":"\u66f4\u4f18\u96c5\u7684\u751f\u6210requirements.txt \u00b6 \u6587\u7ae0\u53c2\u8003 pipreqs \u00b6 \u5b89\u88c5 pip install pipreqs \u4f7f\u7528 pipreqs -h pipreqs [options] <path> \u793a\u4f8b pipreqs . --encoding utf8 --pypi-server https://pypi.douban.com/simple/ \u63d0\u793a \u4e0d\u52a0 \u2013encoding utf8 \u4f1a\u62a5UnicodeDecodeError \u4e0d\u7ffb\u5899\u4f1a\u62a5 requests.exceptions.ConnectionError: \u4f5c\u8005\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u591a\u52a0\u4e86\u4e00\u4e2adjango_recaptcha \u641c\u7d22\u8c46\u74e3\u6e90 \u2013pypi-server https://pypi.douban.com/simple/ pipdeptree \u00b6 \u5b89\u88c5 pip install pipdeptree \u4f7f\u7528 pipdeptree \u63d0\u793a \u5e76\u4e0d\u80fd\u663e\u793a\u67d0\u4e2a\u9879\u76ee\u4e0b\u7684\u4f9d\u8d56 pip-compile \u00b6 \u5b89\u88c5 pip install pip-tools \u5378\u8f7d\u6240\u6709\u5305 pip-sync requirements.txt requirements.txt emmm \u628a\u6211\u5305\u90fd\u5378\u8f09\u4e86 \u73a9\u4e2a\u9b3c \u60f3\u73a9\u7684\u81ea\u5df1\u770b \u6587\u6863 \u63a8\u8350pipreqs \u00b6","title":"\u66f4\u4f18\u96c5\u7684\u751f\u6210requirements.txt"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/#requirementstxt","text":"\u6587\u7ae0\u53c2\u8003","title":"\u66f4\u4f18\u96c5\u7684\u751f\u6210requirements.txt"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/#pipreqs","text":"\u5b89\u88c5 pip install pipreqs \u4f7f\u7528 pipreqs -h pipreqs [options] <path> \u793a\u4f8b pipreqs . --encoding utf8 --pypi-server https://pypi.douban.com/simple/ \u63d0\u793a \u4e0d\u52a0 \u2013encoding utf8 \u4f1a\u62a5UnicodeDecodeError \u4e0d\u7ffb\u5899\u4f1a\u62a5 requests.exceptions.ConnectionError: \u4f5c\u8005\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u591a\u52a0\u4e86\u4e00\u4e2adjango_recaptcha \u641c\u7d22\u8c46\u74e3\u6e90 \u2013pypi-server https://pypi.douban.com/simple/","title":"pipreqs"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/#pipdeptree","text":"\u5b89\u88c5 pip install pipdeptree \u4f7f\u7528 pipdeptree \u63d0\u793a \u5e76\u4e0d\u80fd\u663e\u793a\u67d0\u4e2a\u9879\u76ee\u4e0b\u7684\u4f9d\u8d56","title":"pipdeptree"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/#pip-compile","text":"\u5b89\u88c5 pip install pip-tools \u5378\u8f7d\u6240\u6709\u5305 pip-sync requirements.txt requirements.txt emmm \u628a\u6211\u5305\u90fd\u5378\u8f09\u4e86 \u73a9\u4e2a\u9b3c \u60f3\u73a9\u7684\u81ea\u5df1\u770b \u6587\u6863","title":"pip-compile"},{"location":"%E7%BC%96%E7%A8%8B/%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E7%94%9F%E6%88%90requirements.txt/#pipreqs_1","text":"","title":"\u63a8\u8350pipreqs"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/","text":"\u6811\u8393\u6d3e \u81ea\u52a8\u6302\u8f7d \u00b6 \u53c2\u8003 Automount various USB stick file systems on Jessie Lite \u53c2\u8003 \u6811\u8393\u6d3e\u6302\u8f7d\u5b58\u50a8\u8bbe\u5907 \u5b89\u88c5usbmount \u00b6 \u67e5\u770bu\u76d8\u662f\u5426\u63d2\u5165 sudo fdisk -l \u5b89\u88c5usbmount sudo apt-get install usbmount sudo apt-get install ntfs-3g \u652f\u6301\u7279\u5b9a\u683c\u5f0f \u00b6 \u4fee\u6539 \u4e0d\u662f\u6dfb\u52a0 vim /etc/usbmount/usbmount.conf FILESYSTEMS=\"vfat ntfs fuseblk ext2 ext3 ext4 hfsplus\" FS_MOUNTOPTIONS=\"-fstype=ntfs-3g,nls=utf8,umask=007,gid=46 -fstype=fuseblk,nls=utf8,umask=007,gid=46 -fstype=vfat,gid=1000,uid=1000,umask=007\" FS_MOUNTOPATIONS=\"-fstype=ntfs,iocharset=utf8,gid=floppy,dmask=0007,fmask=0117\" \u652f\u6301\u4e2d\u6587 FS_MOUNTOPATIONS \u4e2d iocharset=utf8 \u5378\u8f7dusb \u00b6 cd /media tree sudo umount usb1","title":"\u6811\u8393\u6d3e \u81ea\u52a8\u6302\u8f7d"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/#_1","text":"\u53c2\u8003 Automount various USB stick file systems on Jessie Lite \u53c2\u8003 \u6811\u8393\u6d3e\u6302\u8f7d\u5b58\u50a8\u8bbe\u5907","title":"\u6811\u8393\u6d3e \u81ea\u52a8\u6302\u8f7d"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/#usbmount","text":"\u67e5\u770bu\u76d8\u662f\u5426\u63d2\u5165 sudo fdisk -l \u5b89\u88c5usbmount sudo apt-get install usbmount sudo apt-get install ntfs-3g","title":"\u5b89\u88c5usbmount"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/#_2","text":"\u4fee\u6539 \u4e0d\u662f\u6dfb\u52a0 vim /etc/usbmount/usbmount.conf FILESYSTEMS=\"vfat ntfs fuseblk ext2 ext3 ext4 hfsplus\" FS_MOUNTOPTIONS=\"-fstype=ntfs-3g,nls=utf8,umask=007,gid=46 -fstype=fuseblk,nls=utf8,umask=007,gid=46 -fstype=vfat,gid=1000,uid=1000,umask=007\" FS_MOUNTOPATIONS=\"-fstype=ntfs,iocharset=utf8,gid=floppy,dmask=0007,fmask=0117\" \u652f\u6301\u4e2d\u6587 FS_MOUNTOPATIONS \u4e2d iocharset=utf8","title":"\u652f\u6301\u7279\u5b9a\u683c\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%20%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD/#usb","text":"cd /media tree sudo umount usb1","title":"\u5378\u8f7dusb"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%2Bmotion%20%E6%90%AD%E5%BB%BA%E6%91%84%E5%83%8F%E5%A4%B4%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/","text":"\u6811\u8393\u6d3e+motion \u642d\u5efa\u6444\u50cf\u5934\u76d1\u63a7\u7cfb\u7edf \u00b6 \u6811\u8393\u6d3e+motion \u642d\u5efa\u6444\u50cf\u5934\u76d1\u63a7\u7cfb\u7edf","title":"\u6811\u8393\u6d3e+motion \u642d\u5efa\u6444\u50cf\u5934\u76d1\u63a7\u7cfb\u7edf"},{"location":"%E7%BC%96%E7%A8%8B/%E6%A0%91%E8%8E%93%E6%B4%BE%2Bmotion%20%E6%90%AD%E5%BB%BA%E6%91%84%E5%83%8F%E5%A4%B4%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/#motion","text":"\u6811\u8393\u6d3e+motion \u642d\u5efa\u6444\u50cf\u5934\u76d1\u63a7\u7cfb\u7edf","title":"\u6811\u8393\u6d3e+motion \u642d\u5efa\u6444\u50cf\u5934\u76d1\u63a7\u7cfb\u7edf"},{"location":"%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/","text":"\u7f16\u7a0b\u65b9\u5f0f \u00b6 \u7a77\u4e3e\u7f16\u7a0b ccv\u7f16\u7a0b \u767e\u5ea6\u7f16\u7a0b \u8c37\u6b4c\u7f16\u7a0b gayhub\u7f16\u7a0b guess\u7f16\u7a0b no think \u7fa4\u53cb\u7f16\u7a0b \u5c0f\u9ec4\u9e2d\u8c03\u8bd5\u6cd5\uff08Rubber Duck Debugging\uff09 \u8be2\u95ee\u5f0f\u64b8\u4ee3\u7801 \u53ea\u9700\u8981 \u629b\u51fa \u4e00\u4e2a\u9700\u6c42 \u4ee3\u7801\u5927\u795e\u6765\u89e3\u51b3","title":"\u7f16\u7a0b\u65b9\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F/#_1","text":"\u7a77\u4e3e\u7f16\u7a0b ccv\u7f16\u7a0b \u767e\u5ea6\u7f16\u7a0b \u8c37\u6b4c\u7f16\u7a0b gayhub\u7f16\u7a0b guess\u7f16\u7a0b no think \u7fa4\u53cb\u7f16\u7a0b \u5c0f\u9ec4\u9e2d\u8c03\u8bd5\u6cd5\uff08Rubber Duck Debugging\uff09 \u8be2\u95ee\u5f0f\u64b8\u4ee3\u7801 \u53ea\u9700\u8981 \u629b\u51fa \u4e00\u4e2a\u9700\u6c42 \u4ee3\u7801\u5927\u795e\u6765\u89e3\u51b3","title":"\u7f16\u7a0b\u65b9\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95/","text":"\u8c03\u5ea6\u7b97\u6cd5\u8bb0\u5f55 \u00b6 \u94fe\u63a5\uff1a https://www.nowcoder.com/questionTerminal/238e7607793449d19d0f07434b8d78ad \u6765\u6e90\uff1a\u725b\u5ba2\u7f51 \u9ad8\u7ea7\u8c03\u5ea6\uff08\u4f5c\u4e1a\u8c03\u5ea6/\u957f\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u4f4e\uff09\uff1a\u5c06\u5916\u5b58\u4f5c\u4e1a\u8c03\u5165\u5185\u5b58 \u4f4e\u7ea7\u8c03\u5ea6\uff08\u8fdb\u7a0b\u8c03\u5ea6/\u77ed\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u9ad8\uff09\uff1a\u51b3\u5b9a\u5c31\u5c31\u7eea\u961f\u5217\u4e2d\u54ea\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u5904\u7406\u673a\u5e76\u6267\u884c \u8c03\u5ea6\u7b97\u6cd5 \u00b6 \u4ec0\u4e48\u662f\u8c03\u5ea6\uff1f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u8d44\u6e90\u5206\u914d \u4ec0\u4e48\u662f\u9965\u997f\uff1f\u67d0\u5199\u8fdb\u7a0b\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u5f97\u4e0d\u5230\u5904\u7406 \u8c03\u5ea6\u7b97\u6cd5\u7684\u5206\u7c7b \u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u62a2\uff09\uff1a\u53ef\u4ee5\u6682\u505c\u67d0\u4e2a\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5c06\u5904\u7406\u53ca\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b \u975e\u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u62a2\u8d70\uff09\uff1a\u4e00\u65e6\u5904\u7406\u53ca\u5206\u914d\u7ed9\u4e86\u67d0\u4e2a\u8fdb\u7a0b\uff0c\u4ed6\u5c31\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u7ed3\u675f \u5177\u4f53\u8c03\u5ea6\u7b97\u6cd5\uff1a 1.\u5148\u6765\u5148\u670d\u52a1\uff08FCFS\uff09\uff1a\u6309\u7167\u5230\u8fbe\u987a\u5e8f\uff0c\u975e\u62a2\u5360\u5f0f,\u4e0d\u4f1a\u9965\u997f 2.\u77ed\u4f5c\u4e1a/\u8fdb\u7a0b\u4f18\u5148\uff08SJF\uff09:\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f 3.\u9ad8\u54cd\u5e94\u6bd4\u4f18\u5148\uff08HRRN\uff09:\u7efc\u5408\u8003\u8651\u7b49\u5f85\u65f6\u95f4\u548c\u8981\u6c42\u670d\u52a1\u4e8b\u4ef6\u8ba1\u7b97\u4e00\u4e2a\u4f18\u5148\u6743\uff0c\u975e\u62a2\u5360\uff0c\u4e0d\u4f1a\u9965\u997f 4.\u65f6\u95f4\u7247\u8f6e\u8f6c\uff08RR\uff09:\u8f6e\u6d41\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u670d\u52a1\uff0c\u62a2\u5360\u5f0f\uff0c\u4e0d\u4f1a\u9965\u997f 5.\u4f18\u5148\u7ea7\uff1a\u6839\u636e\u4f18\u5148\u7ea7\uff0c\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f 6.\u591a\u7ea7\u53cd\u9988\u961f\u5217\uff1a \u8bbe\u7f6e\u591a\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u7684\u8fdb\u7a0b\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u6392\u961f\uff0c\u7136\u540e\u6309\u7167\u65f6\u95f4\u7247\u8f6e\u8f6c\u5206\u914d\u65f6\u95f4\u7247 \u82e5\u65f6\u95f4\u7247\u7528\u5b8c\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u7ea7\u961f\u5c3e\uff0c\u53ea\u6709\u5f53\u524d\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u624d\u4f1a\u4e3a\u4e0b\u4e00\u7ea7\u961f\u5217\u5206\u914d\u65f6\u95f4\u7247\u3002 \u62a2\u5360\u5f0f\uff0c\u53ef\u80fd\u4f1a\u9965\u997f \u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\uff1a \u5148\u6765\u5148\u670d\u52a1\u8c03\u5ea6\u7b97\u6cd5 \u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5 \u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5 \u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff1a \u4ee5\u4e0a6\u79cd\u90fd\u53ef\u4ee5\u662f\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5","title":"\u8c03\u5ea6\u7b97\u6cd5\u8bb0\u5f55"},{"location":"%E7%BC%96%E7%A8%8B/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95/#_1","text":"\u94fe\u63a5\uff1a https://www.nowcoder.com/questionTerminal/238e7607793449d19d0f07434b8d78ad \u6765\u6e90\uff1a\u725b\u5ba2\u7f51 \u9ad8\u7ea7\u8c03\u5ea6\uff08\u4f5c\u4e1a\u8c03\u5ea6/\u957f\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u4f4e\uff09\uff1a\u5c06\u5916\u5b58\u4f5c\u4e1a\u8c03\u5165\u5185\u5b58 \u4f4e\u7ea7\u8c03\u5ea6\uff08\u8fdb\u7a0b\u8c03\u5ea6/\u77ed\u7a0b\u8c03\u5ea6\uff09\uff08\u9891\u7387\u9ad8\uff09\uff1a\u51b3\u5b9a\u5c31\u5c31\u7eea\u961f\u5217\u4e2d\u54ea\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u5904\u7406\u673a\u5e76\u6267\u884c","title":"\u8c03\u5ea6\u7b97\u6cd5\u8bb0\u5f55"},{"location":"%E7%BC%96%E7%A8%8B/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95/#_2","text":"\u4ec0\u4e48\u662f\u8c03\u5ea6\uff1f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u8d44\u6e90\u5206\u914d \u4ec0\u4e48\u662f\u9965\u997f\uff1f\u67d0\u5199\u8fdb\u7a0b\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u5f97\u4e0d\u5230\u5904\u7406 \u8c03\u5ea6\u7b97\u6cd5\u7684\u5206\u7c7b \u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u62a2\uff09\uff1a\u53ef\u4ee5\u6682\u505c\u67d0\u4e2a\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5c06\u5904\u7406\u53ca\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u8fdb\u7a0b \u975e\u62a2\u5360\u5f0f\uff08\u5f53\u524d\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u62a2\u8d70\uff09\uff1a\u4e00\u65e6\u5904\u7406\u53ca\u5206\u914d\u7ed9\u4e86\u67d0\u4e2a\u8fdb\u7a0b\uff0c\u4ed6\u5c31\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u7ed3\u675f \u5177\u4f53\u8c03\u5ea6\u7b97\u6cd5\uff1a 1.\u5148\u6765\u5148\u670d\u52a1\uff08FCFS\uff09\uff1a\u6309\u7167\u5230\u8fbe\u987a\u5e8f\uff0c\u975e\u62a2\u5360\u5f0f,\u4e0d\u4f1a\u9965\u997f 2.\u77ed\u4f5c\u4e1a/\u8fdb\u7a0b\u4f18\u5148\uff08SJF\uff09:\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f 3.\u9ad8\u54cd\u5e94\u6bd4\u4f18\u5148\uff08HRRN\uff09:\u7efc\u5408\u8003\u8651\u7b49\u5f85\u65f6\u95f4\u548c\u8981\u6c42\u670d\u52a1\u4e8b\u4ef6\u8ba1\u7b97\u4e00\u4e2a\u4f18\u5148\u6743\uff0c\u975e\u62a2\u5360\uff0c\u4e0d\u4f1a\u9965\u997f 4.\u65f6\u95f4\u7247\u8f6e\u8f6c\uff08RR\uff09:\u8f6e\u6d41\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u670d\u52a1\uff0c\u62a2\u5360\u5f0f\uff0c\u4e0d\u4f1a\u9965\u997f 5.\u4f18\u5148\u7ea7\uff1a\u6839\u636e\u4f18\u5148\u7ea7\uff0c\u62a2\u5360/\u975e\u62a2\u5360\uff0c\u4f1a\u9965\u997f 6.\u591a\u7ea7\u53cd\u9988\u961f\u5217\uff1a \u8bbe\u7f6e\u591a\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u6bcf\u4e2a\u961f\u5217\u7684\u8fdb\u7a0b\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u6392\u961f\uff0c\u7136\u540e\u6309\u7167\u65f6\u95f4\u7247\u8f6e\u8f6c\u5206\u914d\u65f6\u95f4\u7247 \u82e5\u65f6\u95f4\u7247\u7528\u5b8c\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u7ea7\u961f\u5c3e\uff0c\u53ea\u6709\u5f53\u524d\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u624d\u4f1a\u4e3a\u4e0b\u4e00\u7ea7\u961f\u5217\u5206\u914d\u65f6\u95f4\u7247\u3002 \u62a2\u5360\u5f0f\uff0c\u53ef\u80fd\u4f1a\u9965\u997f \u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\uff1a \u5148\u6765\u5148\u670d\u52a1\u8c03\u5ea6\u7b97\u6cd5 \u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5 \u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5 \u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff1a \u4ee5\u4e0a6\u79cd\u90fd\u53ef\u4ee5\u662f\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5","title":"\u8c03\u5ea6\u7b97\u6cd5"},{"location":"%E9%9A%8F%E7%AC%94/LINK%20fatal%20error%20LNK1158%20cannot%20run%20%27rc.exe%27/","text":"LINK fatal error LNK1158 cannot run \u2018rc.exe\u2019 \u00b6 \u53c2\u8003 LINK : fatal error LNK1158: cannot run \u2018rc.exe\u2019 python \u7f16\u8bd1cython\u6587\u4ef6\u7684\u65f6\u5019 \u62a5\u9519\u5982\u4e0b \u00b6 ERROR: Command errored out with exit status 1: command: 'd:\\programdata\\miniconda3\\envs\\py35\\python.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"'; __file__='\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mo d-optimizer2\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps cwd: D:\\PycharmProjects\\rqalpha-mod-optimizer2\\ Complete output (38 lines): running develop running egg_info writing requirements to rqalpha_mod_optimizer2.egg-info\\requires.txt writing dependency_links to rqalpha_mod_optimizer2.egg-info\\dependency_links.txt writing rqalpha_mod_optimizer2.egg-info\\PKG-INFO writing top-level names to rqalpha_mod_optimizer2.egg-info\\top_level.txt reading manifest file 'rqalpha_mod_optimizer2.egg-info\\SOURCES.txt' reading manifest template 'MANIFEST.in' warning: no previously-included files matching '*' found under directory 'tests' warning: no previously-included files matching '__pycache__' found under directory '*' warning: no previously-included files matching '*.py[co]' found under directory '*' writing manifest file 'rqalpha_mod_optimizer2.egg-info\\SOURCES.txt' running build_ext cythoning rqalpha_mod_optimizer2\\api.py to rqalpha_mod_optimizer2\\api.c cythoning rqalpha_mod_optimizer2\\mod.py to rqalpha_mod_optimizer2\\mod.c cythoning rqalpha_mod_optimizer2\\_version.py to rqalpha_mod_optimizer2\\_version.c building 'rqalpha_mod_optimizer2.api' extension creating build creating build\\temp.win-amd64-3.5 creating build\\temp.win-amd64-3.5\\Release creating build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Id:\\programdata\\miniconda3\\envs\\py35\\include -Id:\\programdata\\miniconda3\\envs\\py35\\include \"-IC:\\Program Fil es (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows K its\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" /Tcrqalpha_mod_optimizer2\\api.c /Fobuild\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.obj api.c creating D:\\PycharmProjects\\rqalpha-mod-optimizer2\\build\\lib.win-amd64-3.5 creating D:\\PycharmProjects\\rqalpha-mod-optimizer2\\build\\lib.win-amd64-3.5\\rqalpha_mod_optimizer2 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:d:\\programdata\\miniconda3\\envs\\py35\\libs /LIBPATH:d:\\programda ta\\miniconda3\\envs\\py35\\PCbuild\\amd64 \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Wi ndows Kits\\10\\lib\\10.0.17763.0\\um\\x64\" /EXPORT:PyInit_api build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.obj /OUT:build\\lib.win-amd64-3.5\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.pyd /IMPLIB:build\\temp.win-amd64 -3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.lib api.obj : warning LNK4197: export 'PyInit_api' specified multiple times; using first specification Creating library build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.lib and object build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.exp Generating code Finished generating code LINK : fatal error LNK1158: cannot run 'rc.exe' d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\api.py tree = Parsing.p_module(s, pxd, full_module_name) d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\mod.py tree = Parsing.p_module(s, pxd, full_module_name) d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\_version.py tree = Parsing.p_module(s, pxd, full_module_name) error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\BIN\\\\x86_amd64\\\\link.exe' failed with exit status 1158 ---------------------------------------- Rolling back uninstall of rqalpha-mod-optimizer2 Moving to d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\rqalpha_mod_optimizer2-0.2.5.dist-info\\ from d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\~qalpha_mod_optimizer2-0.2.5.dist-info Moving to d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\rqalpha_mod_optimizer2\\ from d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\~qalpha_mod_optimizer2 ERROR: Command errored out with exit status 1: 'd:\\programdata\\miniconda3\\envs\\py35\\python.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"'; __file__='\"' \"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' dev elop --no-deps Check the logs for full command output. \u89e3\u51b3 \u00b6 C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86 \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684 rc.exe \u548c rcdll.dll \u62f7\u8d1d\u5230\u6211\u7684 Visual C++ \u7684 VC/Bin \u76ee\u5f55\u4e0b\uff1a D:\\Apps\\x86\\Microsoft\\Visual_Studio\\v14.0\\VC\\bin \u901a\u8fc7\u9519\u8bef\u4fe1\u606f\uff0c\u6211\u7535\u8111\u7684\u6587\u4ef6\u4f4d\u7f6e\u662f C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\ \u6ce8\u610f\u6211\u7684 Visual C++ \u7684\u5b89\u88c5\u76ee\u5f55\u53ef\u80fd\u548c\u4f60\u7684\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u7528\u4f60\u81ea\u5df1\u7684\u7684 VC/Bin \u76ee\u5f55\u3002","title":"LINK fatal error LNK1158 cannot run 'rc.exe'"},{"location":"%E9%9A%8F%E7%AC%94/LINK%20fatal%20error%20LNK1158%20cannot%20run%20%27rc.exe%27/#link-fatal-error-lnk1158-cannot-run-rcexe","text":"\u53c2\u8003 LINK : fatal error LNK1158: cannot run \u2018rc.exe\u2019 python \u7f16\u8bd1cython\u6587\u4ef6\u7684\u65f6\u5019","title":"LINK fatal error LNK1158 cannot run 'rc.exe'"},{"location":"%E9%9A%8F%E7%AC%94/LINK%20fatal%20error%20LNK1158%20cannot%20run%20%27rc.exe%27/#_1","text":"ERROR: Command errored out with exit status 1: command: 'd:\\programdata\\miniconda3\\envs\\py35\\python.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"'; __file__='\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mo d-optimizer2\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps cwd: D:\\PycharmProjects\\rqalpha-mod-optimizer2\\ Complete output (38 lines): running develop running egg_info writing requirements to rqalpha_mod_optimizer2.egg-info\\requires.txt writing dependency_links to rqalpha_mod_optimizer2.egg-info\\dependency_links.txt writing rqalpha_mod_optimizer2.egg-info\\PKG-INFO writing top-level names to rqalpha_mod_optimizer2.egg-info\\top_level.txt reading manifest file 'rqalpha_mod_optimizer2.egg-info\\SOURCES.txt' reading manifest template 'MANIFEST.in' warning: no previously-included files matching '*' found under directory 'tests' warning: no previously-included files matching '__pycache__' found under directory '*' warning: no previously-included files matching '*.py[co]' found under directory '*' writing manifest file 'rqalpha_mod_optimizer2.egg-info\\SOURCES.txt' running build_ext cythoning rqalpha_mod_optimizer2\\api.py to rqalpha_mod_optimizer2\\api.c cythoning rqalpha_mod_optimizer2\\mod.py to rqalpha_mod_optimizer2\\mod.c cythoning rqalpha_mod_optimizer2\\_version.py to rqalpha_mod_optimizer2\\_version.c building 'rqalpha_mod_optimizer2.api' extension creating build creating build\\temp.win-amd64-3.5 creating build\\temp.win-amd64-3.5\\Release creating build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Id:\\programdata\\miniconda3\\envs\\py35\\include -Id:\\programdata\\miniconda3\\envs\\py35\\include \"-IC:\\Program Fil es (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows K its\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" /Tcrqalpha_mod_optimizer2\\api.c /Fobuild\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.obj api.c creating D:\\PycharmProjects\\rqalpha-mod-optimizer2\\build\\lib.win-amd64-3.5 creating D:\\PycharmProjects\\rqalpha-mod-optimizer2\\build\\lib.win-amd64-3.5\\rqalpha_mod_optimizer2 C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:d:\\programdata\\miniconda3\\envs\\py35\\libs /LIBPATH:d:\\programda ta\\miniconda3\\envs\\py35\\PCbuild\\amd64 \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Wi ndows Kits\\10\\lib\\10.0.17763.0\\um\\x64\" /EXPORT:PyInit_api build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.obj /OUT:build\\lib.win-amd64-3.5\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.pyd /IMPLIB:build\\temp.win-amd64 -3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.lib api.obj : warning LNK4197: export 'PyInit_api' specified multiple times; using first specification Creating library build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.lib and object build\\temp.win-amd64-3.5\\Release\\rqalpha_mod_optimizer2\\api.cp35-win_amd64.exp Generating code Finished generating code LINK : fatal error LNK1158: cannot run 'rc.exe' d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\api.py tree = Parsing.p_module(s, pxd, full_module_name) d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\mod.py tree = Parsing.p_module(s, pxd, full_module_name) d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWarning: Cython directive 'language_level' not set, using 2 for now (Py2). This will change in a later release! File: D:\\PycharmProj ects\\rqalpha-mod-optimizer2\\rqalpha_mod_optimizer2\\_version.py tree = Parsing.p_module(s, pxd, full_module_name) error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\BIN\\\\x86_amd64\\\\link.exe' failed with exit status 1158 ---------------------------------------- Rolling back uninstall of rqalpha-mod-optimizer2 Moving to d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\rqalpha_mod_optimizer2-0.2.5.dist-info\\ from d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\~qalpha_mod_optimizer2-0.2.5.dist-info Moving to d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\rqalpha_mod_optimizer2\\ from d:\\programdata\\miniconda3\\envs\\py35\\lib\\site-packages\\~qalpha_mod_optimizer2 ERROR: Command errored out with exit status 1: 'd:\\programdata\\miniconda3\\envs\\py35\\python.exe' -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"'; __file__='\"' \"'D:\\\\PycharmProjects\\\\rqalpha-mod-optimizer2\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' dev elop --no-deps Check the logs for full command output.","title":"\u62a5\u9519\u5982\u4e0b"},{"location":"%E9%9A%8F%E7%AC%94/LINK%20fatal%20error%20LNK1158%20cannot%20run%20%27rc.exe%27/#_2","text":"C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86 \u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684 rc.exe \u548c rcdll.dll \u62f7\u8d1d\u5230\u6211\u7684 Visual C++ \u7684 VC/Bin \u76ee\u5f55\u4e0b\uff1a D:\\Apps\\x86\\Microsoft\\Visual_Studio\\v14.0\\VC\\bin \u901a\u8fc7\u9519\u8bef\u4fe1\u606f\uff0c\u6211\u7535\u8111\u7684\u6587\u4ef6\u4f4d\u7f6e\u662f C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\ \u6ce8\u610f\u6211\u7684 Visual C++ \u7684\u5b89\u88c5\u76ee\u5f55\u53ef\u80fd\u548c\u4f60\u7684\u4e0d\u540c\uff0c\u4f60\u9700\u8981\u7528\u4f60\u81ea\u5df1\u7684\u7684 VC/Bin \u76ee\u5f55\u3002","title":"\u89e3\u51b3"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/","text":"PyCharm\u53cavscode\u5feb\u901f\u914d\u7f6eRQSDK\u4e0a\u624b \u8bf4\u660e\u6587\u6863 \u00b6 PyCharm\u53ca VS Code \u5feb\u901f\u914d\u7f6eRQSDK\u4e0a\u624b \u00b6 PyCharm \u00b6 \u4e3a\u4ec0\u4e48\u8981\u7528PyCharm\uff1f \u00b6 PyCharm \u4f5c\u4e3a IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\uff0c\u518d\u5e26 python \u89e3\u91ca\u5668\u548c\u865a\u62df\u73af\u5883\u7ba1\u7406\u529f\u80fd\uff0c\u5f00\u7bb1\u5373\u7528 PyCharm \u9ed8\u8ba4\u7684\u5185\u7f6e\u529f\u80fd\u6781\u4e3a\u4e30\u5bcc\uff08Git\u3001\u6570\u636e\u5e93\u652f\u6301\u3001\u6846\u67b6\u652f\u6301\u7b49\uff09\uff0c\u65e0\u9700\u624b\u52a8\u914d\u7f6e\u63d2\u4ef6\u4fbf\u53ef\u76f4\u63a5\u4f7f\u7528 PyCharm \u5185\u7f6e\u4e86\u5728\u4e1a\u754c\u65e0\u51fa\u5176\u53f3\u7684\u9759\u6001\u4ee3\u7801\u5ba1\u67e5\uff08code inspect\uff09\u529f\u80fd PyCharm \u4e0b\u8f7d \u00b6 \u5b98\u7f51 \u63d0\u4f9b\u4e86\u4e13\u4e1a\u7248\u548c\u793e\u533a\u7248\u4e0b\u8f7d\u3002 \u4e13\u4e1a\u7248\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u548c Web \u5f00\u53d1\u3002\u540c\u65f6\u5177\u6709 HTML\u3001JS \u548c SQL \u7b49\u652f\u6301\u3002\u4e13\u4e1a\u7248 PyCharm \u652f\u6301\u8bd5\u752830\u5929\u3002 \u793e\u533a\u7248\u7528\u4e8e\u901a\u5e38\u7684 Python \u5f00\u53d1\u3002\u514d\u8d39\u4e14\u5f00\u6e90\u3002 \u521b\u5efa PyCharm \u5de5\u7a0b\uff08Project\uff09 \u00b6 \u4e0b\u8f7d\u4e14\u5b89\u88c5\u5b8c\u6210 PyCharm \u540e\uff0c\u4fbf\u53ef\u6253\u5f00 Pycharm \u540e\u5efa\u7acb\u4e00\u4e2a\u5de5\u7a0b\u3002\u8be5\u9636\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u9879\u76ee\u4f7f\u7528\u7684 Python \u89e3\u91ca\u5668/\u865a\u62df\u73af\u5883\uff0c\u540e\u7eed\u5f00\u53d1\u4e2d\u7684\u4ee3\u7801\u63d0\u793a\u3001\u8c03\u8bd5\u7b49\u529f\u80fd\u90fd\u4f9d\u8d56\u4e3a\u5de5\u7a0b\u914d\u7f6e\u7684\u865a\u62df\u73af\u5883\uff1a \u70b9\u51fb Create New Project \u6309\u94ae \u5c55\u5f00 Project interpreter \u9009\u62e9\u865a\u62df\u73af\u5883\uff08\u82e5\u6ca1\u6709\u5df2\u5b58\u5728\u73af\u5883\uff0c\u5219 PyCharm \u4f1a\u81ea\u52a8\u521b\u5efa\uff09 \u70b9\u51fb Create \u6309\u94ae \u5982\u679c\u6ca1\u6709python\u73af\u5883 \uff0c\u7f16\u8f91\u5668\u53f3\u4e0b\u89d2\u4f1a\u6709\u8fdb\u5ea6\u6761\u63d0\u793apython\u7684\u5b89\u88c5\u8fdb\u5ea6\u3002 \u5de5\u7a0b\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4ea6\u53ef\u5728\u8bbe\u7f6e\u4e2d\u4fee\u6539\u5f53\u524d\u5de5\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u73af\u5883\uff1a \u70b9\u51fb\u5de6\u4e0a\u89d2\u83dc\u5355\u680fFIle -> Settings\uff08macOS \u4e2d\u4e3a PyCharm -> Preference\uff09 \u70b9\u51fb Project: **** -> Project Interpreter \u70b9\u51fb\u53f3\u8fb9\u5c0f\u9f7f\u8f6e -> Show All \u70b9\u51fb\u52a0\u53f7\uff08+\uff09 -> \u9009\u62e9\u865a\u62df\u73af\u5883\uff08Virtualenv Environment) \u6216\u8005 Conda \u73af\u5883\uff08Conda Environment) ` \u5728 PyCharm \u4e2d\u5b89\u88c5 RQSDK \u00b6 \u82e5\u5f53\u524d\u5de5\u7a0b\u914d\u7f6e\u7684\u865a\u62df\u73af\u5883\u4e2d\u8fd8\u672a\u5b89\u88c5 RQSDK\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 PyCharm \u4e2d\u8c03\u7528\u7ec8\u7aef\uff08terminal\uff09\u5b89\u88c5\uff0cPyCharm \u4f1a\u81ea\u52a8\u5728\u6539\u7ec8\u7aef\u6fc0\u6d3b\u5148\u524d\u914d\u7f6e\u597d\u7684\u865a\u62df\u73af\u5883\u3002 \u82e5\u70b9\u51fb\u5de6\u4e0b\u89d2 Terminal \u4ee5\u6fc0\u6d3b\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5b89\u88c5 RQSDK pip install -i https://pypi.douban.com/simple rqsdk \u4f7f\u7528 PyCharm \u7f16\u5199\u4ee3\u7801 \u00b6 \u521b\u5efa Python \u6a21\u5757\uff08module\uff09 \u9f20\u6807\u53f3\u952e\u9879\u76ee\u6587\u4ef6\u5939 -> New -> Python File -> \u8f93\u5165\u6587\u4ef6\u540d \u82e5\u5f53\u524d\u5de5\u7a0b\u6b63\u786e\u914d\u7f6e\u4e86\u865a\u62df\u73af\u5883\uff0c\u4e14\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e86 RQSDK\uff0c\u5728 py \u6587\u4ef6\u4e2d\u8f93\u5165\u201crq\u201d\u65f6\u4fbf\u53ef\u4ee5\u770b\u5230 PyCharm \u7ed9\u51fa\u7684\u4ee3\u7801\u63d0\u793a \u5728 py \u6587\u4ef6\u4e2d\u8f93\u5165\u4ee3\u7801\uff0c\u5982\u4f7f\u7528 RQDatac \u8c03\u53d6\u65e5\u7ebf\u6570\u636e\uff1a import rqdatac rqdatac.init() print(rqdatac.get_price(\"000001.XSHE\")) \u5728\u7f16\u8f91\u533a\u57df\u70b9\u51fb\u53f3\u952e\u6267\u884c Run\u2026 \u4fbf\u53ef\u4ee5\u8fd0\u884c\u5f53\u524d\u6a21\u5757\uff0c\u6ce8\u610f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u8fd0\u884c\u8981\u6c42\u4e8b\u5148\u4f7f\u7528 rqsdk license \u547d\u4ee4\u914d\u7f6e\u597d license\u3002 \u5f53\u7528\u4e86 rqsdk install rqalpha_plus \u540e\uff0c\u5f53\u524dpython\u73af\u5883\u4e5f\u4f1a\u6709 rqoptimizer \u548c rqfactor \u4f7f\u7528 PyCharm \u8fd0\u884c\u56de\u6d4b \u00b6 \u56de\u6d4b\u5728\u7ec8\u7aef\u4e2d\u9700\u8981\u901a\u8fc7 rqalpha-plus \u547d\u4ee4\u800c\u975e python \u547d\u4ee4\u8fd0\u884c\uff0c\u6545\u5728 PyCharm \u4e2d\u8fd0\u884c\u56de\u6d4b\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\uff0c\u4ee5\u7b80\u5355\u7684 buy-and-hold \u56de\u6d4b\u7b56\u7565\u4e3a\u4f8b\u3002 \u521b\u5efa\u540d\u4e3a buy_and_hold \u7684 python \u6a21\u5757\u5e76\u952e\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a ```python buy_and_hold.py \u00b6 def init(context): context.s = \u201c000001.XSHE\u201d context.fired = False def handle_bar(context, bar_dict): if not context.fired: order_shares(context.s, 1000) context.fired = True ``` \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Add Configuration \u5728\u6253\u5f00\u7684\u7a97\u53e3\u4e2d\u5c06\u7b2c\u4e00\u9879\u5de6\u4fa7\u9ed8\u8ba4\u7684\u8fd0\u884c\u65b9\u5f0f\u7531 Script path \u4fee\u6539\u4e3a Module name \u8bbe\u7f6e Module name \u4e3a rqalpha_plus \uff0c\u8bbe\u7f6e Parameters \u4e3a\u56de\u6d4b\u8fd0\u884c\u7684\u5b50\u547d\u4ee4 run \u53ca\u5176\u53c2\u6570\uff0c\u5982\uff1a shell run -f buy_and_hold.py -s 20190101 -e 20191231 -a stock 20000 --plot \u70b9\u51fb OK \u6309\u94ae\u4ee5\u5b8c\u6210\u914d\u7f6e \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e09\u89d2\u5f62\u6309\u94ae\u4ee5\u8fd0\u884c\u56de\u6d4b\uff0c\u6216\u70b9\u51fb\u866b\u5b50\u6309\u94ae\u4ee5\u8c03\u8bd5\uff08debug\uff09\u4ee3\u7801 Visual Studio Code (VS Code) \u00b6 \u4e3a\u4ec0\u4e48\u8981\u7528 VS Code\uff1f \u00b6 \u8f7b\u91cf\u5316\uff0c\u4e0b\u8f7d\u5b89\u88c5\u66f4\u5feb\uff1b\u8d44\u6e90\u5360\u7528\u4f4e\uff0c\u5bf9\u914d\u7f6e\u76f8\u5bf9\u4e0d\u8db3\u7684\u8ba1\u7b97\u673a\u66f4\u53cb\u597d \u542f\u52a8\u5feb\u901f\uff0c\u9996\u6b21\u521b\u5efa\u5de5\u7a0b\u65f6\u6ca1\u6709\u6f2b\u957f\u7b49\u5f85\u521b\u5efa\u7d22\u5f15\u7684\u8fc7\u7a0b \u751f\u6001\u5065\u5168\uff0c\u6709\u7740\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u4e3b\u9898\u548c\u63d2\u4ef6 \u5728 Visual Studio Code \u5b98\u7f51\u53ef\u4ee5\u4e0b\u8f7d\u6807\u51c6\u7248\u3002 \u5b89\u88c5 Python \u63d2\u4ef6\uff08Extensions\uff09 \u00b6 VScode \u4e0d\u662f python \u4e13\u7528\u7684\u7f16\u8f91\u5668\uff0c\u6545\u4f7f\u7528\u5176\u5f00\u53d1 python \u9700\u8981\u5b89\u88c5\u4e13\u95e8\u7684\u63d2\u4ef6\u652f\u6301\u624d\u80fd\u83b7\u5f97\u4ee3\u7801\u63d0\u793a\u3001\u5ba1\u67e5\u3001\u8c03\u8bd5\u7b49\u529f\u80fd\uff1a \u5728\u5de6\u4fa7\u680f\u70b9\u51fb Extensions \u540e\uff0c\u641c\u7d22 python\uff0c\u9009\u62e9\u641c\u7d22\u5230\u7684\u7b2c\u4e00\u9879\u5e76\u70b9\u51fb install \u6309\u94ae\u5b89\u88c5\u3002 \u8bbe\u7f6e\u865a\u62df\u73af\u5883/Python \u89e3\u91ca\u5668 \u00b6 \u4f7f\u7528 Ctrl+Shift+P \u5feb\u6377\u952e\uff08macOS \u4e3a Command+Shift+P\uff09\u6253\u5f00 command palette \u7a97\u53e3 \u8f93\u5165\u5173\u952e\u5b57 python select \u5e76\u627e\u5230 Python: Select Interpreter \u4e00\u9879\uff0c \u70b9\u51fb\u8be5\u9879\u5e76\u5728\u968f\u540e\u5f39\u51fa\u7684 Python \u89e3\u91ca\u5668\u5217\u8868\u4e2d\u9009\u62e9\u76ee\u6807\u865a\u62df\u73af\u5883\u4e2d\u7684\u89e3\u91ca\u5668\uff08\u82e5\u76ee\u6807\u865a\u62df\u73af\u5883\u672a\u5217\u51fa\uff0c\u5219\u9700\u8981\u624b\u5de5\u8f93\u5165\u89e3\u91ca\u5668\u7684\u8def\u5f84\uff09 \u4f7f\u7528 VS Code \u7f16\u5199\u4ee3\u7801 \u00b6 \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 \u5c06\u6587\u4ef6\u5939\u62d6\u5165\u5230VS code \u7a97\u53e3 \u521b\u5efapy\u6587\u4ef6 open folder -> new file \u6587\u4ef6\u540d:demo_rqdatac.py \u4f7f\u7528rqdatac \u67e5\u770b\u5e73\u5b89\u94f6\u884c\u65e5\u7ebf\u6570\u636e \u6587\u4ef6\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a import rqdatac rqdatac.init() print(rqdatac.get_price(\"000001.XSHE\")) \u8fd0\u884crqalpha-plus \u751f\u6210\u6837\u4f8b\u7b56\u7565\u5e76\u8fd0\u884c \u8fd0\u884c\u6837\u4f8b\u7b56\u7565\u9700\u8981\u7684\u547d\u4ee4\u5982\u4e0b (\u5047\u8bbeconda\u73af\u5883\u540d\u4e3apy35) conda activate py35 pip install rqsdk -i https://pypi.douban.com/simple/ rqsdk install rqalpha-plus rqsdk download-data rqalpha-plus examples rqalpha-plus run -f examples/buy_and_hold.py -s 2018-01-01 -e 2018-05-31 -fq 1m --plot --account stock 1000000 \u547d\u4ee4\u5bf9\u5e94\u4f5c\u7528\u5982\u4e0b\uff1a \u6fc0\u6d3b\u540d\u4e3a py35 \u7684 conda\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8f93\u5165conda create -n py35 \u5b89\u88c5 rqsdk\u548crqalpha-plus \u751f\u6210\u6837\u4f8b\u7b56\u7565\u6587\u4ef6\u5939 \u4f7f\u7528 examples \u7684 buy_and_hold.py \u7b56\u7565\u542f\u52a8\u56de\u6d4b \u7528debug\u65b9\u5f0f\u8fd0\u884c\u56de\u6d4b \u00b6 launch.json\u914d\u7f6e\u5982\u4e0b { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"Python: \u6a21\u5757\", \"type\": \"python\", \"request\": \"launch\", \"module\": \"rqalpha-plus\", \"args\": [\"run\", \"-f\", \"examples\\\\buy_and_hold.py\", \"-s\", \"2018-01-01\", \"-e\", \"2018-05-31\", \"-fq\", \"1m\", \"--plot\", \"--account\", \"stock\", \"1000000\"] } ] }","title":"PyCharm\u53cavscode\u5feb\u901f\u914d\u7f6eRQSDK\u4e0a\u624b \u8bf4\u660e\u6587\u6863"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharmvscoderqsdk","text":"","title":"PyCharm\u53cavscode\u5feb\u901f\u914d\u7f6eRQSDK\u4e0a\u624b \u8bf4\u660e\u6587\u6863"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm-vs-code-rqsdk","text":"","title":"PyCharm\u53ca VS Code \u5feb\u901f\u914d\u7f6eRQSDK\u4e0a\u624b"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm","text":"","title":"PyCharm"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm_1","text":"PyCharm \u4f5c\u4e3a IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\uff0c\u518d\u5e26 python \u89e3\u91ca\u5668\u548c\u865a\u62df\u73af\u5883\u7ba1\u7406\u529f\u80fd\uff0c\u5f00\u7bb1\u5373\u7528 PyCharm \u9ed8\u8ba4\u7684\u5185\u7f6e\u529f\u80fd\u6781\u4e3a\u4e30\u5bcc\uff08Git\u3001\u6570\u636e\u5e93\u652f\u6301\u3001\u6846\u67b6\u652f\u6301\u7b49\uff09\uff0c\u65e0\u9700\u624b\u52a8\u914d\u7f6e\u63d2\u4ef6\u4fbf\u53ef\u76f4\u63a5\u4f7f\u7528 PyCharm \u5185\u7f6e\u4e86\u5728\u4e1a\u754c\u65e0\u51fa\u5176\u53f3\u7684\u9759\u6001\u4ee3\u7801\u5ba1\u67e5\uff08code inspect\uff09\u529f\u80fd","title":"\u4e3a\u4ec0\u4e48\u8981\u7528PyCharm\uff1f"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm_2","text":"\u5b98\u7f51 \u63d0\u4f9b\u4e86\u4e13\u4e1a\u7248\u548c\u793e\u533a\u7248\u4e0b\u8f7d\u3002 \u4e13\u4e1a\u7248\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u548c Web \u5f00\u53d1\u3002\u540c\u65f6\u5177\u6709 HTML\u3001JS \u548c SQL \u7b49\u652f\u6301\u3002\u4e13\u4e1a\u7248 PyCharm \u652f\u6301\u8bd5\u752830\u5929\u3002 \u793e\u533a\u7248\u7528\u4e8e\u901a\u5e38\u7684 Python \u5f00\u53d1\u3002\u514d\u8d39\u4e14\u5f00\u6e90\u3002","title":"PyCharm \u4e0b\u8f7d"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm-project","text":"\u4e0b\u8f7d\u4e14\u5b89\u88c5\u5b8c\u6210 PyCharm \u540e\uff0c\u4fbf\u53ef\u6253\u5f00 Pycharm \u540e\u5efa\u7acb\u4e00\u4e2a\u5de5\u7a0b\u3002\u8be5\u9636\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u9879\u76ee\u4f7f\u7528\u7684 Python \u89e3\u91ca\u5668/\u865a\u62df\u73af\u5883\uff0c\u540e\u7eed\u5f00\u53d1\u4e2d\u7684\u4ee3\u7801\u63d0\u793a\u3001\u8c03\u8bd5\u7b49\u529f\u80fd\u90fd\u4f9d\u8d56\u4e3a\u5de5\u7a0b\u914d\u7f6e\u7684\u865a\u62df\u73af\u5883\uff1a \u70b9\u51fb Create New Project \u6309\u94ae \u5c55\u5f00 Project interpreter \u9009\u62e9\u865a\u62df\u73af\u5883\uff08\u82e5\u6ca1\u6709\u5df2\u5b58\u5728\u73af\u5883\uff0c\u5219 PyCharm \u4f1a\u81ea\u52a8\u521b\u5efa\uff09 \u70b9\u51fb Create \u6309\u94ae \u5982\u679c\u6ca1\u6709python\u73af\u5883 \uff0c\u7f16\u8f91\u5668\u53f3\u4e0b\u89d2\u4f1a\u6709\u8fdb\u5ea6\u6761\u63d0\u793apython\u7684\u5b89\u88c5\u8fdb\u5ea6\u3002 \u5de5\u7a0b\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u4ea6\u53ef\u5728\u8bbe\u7f6e\u4e2d\u4fee\u6539\u5f53\u524d\u5de5\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u73af\u5883\uff1a \u70b9\u51fb\u5de6\u4e0a\u89d2\u83dc\u5355\u680fFIle -> Settings\uff08macOS \u4e2d\u4e3a PyCharm -> Preference\uff09 \u70b9\u51fb Project: **** -> Project Interpreter \u70b9\u51fb\u53f3\u8fb9\u5c0f\u9f7f\u8f6e -> Show All \u70b9\u51fb\u52a0\u53f7\uff08+\uff09 -> \u9009\u62e9\u865a\u62df\u73af\u5883\uff08Virtualenv Environment) \u6216\u8005 Conda \u73af\u5883\uff08Conda Environment) `","title":"\u521b\u5efa PyCharm \u5de5\u7a0b\uff08Project\uff09"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm-rqsdk","text":"\u82e5\u5f53\u524d\u5de5\u7a0b\u914d\u7f6e\u7684\u865a\u62df\u73af\u5883\u4e2d\u8fd8\u672a\u5b89\u88c5 RQSDK\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 PyCharm \u4e2d\u8c03\u7528\u7ec8\u7aef\uff08terminal\uff09\u5b89\u88c5\uff0cPyCharm \u4f1a\u81ea\u52a8\u5728\u6539\u7ec8\u7aef\u6fc0\u6d3b\u5148\u524d\u914d\u7f6e\u597d\u7684\u865a\u62df\u73af\u5883\u3002 \u82e5\u70b9\u51fb\u5de6\u4e0b\u89d2 Terminal \u4ee5\u6fc0\u6d3b\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5b89\u88c5 RQSDK pip install -i https://pypi.douban.com/simple rqsdk","title":"\u5728 PyCharm \u4e2d\u5b89\u88c5 RQSDK"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm_3","text":"\u521b\u5efa Python \u6a21\u5757\uff08module\uff09 \u9f20\u6807\u53f3\u952e\u9879\u76ee\u6587\u4ef6\u5939 -> New -> Python File -> \u8f93\u5165\u6587\u4ef6\u540d \u82e5\u5f53\u524d\u5de5\u7a0b\u6b63\u786e\u914d\u7f6e\u4e86\u865a\u62df\u73af\u5883\uff0c\u4e14\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e86 RQSDK\uff0c\u5728 py \u6587\u4ef6\u4e2d\u8f93\u5165\u201crq\u201d\u65f6\u4fbf\u53ef\u4ee5\u770b\u5230 PyCharm \u7ed9\u51fa\u7684\u4ee3\u7801\u63d0\u793a \u5728 py \u6587\u4ef6\u4e2d\u8f93\u5165\u4ee3\u7801\uff0c\u5982\u4f7f\u7528 RQDatac \u8c03\u53d6\u65e5\u7ebf\u6570\u636e\uff1a import rqdatac rqdatac.init() print(rqdatac.get_price(\"000001.XSHE\")) \u5728\u7f16\u8f91\u533a\u57df\u70b9\u51fb\u53f3\u952e\u6267\u884c Run\u2026 \u4fbf\u53ef\u4ee5\u8fd0\u884c\u5f53\u524d\u6a21\u5757\uff0c\u6ce8\u610f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u8fd0\u884c\u8981\u6c42\u4e8b\u5148\u4f7f\u7528 rqsdk license \u547d\u4ee4\u914d\u7f6e\u597d license\u3002 \u5f53\u7528\u4e86 rqsdk install rqalpha_plus \u540e\uff0c\u5f53\u524dpython\u73af\u5883\u4e5f\u4f1a\u6709 rqoptimizer \u548c rqfactor","title":"\u4f7f\u7528 PyCharm \u7f16\u5199\u4ee3\u7801"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#pycharm_4","text":"\u56de\u6d4b\u5728\u7ec8\u7aef\u4e2d\u9700\u8981\u901a\u8fc7 rqalpha-plus \u547d\u4ee4\u800c\u975e python \u547d\u4ee4\u8fd0\u884c\uff0c\u6545\u5728 PyCharm \u4e2d\u8fd0\u884c\u56de\u6d4b\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\uff0c\u4ee5\u7b80\u5355\u7684 buy-and-hold \u56de\u6d4b\u7b56\u7565\u4e3a\u4f8b\u3002 \u521b\u5efa\u540d\u4e3a buy_and_hold \u7684 python \u6a21\u5757\u5e76\u952e\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a ```python","title":"\u4f7f\u7528 PyCharm \u8fd0\u884c\u56de\u6d4b"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#buy_and_holdpy","text":"def init(context): context.s = \u201c000001.XSHE\u201d context.fired = False def handle_bar(context, bar_dict): if not context.fired: order_shares(context.s, 1000) context.fired = True ``` \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 Add Configuration \u5728\u6253\u5f00\u7684\u7a97\u53e3\u4e2d\u5c06\u7b2c\u4e00\u9879\u5de6\u4fa7\u9ed8\u8ba4\u7684\u8fd0\u884c\u65b9\u5f0f\u7531 Script path \u4fee\u6539\u4e3a Module name \u8bbe\u7f6e Module name \u4e3a rqalpha_plus \uff0c\u8bbe\u7f6e Parameters \u4e3a\u56de\u6d4b\u8fd0\u884c\u7684\u5b50\u547d\u4ee4 run \u53ca\u5176\u53c2\u6570\uff0c\u5982\uff1a shell run -f buy_and_hold.py -s 20190101 -e 20191231 -a stock 20000 --plot \u70b9\u51fb OK \u6309\u94ae\u4ee5\u5b8c\u6210\u914d\u7f6e \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e09\u89d2\u5f62\u6309\u94ae\u4ee5\u8fd0\u884c\u56de\u6d4b\uff0c\u6216\u70b9\u51fb\u866b\u5b50\u6309\u94ae\u4ee5\u8c03\u8bd5\uff08debug\uff09\u4ee3\u7801","title":"buy_and_hold.py"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#visual-studio-code-vs-code","text":"","title":"Visual Studio Code (VS Code)"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#vs-code","text":"\u8f7b\u91cf\u5316\uff0c\u4e0b\u8f7d\u5b89\u88c5\u66f4\u5feb\uff1b\u8d44\u6e90\u5360\u7528\u4f4e\uff0c\u5bf9\u914d\u7f6e\u76f8\u5bf9\u4e0d\u8db3\u7684\u8ba1\u7b97\u673a\u66f4\u53cb\u597d \u542f\u52a8\u5feb\u901f\uff0c\u9996\u6b21\u521b\u5efa\u5de5\u7a0b\u65f6\u6ca1\u6709\u6f2b\u957f\u7b49\u5f85\u521b\u5efa\u7d22\u5f15\u7684\u8fc7\u7a0b \u751f\u6001\u5065\u5168\uff0c\u6709\u7740\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u4e3b\u9898\u548c\u63d2\u4ef6 \u5728 Visual Studio Code \u5b98\u7f51\u53ef\u4ee5\u4e0b\u8f7d\u6807\u51c6\u7248\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u7528 VS Code\uff1f"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#python-extensions","text":"VScode \u4e0d\u662f python \u4e13\u7528\u7684\u7f16\u8f91\u5668\uff0c\u6545\u4f7f\u7528\u5176\u5f00\u53d1 python \u9700\u8981\u5b89\u88c5\u4e13\u95e8\u7684\u63d2\u4ef6\u652f\u6301\u624d\u80fd\u83b7\u5f97\u4ee3\u7801\u63d0\u793a\u3001\u5ba1\u67e5\u3001\u8c03\u8bd5\u7b49\u529f\u80fd\uff1a \u5728\u5de6\u4fa7\u680f\u70b9\u51fb Extensions \u540e\uff0c\u641c\u7d22 python\uff0c\u9009\u62e9\u641c\u7d22\u5230\u7684\u7b2c\u4e00\u9879\u5e76\u70b9\u51fb install \u6309\u94ae\u5b89\u88c5\u3002","title":"\u5b89\u88c5 Python \u63d2\u4ef6\uff08Extensions\uff09"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#python","text":"\u4f7f\u7528 Ctrl+Shift+P \u5feb\u6377\u952e\uff08macOS \u4e3a Command+Shift+P\uff09\u6253\u5f00 command palette \u7a97\u53e3 \u8f93\u5165\u5173\u952e\u5b57 python select \u5e76\u627e\u5230 Python: Select Interpreter \u4e00\u9879\uff0c \u70b9\u51fb\u8be5\u9879\u5e76\u5728\u968f\u540e\u5f39\u51fa\u7684 Python \u89e3\u91ca\u5668\u5217\u8868\u4e2d\u9009\u62e9\u76ee\u6807\u865a\u62df\u73af\u5883\u4e2d\u7684\u89e3\u91ca\u5668\uff08\u82e5\u76ee\u6807\u865a\u62df\u73af\u5883\u672a\u5217\u51fa\uff0c\u5219\u9700\u8981\u624b\u5de5\u8f93\u5165\u89e3\u91ca\u5668\u7684\u8def\u5f84\uff09","title":"\u8bbe\u7f6e\u865a\u62df\u73af\u5883/Python \u89e3\u91ca\u5668"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#vs-code_1","text":"\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 \u5c06\u6587\u4ef6\u5939\u62d6\u5165\u5230VS code \u7a97\u53e3 \u521b\u5efapy\u6587\u4ef6 open folder -> new file \u6587\u4ef6\u540d:demo_rqdatac.py \u4f7f\u7528rqdatac \u67e5\u770b\u5e73\u5b89\u94f6\u884c\u65e5\u7ebf\u6570\u636e \u6587\u4ef6\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a import rqdatac rqdatac.init() print(rqdatac.get_price(\"000001.XSHE\")) \u8fd0\u884crqalpha-plus \u751f\u6210\u6837\u4f8b\u7b56\u7565\u5e76\u8fd0\u884c \u8fd0\u884c\u6837\u4f8b\u7b56\u7565\u9700\u8981\u7684\u547d\u4ee4\u5982\u4e0b (\u5047\u8bbeconda\u73af\u5883\u540d\u4e3apy35) conda activate py35 pip install rqsdk -i https://pypi.douban.com/simple/ rqsdk install rqalpha-plus rqsdk download-data rqalpha-plus examples rqalpha-plus run -f examples/buy_and_hold.py -s 2018-01-01 -e 2018-05-31 -fq 1m --plot --account stock 1000000 \u547d\u4ee4\u5bf9\u5e94\u4f5c\u7528\u5982\u4e0b\uff1a \u6fc0\u6d3b\u540d\u4e3a py35 \u7684 conda\u73af\u5883\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8f93\u5165conda create -n py35 \u5b89\u88c5 rqsdk\u548crqalpha-plus \u751f\u6210\u6837\u4f8b\u7b56\u7565\u6587\u4ef6\u5939 \u4f7f\u7528 examples \u7684 buy_and_hold.py \u7b56\u7565\u542f\u52a8\u56de\u6d4b","title":"\u4f7f\u7528 VS Code \u7f16\u5199\u4ee3\u7801"},{"location":"%E9%9A%8F%E7%AC%94/PyCharm%E5%8F%8Avscode%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AERQSDK%E4%B8%8A%E6%89%8B%20%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/#debug","text":"launch.json\u914d\u7f6e\u5982\u4e0b { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"Python: \u6a21\u5757\", \"type\": \"python\", \"request\": \"launch\", \"module\": \"rqalpha-plus\", \"args\": [\"run\", \"-f\", \"examples\\\\buy_and_hold.py\", \"-s\", \"2018-01-01\", \"-e\", \"2018-05-31\", \"-fq\", \"1m\", \"--plot\", \"--account\", \"stock\", \"1000000\"] } ] }","title":"\u7528debug\u65b9\u5f0f\u8fd0\u884c\u56de\u6d4b"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/","text":"RQPro2.0\u672c\u5730\u73af\u5883\u4e0eVS code \u96c6\u6210 \u00b6 RQPro2.0 \u4e0eVS code\u7684\u96c6\u6210 \u5b89\u88c5Python Extensions \u00b6 \u70b9\u51fb install \u5b89\u88c5 \u5b89\u88c5\u540e\u91cd\u542fVS code \u83b7\u53d6rqpro python\u73af\u5883\u8def\u5f84 \u00b6 \u672c\u673a\u7684rqalpha python \u73af\u5883\u8def\u5f84\u4e3a D:\\Program Files\\RQPro\\rqalpha\\python.exe \u65b0\u5efa\u9879\u76ee \u00b6 \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 \u5c06\u6587\u4ef6\u5939\u62d6\u5165\u5230VS code \u7a97\u53e3 \u521b\u5efa\u4e00\u4e2a.py\u6587\u4ef6 \u914d\u7f6epython\u73af\u5883 \u00b6 \u5982\u679c\u4e0d\u80fd\u9009\u62e9\u6b64python \u00b6 \u9700\u8981\u505a\u5982\u4e0b\u4fee\u6539 1. \u9009\u62e9\u9879\u76ee\u6587\u4ef6\u5939\u4e0b .vscode \u6587\u4ef6\u5939\u4e0b settings.json \u6587\u4ef6 \uff08\u6ca1\u6709\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u5219\u521b\u5efa\uff09 2. \u5c06\u201dpython.pythonPath\u201d\u7684\u503c\u6539\u4e3a python.exe \u8def\u5f84\uff08\u6ce8\u610f\u53cc\u53cd\u659c\u6760\u8f6c\u4e49\uff09 \u4f7f\u7528 rqdatac \u4e0e rqfactor \u00b6 \u8f93\u5165\u4e0b\u5217\u4ee3\u7801 #!/usr/bin/python3 # encoding: utf-8 import pandas as pd import rqdatac import rqfactor from rqfactor.execute.engine_data_source import FactorEngineDataSource from rqfactor.engine import FactorExecutionEngine rqdatac.init() # \u9700\u8981\u8d26\u53f7\u5bc6\u7801 \u8bf7\u53c2\u7167rqdata\u6587\u6863 data_source_path = r'D:\\data\\rqpro\\bundle' # RQPro2.0 - \u4e2a\u4eba\u8bbe\u7f6e - \u6570\u636e\u4e0b\u8f7d\u8def\u5f84 _engine_data_source = FactorEngineDataSource(data_source_path) engine = FactorExecutionEngine(_engine_data_source) factor = rqfactor.Factor('close') order_book_ids = rqdatac.index_components('000300.XSHG') end_date = pd.Timestamp('20190910') result = engine.get_multiple(factor, order_book_ids, end_date, 1) print(result.all()) \u70b9\u51fb\u53f3\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\u5f62\u8fd0\u884cpython\u4ee3\u7801 \u8fd0\u884cRQAalpha\u56de\u6d4b \u00b6 \u5728 .vscode \u6587\u4ef6\u5939\u4e0b launch.json \u4e2d\u8f93\u5165\u5982\u4e0b\u4ee3\u7801: { // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"rqalpha_plus\", \"type\": \"python\", \"request\": \"launch\", \"module\": \"rqalpha_plus\", \"args\": [ \"run\", \"-s\", \"2015-03-01\", \"-e\", \"2015-05-01\", \"-f\", \"${file}\", \"--account\", \"stock\", \"10000\", \"--frequency\", \"1d\", \"--benchmark\", \"000300.XSHG\", \"--commission-multiplier\", \"1\", \"--margin-multiplier\", \"1\", \"--matching-type\", \"current_bar\", \"--slippage\", \"0\" ], \"env\": {\"PYTHONIOENCODING\": \"utf-8\"} } ] } \u9009\u62e9\u7b56\u7565\u6587\u4ef6 \u4f7f\u7528debug\u6a21\u5f0f\u8fd0\u884c","title":"RQPro2.0\u672c\u5730\u73af\u5883\u4e0eVS code \u96c6\u6210"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#rqpro20vs-code","text":"RQPro2.0 \u4e0eVS code\u7684\u96c6\u6210","title":"RQPro2.0\u672c\u5730\u73af\u5883\u4e0eVS code \u96c6\u6210"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#python-extensions","text":"\u70b9\u51fb install \u5b89\u88c5 \u5b89\u88c5\u540e\u91cd\u542fVS code","title":"\u5b89\u88c5Python Extensions"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#rqpro-python","text":"\u672c\u673a\u7684rqalpha python \u73af\u5883\u8def\u5f84\u4e3a D:\\Program Files\\RQPro\\rqalpha\\python.exe","title":"\u83b7\u53d6rqpro python\u73af\u5883\u8def\u5f84"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#_1","text":"\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 \u5c06\u6587\u4ef6\u5939\u62d6\u5165\u5230VS code \u7a97\u53e3 \u521b\u5efa\u4e00\u4e2a.py\u6587\u4ef6","title":"\u65b0\u5efa\u9879\u76ee"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#python","text":"","title":"\u914d\u7f6epython\u73af\u5883"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#python_1","text":"\u9700\u8981\u505a\u5982\u4e0b\u4fee\u6539 1. \u9009\u62e9\u9879\u76ee\u6587\u4ef6\u5939\u4e0b .vscode \u6587\u4ef6\u5939\u4e0b settings.json \u6587\u4ef6 \uff08\u6ca1\u6709\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u5219\u521b\u5efa\uff09 2. \u5c06\u201dpython.pythonPath\u201d\u7684\u503c\u6539\u4e3a python.exe \u8def\u5f84\uff08\u6ce8\u610f\u53cc\u53cd\u659c\u6760\u8f6c\u4e49\uff09","title":"\u5982\u679c\u4e0d\u80fd\u9009\u62e9\u6b64python"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#rqdatac-rqfactor","text":"\u8f93\u5165\u4e0b\u5217\u4ee3\u7801 #!/usr/bin/python3 # encoding: utf-8 import pandas as pd import rqdatac import rqfactor from rqfactor.execute.engine_data_source import FactorEngineDataSource from rqfactor.engine import FactorExecutionEngine rqdatac.init() # \u9700\u8981\u8d26\u53f7\u5bc6\u7801 \u8bf7\u53c2\u7167rqdata\u6587\u6863 data_source_path = r'D:\\data\\rqpro\\bundle' # RQPro2.0 - \u4e2a\u4eba\u8bbe\u7f6e - \u6570\u636e\u4e0b\u8f7d\u8def\u5f84 _engine_data_source = FactorEngineDataSource(data_source_path) engine = FactorExecutionEngine(_engine_data_source) factor = rqfactor.Factor('close') order_book_ids = rqdatac.index_components('000300.XSHG') end_date = pd.Timestamp('20190910') result = engine.get_multiple(factor, order_book_ids, end_date, 1) print(result.all()) \u70b9\u51fb\u53f3\u4e0a\u89d2\u7eff\u8272\u4e09\u89d2\u5f62\u8fd0\u884cpython\u4ee3\u7801","title":"\u4f7f\u7528 rqdatac \u4e0e rqfactor"},{"location":"%E9%9A%8F%E7%AC%94/RQPro2.0%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%B8%8EVS%20code%20%E9%9B%86%E6%88%90/#rqaalpha","text":"\u5728 .vscode \u6587\u4ef6\u5939\u4e0b launch.json \u4e2d\u8f93\u5165\u5982\u4e0b\u4ee3\u7801: { // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"rqalpha_plus\", \"type\": \"python\", \"request\": \"launch\", \"module\": \"rqalpha_plus\", \"args\": [ \"run\", \"-s\", \"2015-03-01\", \"-e\", \"2015-05-01\", \"-f\", \"${file}\", \"--account\", \"stock\", \"10000\", \"--frequency\", \"1d\", \"--benchmark\", \"000300.XSHG\", \"--commission-multiplier\", \"1\", \"--margin-multiplier\", \"1\", \"--matching-type\", \"current_bar\", \"--slippage\", \"0\" ], \"env\": {\"PYTHONIOENCODING\": \"utf-8\"} } ] } \u9009\u62e9\u7b56\u7565\u6587\u4ef6 \u4f7f\u7528debug\u6a21\u5f0f\u8fd0\u884c","title":"\u8fd0\u884cRQAalpha\u56de\u6d4b"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/","text":"VR\u6e38\u620f\u611f\u60f3 \u00b6 oculus quest2 \u672c\u6587\u4e2d\u7b80\u79f0 OC2 \u95ee\u9898\u7531\u6765 \u00b6 \u6700\u8fd1\u53d1\u884c\u7684oculus quest2\u7684\u4ef7\u683c\u5df2\u7ecf\u52302k+\u4e86\uff0c\u5e7f\u544a\u94fa\u5929\u76d6\u5730\u7684\u3002 \u5bf9\u4e8e\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u8ba9\u6211\u60f3\u8d77\u4e86\u5c0f\u7c73\u53d1\u5e03\u7b2c\u4e00\u90e8\u624b\u673a\u65f6\uff0c1999\u4ef7\u683c\u51fa\u6765\u7684\u90a3\u4e00\u523b\u3002 \u6b64\u65f6\uff0c\u540c\u7b49\u4ef7\u4f4d\u5176\u4ed6\u624b\u673a\u5356\u4e0d\u51fa\u53bb\uff0c\u5927\u5bb6\u90fd\u5f97\u628a\u624b\u673a\u4ef7\u683c\u6253\u4e0b\u6765 \u624b\u673a\u884c\u4e1a\u5f00\u59cb\u5185\u5377 \u3002 OC2\u51fa\u73b0\u4e86199\u7f8e\u5143\uff0c\u8fd9\u4e2a\u548c\u5c0f\u7c731999RMB\u7684\u5c0f\u7c731\u4e00\u6837\u7684\u611f\u89c9\uff0c\u611f\u89c9VR\u786c\u4ef6\u4e5f\u53d1\u5c55\u6210\u719f\uff0c\u8981\u6253\u4ef7\u683c\u6218\u7684\u65f6\u5019\u4e86\u3002\u77e5\u4e4e\u4e0a\u8bf4OC2\u5bf9\u6807\u7684\u662fNS\u3002\u786e\u5b9e2k\u591a \u4e70\u4e2aNS\u6e38\u620f\u8fd8\u5f97\u82b1\u5f88\u591a\u94b1\uff0cOC2\u65e0\u9650\u8fde\u63a5\u7535\u8111\u73a9Steam\u4e0a\u7684\u6e38\u620f\u8981\u723d\u5f97\u591a\u3002 OC2\u76ee\u524d\u6211\u89c9\u5f97\u7684\u4f18\u70b9\uff1a 2\u57fa\u4e8e\u56db\u4e2a\u6444\u50cf\u5934\u5b9a\u4f4d\uff0c\u4e0d\u518d\u9700\u8981\u5b9a\u4f4d\u4f20\u611f\u5668\u3002 \u652f\u6301\u65e0\u7ebf\u4e32\u6d41 \u65e0\u9700\u7ebf\u6750\u5c31\u80fd\u4e0aSteam\u73a9\u6e38\u620f\uff08\u5f97\u8981\u597dwifi\uff09\u3002 \u81ea\u5e26\u6e38\u620f\u5e73\u53f0\uff0c\u6ca1\u5f97\u663e\u5361\u4e00\u6837\u80fd\u73a9\u3002 \u6240\u4ee5\uff0c\u5f53\u524d\u7684VR\uff0c2k\u5c31\u5f97\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u4f53\u9a8c\u4e86\uff0c\u4e5f\u4e0d\u9700\u8981\u592a\u591a\u573a\u5730\uff0c\u5f53\u7136\uff0c \u5f97\u4f1a\u7528\u68af\u5b50 \u3002 \u8bbe\u5907\u4ef7\u683c\u4e0b\u6765\u4e86\uff0c\u90a3\u4e48\u5e94\u7528\u5e02\u573a\u5219\u4f1a\u66f4\u5927\uff0c\u73a9\u5bb6\u6709\u66f4\u591a\u8d2d\u4e70\u6e38\u620f\uff08\u73a9\u76d7\u7248\uff09\u7684\u673a\u4f1a\u3002 VR\u76ee\u524d\u8fd8\u6ca1\u51fa\u73b0\u5185\u5377\uff0c\u5148\u5230\u5148\u5360\u4f4d\uff0cOC2\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u6253\u7834\u5e02\u573a\u7684\u5546\u5bb6\uff0c\u9a6c\u4e0a\u786c\u4ef6\u4f1a\u4ea7\u751f\u5185\u5377\u73b0\u8c61\uff0c\u7136\u540eVR\u8f6f\u4ef6\u4e1a\u84ec\u52c3\u53d1\u5c55\u3002\u76ee\u524d\u6211\u89c9\u5f97\u662f\u4e2a\u98ce\u53e3\u3002 HOW TO DO \u00b6 \u98ce\u53e3\u6765\u4e86\uff0c\u5f53\u7136\u60f3\u8fdb\u53bb\u8d5a\u94b1\uff0c\u8981\u4e48\u6253\u5de5\uff0c\u8981\u4e48\u63d0\u4f9b\u6253\u5de5\u3002 \u6253\u5de5 \u00b6 \u9996\u5148\uff0c\u672c\u4eba\u53ea\u60f3\u505apython\u76f8\u5173\u7684\u540e\u7aef\u3002 \u5176\u6b21\uff0c\u8fd8\u60f3 \u9003\u79bb996\u73af\u5883 \u3002 \u5728\u6df1\u5733\u627e\u4e86\u627e\uff0cVR\u6e38\u620f\u516c\u53f8\u53ea\u6709\u4e09\u56db\u5bb6\uff0c\u4e14\u57fa\u672c\u4e0a\u4e0d\u8981python\u3002(\u8fd8\u5728\u7ee7\u7eed\u627e\u2026) Another choice \u00b6 \u673a\u7f18\u5de7\u5408\u4e0b\uff0c\u548c\u4e00\u4e2a\u6e38\u620f\u8fd0\u8425\u5927\u4f6c\u804a\u4e86\u804a\u3002\u5927\u4f6c\u76ee\u524d\u5728\u5f00VR\u4f53\u9a8c\u5e97(\u636e\u8bf4\u662f\u5728\u8d54\u94b1)\u3002 \u4ee5\u4e0b\u662f\u5927\u4f6c\u7684\u89c2\u70b9\uff1a \u5728\u6df1\u5733\uff0c\u6240\u6709\u7684\u4e92\u8054\u7f51\u4f01\u4e1a\u79bb\u4e0d\u5f00\u817e\u8baf\u963f\u91cc\uff0c\u57fa\u672c\u4e0a\u80cc\u540e\u90fd\u817e\u8baf\u548c\u963f\u91cc\u7684\u6295\u8d44\u3002\u90a3\u4e48\u505aIT\u7684\uff0c\u6700\u7ec8\u76ee\u6807\u6709\u4e24\u4e2a\uff0c\u8981\u4e48\u8fdb\u5165\u963f\u91cc\u817e\u8baf\uff0c\u8981\u4e48\u516c\u53f8\u88ab\u963f\u91cc\u817e\u8baf\u6536\u8d2d\uff0c\u4f3c\u4e4e\u6ca1\u6709\u522b\u7684\u8def\u8d70(\u6709\u7684\u8bdd\u8bf7\u7559\u8a00)\u3002 \u8003\u8651\u81ea\u5df1\u505a\u5de5\u4f5c\u5ba4 or \u8fdb\u817e\u8baf\u963f\u91cc\uff0c\u4e4b\u524d\u7684\u5de5\u4f5c\u5ba4\u6563\u4f19\uff0c\u4f18\u79c0\u7684\u53bb\u4e86\u817e\u8baf\uff0c\u4e0d\u4f18\u79c0\u7684\u7559\u5728\u4e86\u5e02\u573a\u3002 \u89c9\u5f97\u81ea\u5df1\u80fd\u884c\uff0c\u4ece\u817e\u8baf\u51fa\u6765\u521b\u4e1a\u7684\uff0c\u6700\u540e\u8fd8\u662f\u8981\u4e48\u88ab\u817e\u8baf\u6295\u8d44\u63a7\u80a1\uff0c\u8981\u4e48\u88ab\u817e\u8baf\u6295\u8d44\u63a7\u80a1\u7684\u516c\u53f8\u6253\u8d25\u3002 \u5927\u90e8\u5206\u4ece\u817e\u8baf\u51fa\u6765\u7684\u6df7\u7684\u597d\u50cf\u4e0d\u548b\u6837\u3002 \u5982\u679c\u81ea\u5df1\u6709\u95f2\u94b1\uff0c\u53ef\u4ee5\u8003\u8651\u627e\u51e0\u4e2a\u4f19\u4f34\u5408\u4f19\u505a\u6e38\u620f\u3002 \u5148\u4e86\u89e3\u4e0b\u8fd9\u51e0\u4e2a\u6e38\u620f\uff1a vr\u548c\u952e\u9f20\u540c\u65f6\u652f\u6301\u7684\u6e38\u620f payday2 \u4e09\u6d88\u505a\u5f97\u975e\u5e38\u68d2\u7684\u6e38\u620f mirro \uff08\u81ea\u5e26\u5b98\u7f5118h\u8865\u4e01\uff09 \u7528Unity\u6216\u8005 RPG maker\u505a\u4e00\u70b9\u81ea\u5df1\u7684\u6210\u54c1\u3002(\u865a\u5e7b4\u8981\u6536\u8d39) \u76ee\u524d\u60f3\u6cd5 \u00b6 \u8003\u8651\u6df1\u5733\u7684vr\u516c\u53f8 \u72ec\u7acb\u6e38\u620f\u5de5\u4f5c\u5ba4 \u505a\u6210\u4e00\u4e2a\u6e38\u620f\u540e\uff0c\u4e0asteam\u5e73\u53f0\u3002\u8bc1\u660e\u81ea\u5df1 \u3002(\u8003\u8651\u53cd\u7740\u6284 \u628a\u540c\u6837\u7684\u6a21\u5f0f\u6284\u5230\u4e0d\u540c\u9886\u57df) ps, \u7f51\u4e0a\u6709\u8bf4python\u80fd\u5f00\u53d1unity 3d\u7684\u7a0b\u5e8f\uff0c\u6211\u53ea\u627e\u5230\u4e86python2\u7684\u5f00\u53d1\u65b9\u5f0f\u3002 \u53c2\u8003\u3002 ps.\u516c\u53f8\u9009\u62e9\u8303\u56f4\u5c0f\u7684\u8bdd\uff0c\u53ef\u4ee5\u9009\u62e9\u7cbe\u6295\u3002 \u5927\u6982\u63a8\u8350\u4ee5\u4e0b\u505a\u6cd5 \u5e26\u81ea\u8350\u4fe1\u3002 \u4e86\u89e3\u8fd9\u4e2a\u516c\u53f8\u5185\u90e8\u67b6\u6784\u548c\u4eba\u5458\u4fe1\u606f\u3002 \u6309\u5bf9\u65b9\u9700\u6c42\u5199\u7b80\u5386\u3002 \u627e\u5230\u5185\u90e8\u4eba\u5458\u5185\u63a8\u3002","title":"VR\u6e38\u620f\u611f\u60f3"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#vr","text":"oculus quest2 \u672c\u6587\u4e2d\u7b80\u79f0 OC2","title":"VR\u6e38\u620f\u611f\u60f3"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#_1","text":"\u6700\u8fd1\u53d1\u884c\u7684oculus quest2\u7684\u4ef7\u683c\u5df2\u7ecf\u52302k+\u4e86\uff0c\u5e7f\u544a\u94fa\u5929\u76d6\u5730\u7684\u3002 \u5bf9\u4e8e\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u8ba9\u6211\u60f3\u8d77\u4e86\u5c0f\u7c73\u53d1\u5e03\u7b2c\u4e00\u90e8\u624b\u673a\u65f6\uff0c1999\u4ef7\u683c\u51fa\u6765\u7684\u90a3\u4e00\u523b\u3002 \u6b64\u65f6\uff0c\u540c\u7b49\u4ef7\u4f4d\u5176\u4ed6\u624b\u673a\u5356\u4e0d\u51fa\u53bb\uff0c\u5927\u5bb6\u90fd\u5f97\u628a\u624b\u673a\u4ef7\u683c\u6253\u4e0b\u6765 \u624b\u673a\u884c\u4e1a\u5f00\u59cb\u5185\u5377 \u3002 OC2\u51fa\u73b0\u4e86199\u7f8e\u5143\uff0c\u8fd9\u4e2a\u548c\u5c0f\u7c731999RMB\u7684\u5c0f\u7c731\u4e00\u6837\u7684\u611f\u89c9\uff0c\u611f\u89c9VR\u786c\u4ef6\u4e5f\u53d1\u5c55\u6210\u719f\uff0c\u8981\u6253\u4ef7\u683c\u6218\u7684\u65f6\u5019\u4e86\u3002\u77e5\u4e4e\u4e0a\u8bf4OC2\u5bf9\u6807\u7684\u662fNS\u3002\u786e\u5b9e2k\u591a \u4e70\u4e2aNS\u6e38\u620f\u8fd8\u5f97\u82b1\u5f88\u591a\u94b1\uff0cOC2\u65e0\u9650\u8fde\u63a5\u7535\u8111\u73a9Steam\u4e0a\u7684\u6e38\u620f\u8981\u723d\u5f97\u591a\u3002 OC2\u76ee\u524d\u6211\u89c9\u5f97\u7684\u4f18\u70b9\uff1a 2\u57fa\u4e8e\u56db\u4e2a\u6444\u50cf\u5934\u5b9a\u4f4d\uff0c\u4e0d\u518d\u9700\u8981\u5b9a\u4f4d\u4f20\u611f\u5668\u3002 \u652f\u6301\u65e0\u7ebf\u4e32\u6d41 \u65e0\u9700\u7ebf\u6750\u5c31\u80fd\u4e0aSteam\u73a9\u6e38\u620f\uff08\u5f97\u8981\u597dwifi\uff09\u3002 \u81ea\u5e26\u6e38\u620f\u5e73\u53f0\uff0c\u6ca1\u5f97\u663e\u5361\u4e00\u6837\u80fd\u73a9\u3002 \u6240\u4ee5\uff0c\u5f53\u524d\u7684VR\uff0c2k\u5c31\u5f97\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u4f53\u9a8c\u4e86\uff0c\u4e5f\u4e0d\u9700\u8981\u592a\u591a\u573a\u5730\uff0c\u5f53\u7136\uff0c \u5f97\u4f1a\u7528\u68af\u5b50 \u3002 \u8bbe\u5907\u4ef7\u683c\u4e0b\u6765\u4e86\uff0c\u90a3\u4e48\u5e94\u7528\u5e02\u573a\u5219\u4f1a\u66f4\u5927\uff0c\u73a9\u5bb6\u6709\u66f4\u591a\u8d2d\u4e70\u6e38\u620f\uff08\u73a9\u76d7\u7248\uff09\u7684\u673a\u4f1a\u3002 VR\u76ee\u524d\u8fd8\u6ca1\u51fa\u73b0\u5185\u5377\uff0c\u5148\u5230\u5148\u5360\u4f4d\uff0cOC2\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5f00\u59cb\uff0c\u6253\u7834\u5e02\u573a\u7684\u5546\u5bb6\uff0c\u9a6c\u4e0a\u786c\u4ef6\u4f1a\u4ea7\u751f\u5185\u5377\u73b0\u8c61\uff0c\u7136\u540eVR\u8f6f\u4ef6\u4e1a\u84ec\u52c3\u53d1\u5c55\u3002\u76ee\u524d\u6211\u89c9\u5f97\u662f\u4e2a\u98ce\u53e3\u3002","title":"\u95ee\u9898\u7531\u6765"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#how-to-do","text":"\u98ce\u53e3\u6765\u4e86\uff0c\u5f53\u7136\u60f3\u8fdb\u53bb\u8d5a\u94b1\uff0c\u8981\u4e48\u6253\u5de5\uff0c\u8981\u4e48\u63d0\u4f9b\u6253\u5de5\u3002","title":"HOW TO DO"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#_2","text":"\u9996\u5148\uff0c\u672c\u4eba\u53ea\u60f3\u505apython\u76f8\u5173\u7684\u540e\u7aef\u3002 \u5176\u6b21\uff0c\u8fd8\u60f3 \u9003\u79bb996\u73af\u5883 \u3002 \u5728\u6df1\u5733\u627e\u4e86\u627e\uff0cVR\u6e38\u620f\u516c\u53f8\u53ea\u6709\u4e09\u56db\u5bb6\uff0c\u4e14\u57fa\u672c\u4e0a\u4e0d\u8981python\u3002(\u8fd8\u5728\u7ee7\u7eed\u627e\u2026)","title":"\u6253\u5de5"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#another-choice","text":"\u673a\u7f18\u5de7\u5408\u4e0b\uff0c\u548c\u4e00\u4e2a\u6e38\u620f\u8fd0\u8425\u5927\u4f6c\u804a\u4e86\u804a\u3002\u5927\u4f6c\u76ee\u524d\u5728\u5f00VR\u4f53\u9a8c\u5e97(\u636e\u8bf4\u662f\u5728\u8d54\u94b1)\u3002 \u4ee5\u4e0b\u662f\u5927\u4f6c\u7684\u89c2\u70b9\uff1a \u5728\u6df1\u5733\uff0c\u6240\u6709\u7684\u4e92\u8054\u7f51\u4f01\u4e1a\u79bb\u4e0d\u5f00\u817e\u8baf\u963f\u91cc\uff0c\u57fa\u672c\u4e0a\u80cc\u540e\u90fd\u817e\u8baf\u548c\u963f\u91cc\u7684\u6295\u8d44\u3002\u90a3\u4e48\u505aIT\u7684\uff0c\u6700\u7ec8\u76ee\u6807\u6709\u4e24\u4e2a\uff0c\u8981\u4e48\u8fdb\u5165\u963f\u91cc\u817e\u8baf\uff0c\u8981\u4e48\u516c\u53f8\u88ab\u963f\u91cc\u817e\u8baf\u6536\u8d2d\uff0c\u4f3c\u4e4e\u6ca1\u6709\u522b\u7684\u8def\u8d70(\u6709\u7684\u8bdd\u8bf7\u7559\u8a00)\u3002 \u8003\u8651\u81ea\u5df1\u505a\u5de5\u4f5c\u5ba4 or \u8fdb\u817e\u8baf\u963f\u91cc\uff0c\u4e4b\u524d\u7684\u5de5\u4f5c\u5ba4\u6563\u4f19\uff0c\u4f18\u79c0\u7684\u53bb\u4e86\u817e\u8baf\uff0c\u4e0d\u4f18\u79c0\u7684\u7559\u5728\u4e86\u5e02\u573a\u3002 \u89c9\u5f97\u81ea\u5df1\u80fd\u884c\uff0c\u4ece\u817e\u8baf\u51fa\u6765\u521b\u4e1a\u7684\uff0c\u6700\u540e\u8fd8\u662f\u8981\u4e48\u88ab\u817e\u8baf\u6295\u8d44\u63a7\u80a1\uff0c\u8981\u4e48\u88ab\u817e\u8baf\u6295\u8d44\u63a7\u80a1\u7684\u516c\u53f8\u6253\u8d25\u3002 \u5927\u90e8\u5206\u4ece\u817e\u8baf\u51fa\u6765\u7684\u6df7\u7684\u597d\u50cf\u4e0d\u548b\u6837\u3002 \u5982\u679c\u81ea\u5df1\u6709\u95f2\u94b1\uff0c\u53ef\u4ee5\u8003\u8651\u627e\u51e0\u4e2a\u4f19\u4f34\u5408\u4f19\u505a\u6e38\u620f\u3002 \u5148\u4e86\u89e3\u4e0b\u8fd9\u51e0\u4e2a\u6e38\u620f\uff1a vr\u548c\u952e\u9f20\u540c\u65f6\u652f\u6301\u7684\u6e38\u620f payday2 \u4e09\u6d88\u505a\u5f97\u975e\u5e38\u68d2\u7684\u6e38\u620f mirro \uff08\u81ea\u5e26\u5b98\u7f5118h\u8865\u4e01\uff09 \u7528Unity\u6216\u8005 RPG maker\u505a\u4e00\u70b9\u81ea\u5df1\u7684\u6210\u54c1\u3002(\u865a\u5e7b4\u8981\u6536\u8d39)","title":"Another choice"},{"location":"%E9%9A%8F%E7%AC%94/VR%E6%B8%B8%E6%88%8F%E6%84%9F%E6%83%B3/#_3","text":"\u8003\u8651\u6df1\u5733\u7684vr\u516c\u53f8 \u72ec\u7acb\u6e38\u620f\u5de5\u4f5c\u5ba4 \u505a\u6210\u4e00\u4e2a\u6e38\u620f\u540e\uff0c\u4e0asteam\u5e73\u53f0\u3002\u8bc1\u660e\u81ea\u5df1 \u3002(\u8003\u8651\u53cd\u7740\u6284 \u628a\u540c\u6837\u7684\u6a21\u5f0f\u6284\u5230\u4e0d\u540c\u9886\u57df) ps, \u7f51\u4e0a\u6709\u8bf4python\u80fd\u5f00\u53d1unity 3d\u7684\u7a0b\u5e8f\uff0c\u6211\u53ea\u627e\u5230\u4e86python2\u7684\u5f00\u53d1\u65b9\u5f0f\u3002 \u53c2\u8003\u3002 ps.\u516c\u53f8\u9009\u62e9\u8303\u56f4\u5c0f\u7684\u8bdd\uff0c\u53ef\u4ee5\u9009\u62e9\u7cbe\u6295\u3002 \u5927\u6982\u63a8\u8350\u4ee5\u4e0b\u505a\u6cd5 \u5e26\u81ea\u8350\u4fe1\u3002 \u4e86\u89e3\u8fd9\u4e2a\u516c\u53f8\u5185\u90e8\u67b6\u6784\u548c\u4eba\u5458\u4fe1\u606f\u3002 \u6309\u5bf9\u65b9\u9700\u6c42\u5199\u7b80\u5386\u3002 \u627e\u5230\u5185\u90e8\u4eba\u5458\u5185\u63a8\u3002","title":"\u76ee\u524d\u60f3\u6cd5"},{"location":"%E9%9A%8F%E7%AC%94/cmder%20%E9%80%9A%E8%BF%87%E8%B7%B3%E8%BD%AC%E6%9C%BA%20rz%20sz%20%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/","text":"cmder \u901a\u8fc7\u8df3\u8f6c\u673a rz sz \u4f20\u8f93\u6587\u4ef6 \u00b6 \u53c2\u8003 \u00b6 linux \u673a\u5668\u4e4b\u95f4 zssh, rz, sz\u4e92\u76f8\u4f20\u8f93 cmder - issues - 1452 \u516c\u53f8\u8981\u6c42\u8fde\u63a5\u670d\u52a1\u5668\u5fc5\u987b\u4f7f\u7528\u8df3\u8f6c\u673a finalshell\u7684\u81ea\u5e26\u6587\u4ef6(\u7c7b\u4f3cwinScp)\u4f20\u8f93\u7528\u4e0d\u4e86\u4e86 \u56e0\u4e3a\u7528\u7684cmd\u4e00\u76f4\u662fcmder \u754c\u9762\u633a\u597d\u770b\u7684 \u4e0d\u60f3\u6362 \u518d\u52a0\u4e0a\u7535\u8111\u88c5\u4e86Ubuntu\u5b50\u7cfb\u7edf \u6709\u4e86\u4ee5\u4e0b\u89e3\u51b3\u65b9\u6848 \u9996\u5148\u627e\u4e2a\u6559\u7a0b\u4e0b\u4e2acmder\uff0c\u7ed9windows 10\u7684\u673a\u5668\u88c5\u4e0aUbuntu\u5b50\u7cfb\u7edf\u3002 \u5728Ubuntu\u5b50\u7cfb\u7edf\u4e0a\u5b89\u88c5 zssh \u548c\u4f7f\u7528ssh\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u6253\u547d\u4ee4\u65f6\uff0c\u53d8\u6210\u4e86zssh #zssh [root@192.168.1.1](mailto:root@192.168.1.1) \u4e0a\u4f20\u6587\u4ef6 \u597d\u4e86\uff0c\u5728\u8fdb\u5165\u540e\uff0c\u4f60\u9700\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u8bdd\u3002\u5148 ctrl+@ zssh > //\u8fd9\u91cc\u5207\u6362\u5230\u4e86\u672c\u5730\u673a\u5668 zssh>pwd //\u770b\u4e00\u4e0b\u672c\u5730\u673a\u5668\u7684\u76ee\u5f55\u5728\u90a3 zssh>ls //\u770b\u4e00\u4e0b\u6709\u90a3\u4e9b\u6587\u4ef6 zssh>sz 123.txt //\u4e0a\u4f20\u672c\u5730\u673a\u5668\u7684\u5f53\u524d\u76ee\u5f55\u7684123.txt\u5230\u8fdc\u7a0b\u673a\u5668\u7684\u5f53\u524d\u76ee\u5f55 \u4e0b\u8f7d\u6587\u4ef6 root@192.168.1.1 > sz filename //\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a,\u542f\u52a8sz, \u51c6\u5907\u53d1\u9001 // \u770b\u5230\u4e00\u5806\u4e71\u7801 \u7136\u540e\u518d #ctrl+@ zssh > pwd //\u770b\u770b\u5728\u90a3\u4e2a\u76ee\u5f55,cd \u5207\u6362\u5230\u5408\u9002\u7684\u76ee\u5f55 zssh > rz //\u63a5\u4f4f\u5bf9\u5e94\u7684\u6587\u4ef6","title":"cmder \u901a\u8fc7\u8df3\u8f6c\u673a rz sz \u4f20\u8f93\u6587\u4ef6"},{"location":"%E9%9A%8F%E7%AC%94/cmder%20%E9%80%9A%E8%BF%87%E8%B7%B3%E8%BD%AC%E6%9C%BA%20rz%20sz%20%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/#cmder-rz-sz","text":"","title":"cmder \u901a\u8fc7\u8df3\u8f6c\u673a rz sz \u4f20\u8f93\u6587\u4ef6"},{"location":"%E9%9A%8F%E7%AC%94/cmder%20%E9%80%9A%E8%BF%87%E8%B7%B3%E8%BD%AC%E6%9C%BA%20rz%20sz%20%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/#_1","text":"linux \u673a\u5668\u4e4b\u95f4 zssh, rz, sz\u4e92\u76f8\u4f20\u8f93 cmder - issues - 1452 \u516c\u53f8\u8981\u6c42\u8fde\u63a5\u670d\u52a1\u5668\u5fc5\u987b\u4f7f\u7528\u8df3\u8f6c\u673a finalshell\u7684\u81ea\u5e26\u6587\u4ef6(\u7c7b\u4f3cwinScp)\u4f20\u8f93\u7528\u4e0d\u4e86\u4e86 \u56e0\u4e3a\u7528\u7684cmd\u4e00\u76f4\u662fcmder \u754c\u9762\u633a\u597d\u770b\u7684 \u4e0d\u60f3\u6362 \u518d\u52a0\u4e0a\u7535\u8111\u88c5\u4e86Ubuntu\u5b50\u7cfb\u7edf \u6709\u4e86\u4ee5\u4e0b\u89e3\u51b3\u65b9\u6848 \u9996\u5148\u627e\u4e2a\u6559\u7a0b\u4e0b\u4e2acmder\uff0c\u7ed9windows 10\u7684\u673a\u5668\u88c5\u4e0aUbuntu\u5b50\u7cfb\u7edf\u3002 \u5728Ubuntu\u5b50\u7cfb\u7edf\u4e0a\u5b89\u88c5 zssh \u548c\u4f7f\u7528ssh\u5b8c\u5168\u4e00\u6837\uff0c\u53ea\u662f\u6253\u547d\u4ee4\u65f6\uff0c\u53d8\u6210\u4e86zssh #zssh [root@192.168.1.1](mailto:root@192.168.1.1) \u4e0a\u4f20\u6587\u4ef6 \u597d\u4e86\uff0c\u5728\u8fdb\u5165\u540e\uff0c\u4f60\u9700\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u8bdd\u3002\u5148 ctrl+@ zssh > //\u8fd9\u91cc\u5207\u6362\u5230\u4e86\u672c\u5730\u673a\u5668 zssh>pwd //\u770b\u4e00\u4e0b\u672c\u5730\u673a\u5668\u7684\u76ee\u5f55\u5728\u90a3 zssh>ls //\u770b\u4e00\u4e0b\u6709\u90a3\u4e9b\u6587\u4ef6 zssh>sz 123.txt //\u4e0a\u4f20\u672c\u5730\u673a\u5668\u7684\u5f53\u524d\u76ee\u5f55\u7684123.txt\u5230\u8fdc\u7a0b\u673a\u5668\u7684\u5f53\u524d\u76ee\u5f55 \u4e0b\u8f7d\u6587\u4ef6 root@192.168.1.1 > sz filename //\u5728\u8fdc\u7a0b\u673a\u5668\u4e0a,\u542f\u52a8sz, \u51c6\u5907\u53d1\u9001 // \u770b\u5230\u4e00\u5806\u4e71\u7801 \u7136\u540e\u518d #ctrl+@ zssh > pwd //\u770b\u770b\u5728\u90a3\u4e2a\u76ee\u5f55,cd \u5207\u6362\u5230\u5408\u9002\u7684\u76ee\u5f55 zssh > rz //\u63a5\u4f4f\u5bf9\u5e94\u7684\u6587\u4ef6","title":"\u53c2\u8003"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/","text":"conda\u4e0erqdatac\u6559\u7a0b \u00b6 \u4ec0\u4e48\u662fconda \u00b6 conda\u662f\u4e00\u4e2a\u5305\u3001\u4f9d\u8d56\u3001\u73af\u5883\u7ba1\u7406\u5de5\u5177\u3002\u65b9\u4fbfpython\u95f4\u73af\u5883\u9694\u79bb\u3002 conda\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u5355\u72ec\u7684python\u73af\u5883\uff0c\u8fd9\u4e9bpython\u73af\u5883\u76f8\u4e92\u9694\u79bb\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2apython\u73af\u5883\u56e0\u4e3a\u6539\u52a8\u6216\u5176\u4ed6\u539f\u56e0\u9519\u8bef\u65f6\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6python\u73af\u5883\u3002 \u4e3a\u4ec0\u4e48\u88c5miniconda \u00b6 \u53c2\u8003 miniconda\u6e05\u534e\u6e90 \u4e0b\u8f7dminiconda \u00b6 \u53bb \u6e05\u534e\u6e90 \u4e0b\u8f7d\u4e00\u4e2aminiconda\u5e76\u5b89\u88c5 windows 4.8.2\u7248miniconda mac\u7248 4.8.2miniconda \u4e0b\u8f7d\u540e \u5982\u4e0b\u51e0\u4e2a\u9700\u8981\u624b\u52a8\u6539\u4e00\u4e0b \u5bf9\u4e8e\u90e8\u5206\u6ca1\u6709\u70b9\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u7684\u5c0f\u4f19\u4f34 \u8bf7\u6309\u5982\u4e0b\u64cd\u4f5c\u6dfb\u52a0 \u73af\u5883\u53d8\u91cf \u4f8b\u5982\u9ed8\u8ba4\u8def\u5f84\u4e3a\uff1a\u201dC:\\Users\\Administrator\\Miniconda3\u201d,\u90a3\u4e48\u9700\u8981\u6dfb\u52a0\u7684\u4e09\u4e2a\u8def\u5f84\u5219\u662f\uff1a 1\uff09C:\\Users\\Administrator\\Miniconda3\uff1b 2\uff09C:\\Users\\Administrator\\Miniconda3\\Scripts\uff1b 3\uff09C:\\Users\\Administrator\\Miniconda3\\Library\\bin \u7b2c\u4e00\u4e2a\u8def\u5f84\u662fMiniconda\u7684\u6839\u76ee\u5f55\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u8def\u5f84\uff01 * \u5982\u679c\u4f60\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u5df2\u7ecf\u5b58\u5728\u8fd9\u4e09\u4e2a\u8def\u5f84\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6dfb\u52a0\u4e86\u3002 \u8fd0\u884cminiconda \u00b6 \u53f3\u952e\u5f00\u59cb\u83dc\u5355\uff0c\u6253\u5f00 Windows PowerShell ( \u53ef\u9009 :\u8f93\u5165 conda activate base\u542f\u52a8base\u73af\u5883) \u6b64\u65f6\u5c31\u5df2\u7ecf\u6709python\u4e86 \u53ef\u4ee5\u8f93\u5165 conda --version \u770b\u4e00\u770b\u7248\u672c pip\u914d\u7f6e\u9ed8\u8ba4\u955c\u50cf\u6e90 \u00b6 pip \u9ed8\u8ba4\u4e0b\u8f7d\u6e90\u5728\u56fd\u5916\uff0c\u6539\u4e3a\u56fd\u5185\u540e\uff0c\u5b89\u88c5\u5404\u79cd\u4f9d\u8d56\u4f1a\u5feb\u5f88\u591a\u3002 * \u5728cmd\u547d\u4ee4\u884c\u4e0b \u8fd0\u884c\u5982\u4e0b\u547d\u4ee4 pip config set global.index-url http://pypi.douban.com/simple pip config set global.trusted-host pypi.douban.com \u4e0b\u8f7d\u4f7f\u7528rqdatac \u00b6 \u521b\u5efapython 3.8 \u865a\u62df\u73af\u5883 conda create -n py38 python=3.8.2 \u6fc0\u6d3b\u73af\u5883 conda activate py38 \u5b89\u88c5rqdatac pip install rqdatac \u5982\u679c\u5b89\u88c5\u4e86zsh \u8bf7\u6267\u884c\u547d\u4ee4 rehash \u5b89\u88c5ipython (ipython\u8865\u5168\u529f\u80fd\u975e\u5e38\u4eb2\u6c11) pip install ipython \u4f7f\u7528rqdatac \u00b6 \u8f93\u5165 ipython \u7136\u540e\u6309\u5982\u4e0b\u64cd\u4f5c import rqdatac rqdatac.init(\"\u624b\u673a\u53f7\",\"\u5bc6\u7801\") rqdatac.user.get_quota() #{'bytes_used': 742981, #\u5df2\u4f7f\u7528\u6d41\u91cf # 'bytes_limit': 52428800.0, # \u603b\u6d41\u91cf # 'remaining_days': 760, # \u5269\u4f59\u4f7f\u7528\u5929\u6570 # } rqdatac.all_instruments() # order_book_id symbol ... listed_date de_listed_date #0 M1901P3650 \u8c46\u7c951901\u6cbd3650 ... 2018-04-10 2018-12-07 #1 SR1901C4900 \u767d\u7cd61901\u8d2d4900 ... 2018-04-17 2018-11-26 #2 SR1907C5400 \u767d\u7cd61907\u8d2d5400 ... 2018-01-17 2019-05-27 #3 M1907P2900 \u8c46\u7c951907\u6cbd2900 ... 2018-07-17 2019-06-10 rqdatac.instruments(\"000001.XSHE\") # Instrument(order_book_id='000001.XSHE', industry_code='J66', market_tplus=1, symbol='\u5e73\u5b89\u94f6\u884c', special_type='Normal', exchange='XSHE', status='Active', type='CS', de_listed_date='0000-00-00', listed_date='1991-04-03', sector_code_name='\u91d1\u878d', abbrev_symbol='PAYH', sector_code='Financials', round_lot=100, trading_hours='09:31-11:30,13:01-15:00', board_type='MainBoard', industry_name='\u8d27\u5e01\u91d1\u878d\u670d\u52a1', citics_industry_code='40', citics_industry_name='\u94f6\u884c') rqdatac.get_price(\"000001.XSHE\") # num_trades limit_down volume ... high open low #date ... #2020-01-10 37440.0 15.11 58554845.0 ... 16.81 16.79 16.52 #2020-01-13 42233.0 15.02 87213336.0 ... 17.03 16.75 16.61 #2020-01-14 60290.0 15.29 130449366.0 ... 17.27 16.99 16.76 #2020-01-15 60129.0 15.08 85943912.0 ... 16.86 16.79 16.4 conda\u57fa\u672c\u64cd\u4f5c \u00b6 \u67e5\u770b\u7248\u672c\u4fe1\u606f conda --version \u66f4\u65b0conda conda update conda \u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883 conda create -n py38 python=3.8.2 \u6fc0\u6d3b\u65b0\u7684\u865a\u62df\u73af\u5883 conda activate py38 \u5217\u51fa\u73af\u5883\u4fe1\u606f conda env list \u9000\u51fa\u5f53\u524d\u73af\u5883 conda deactivate \u5220\u9664\u865a\u62df\u73af\u5883 conda remove --name py38 --all","title":"conda\u4e0erqdatac\u6559\u7a0b"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#condarqdatac","text":"","title":"conda\u4e0erqdatac\u6559\u7a0b"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#conda","text":"conda\u662f\u4e00\u4e2a\u5305\u3001\u4f9d\u8d56\u3001\u73af\u5883\u7ba1\u7406\u5de5\u5177\u3002\u65b9\u4fbfpython\u95f4\u73af\u5883\u9694\u79bb\u3002 conda\u53ef\u4ee5\u521b\u5efa\u8bb8\u591a\u5355\u72ec\u7684python\u73af\u5883\uff0c\u8fd9\u4e9bpython\u73af\u5883\u76f8\u4e92\u9694\u79bb\uff0c\u5f53\u5176\u4e2d\u4e00\u4e2apython\u73af\u5883\u56e0\u4e3a\u6539\u52a8\u6216\u5176\u4ed6\u539f\u56e0\u9519\u8bef\u65f6\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6python\u73af\u5883\u3002","title":"\u4ec0\u4e48\u662fconda"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#miniconda","text":"\u53c2\u8003 miniconda\u6e05\u534e\u6e90","title":"\u4e3a\u4ec0\u4e48\u88c5miniconda"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#miniconda_1","text":"\u53bb \u6e05\u534e\u6e90 \u4e0b\u8f7d\u4e00\u4e2aminiconda\u5e76\u5b89\u88c5 windows 4.8.2\u7248miniconda mac\u7248 4.8.2miniconda \u4e0b\u8f7d\u540e \u5982\u4e0b\u51e0\u4e2a\u9700\u8981\u624b\u52a8\u6539\u4e00\u4e0b \u5bf9\u4e8e\u90e8\u5206\u6ca1\u6709\u70b9\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u7684\u5c0f\u4f19\u4f34 \u8bf7\u6309\u5982\u4e0b\u64cd\u4f5c\u6dfb\u52a0 \u73af\u5883\u53d8\u91cf \u4f8b\u5982\u9ed8\u8ba4\u8def\u5f84\u4e3a\uff1a\u201dC:\\Users\\Administrator\\Miniconda3\u201d,\u90a3\u4e48\u9700\u8981\u6dfb\u52a0\u7684\u4e09\u4e2a\u8def\u5f84\u5219\u662f\uff1a 1\uff09C:\\Users\\Administrator\\Miniconda3\uff1b 2\uff09C:\\Users\\Administrator\\Miniconda3\\Scripts\uff1b 3\uff09C:\\Users\\Administrator\\Miniconda3\\Library\\bin \u7b2c\u4e00\u4e2a\u8def\u5f84\u662fMiniconda\u7684\u6839\u76ee\u5f55\uff0c\u4e5f\u662f\u6700\u91cd\u8981\u7684\u8def\u5f84\uff01 * \u5982\u679c\u4f60\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u5df2\u7ecf\u5b58\u5728\u8fd9\u4e09\u4e2a\u8def\u5f84\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u6dfb\u52a0\u4e86\u3002","title":"\u4e0b\u8f7dminiconda"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#miniconda_2","text":"\u53f3\u952e\u5f00\u59cb\u83dc\u5355\uff0c\u6253\u5f00 Windows PowerShell ( \u53ef\u9009 :\u8f93\u5165 conda activate base\u542f\u52a8base\u73af\u5883) \u6b64\u65f6\u5c31\u5df2\u7ecf\u6709python\u4e86 \u53ef\u4ee5\u8f93\u5165 conda --version \u770b\u4e00\u770b\u7248\u672c","title":"\u8fd0\u884cminiconda"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#pip","text":"pip \u9ed8\u8ba4\u4e0b\u8f7d\u6e90\u5728\u56fd\u5916\uff0c\u6539\u4e3a\u56fd\u5185\u540e\uff0c\u5b89\u88c5\u5404\u79cd\u4f9d\u8d56\u4f1a\u5feb\u5f88\u591a\u3002 * \u5728cmd\u547d\u4ee4\u884c\u4e0b \u8fd0\u884c\u5982\u4e0b\u547d\u4ee4 pip config set global.index-url http://pypi.douban.com/simple pip config set global.trusted-host pypi.douban.com","title":"pip\u914d\u7f6e\u9ed8\u8ba4\u955c\u50cf\u6e90"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#rqdatac","text":"\u521b\u5efapython 3.8 \u865a\u62df\u73af\u5883 conda create -n py38 python=3.8.2 \u6fc0\u6d3b\u73af\u5883 conda activate py38 \u5b89\u88c5rqdatac pip install rqdatac \u5982\u679c\u5b89\u88c5\u4e86zsh \u8bf7\u6267\u884c\u547d\u4ee4 rehash \u5b89\u88c5ipython (ipython\u8865\u5168\u529f\u80fd\u975e\u5e38\u4eb2\u6c11) pip install ipython","title":"\u4e0b\u8f7d\u4f7f\u7528rqdatac"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#rqdatac_1","text":"\u8f93\u5165 ipython \u7136\u540e\u6309\u5982\u4e0b\u64cd\u4f5c import rqdatac rqdatac.init(\"\u624b\u673a\u53f7\",\"\u5bc6\u7801\") rqdatac.user.get_quota() #{'bytes_used': 742981, #\u5df2\u4f7f\u7528\u6d41\u91cf # 'bytes_limit': 52428800.0, # \u603b\u6d41\u91cf # 'remaining_days': 760, # \u5269\u4f59\u4f7f\u7528\u5929\u6570 # } rqdatac.all_instruments() # order_book_id symbol ... listed_date de_listed_date #0 M1901P3650 \u8c46\u7c951901\u6cbd3650 ... 2018-04-10 2018-12-07 #1 SR1901C4900 \u767d\u7cd61901\u8d2d4900 ... 2018-04-17 2018-11-26 #2 SR1907C5400 \u767d\u7cd61907\u8d2d5400 ... 2018-01-17 2019-05-27 #3 M1907P2900 \u8c46\u7c951907\u6cbd2900 ... 2018-07-17 2019-06-10 rqdatac.instruments(\"000001.XSHE\") # Instrument(order_book_id='000001.XSHE', industry_code='J66', market_tplus=1, symbol='\u5e73\u5b89\u94f6\u884c', special_type='Normal', exchange='XSHE', status='Active', type='CS', de_listed_date='0000-00-00', listed_date='1991-04-03', sector_code_name='\u91d1\u878d', abbrev_symbol='PAYH', sector_code='Financials', round_lot=100, trading_hours='09:31-11:30,13:01-15:00', board_type='MainBoard', industry_name='\u8d27\u5e01\u91d1\u878d\u670d\u52a1', citics_industry_code='40', citics_industry_name='\u94f6\u884c') rqdatac.get_price(\"000001.XSHE\") # num_trades limit_down volume ... high open low #date ... #2020-01-10 37440.0 15.11 58554845.0 ... 16.81 16.79 16.52 #2020-01-13 42233.0 15.02 87213336.0 ... 17.03 16.75 16.61 #2020-01-14 60290.0 15.29 130449366.0 ... 17.27 16.99 16.76 #2020-01-15 60129.0 15.08 85943912.0 ... 16.86 16.79 16.4","title":"\u4f7f\u7528rqdatac"},{"location":"%E9%9A%8F%E7%AC%94/conda%E4%B8%8Erqdatac%E6%95%99%E7%A8%8B/#conda_1","text":"\u67e5\u770b\u7248\u672c\u4fe1\u606f conda --version \u66f4\u65b0conda conda update conda \u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883 conda create -n py38 python=3.8.2 \u6fc0\u6d3b\u65b0\u7684\u865a\u62df\u73af\u5883 conda activate py38 \u5217\u51fa\u73af\u5883\u4fe1\u606f conda env list \u9000\u51fa\u5f53\u524d\u73af\u5883 conda deactivate \u5220\u9664\u865a\u62df\u73af\u5883 conda remove --name py38 --all","title":"conda\u57fa\u672c\u64cd\u4f5c"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/","text":"git\u8bbe\u7f6e\u4ee3\u7406 \u00b6 https://gist.github.com/laispace/666dd7b27e9116faece6 git \u8bbe\u7f6e\u5168\u5c40\u4ee3\u7406 \u00b6 git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 git \u5220\u9664\u5168\u5c40\u4ee3\u7406 \u00b6 git config --global --unset http.proxy git config --global --unset https.proxy git \u8bbe\u7f6e\u53ea\u5bf9github\u7684\u4ee3\u7406 \u00b6 git config --global http.https://github.com.proxy socks5://127.0.0.1:9999 git \u5220\u9664\u53ea\u5bf9github\u7684\u4ee3\u7406 \u00b6 git config --global --unset http.https://github.com.proxy) \u5728\u7528\u6237\u76ee\u5f55\u4e0b ~\\.gitconfig \u4e0b\u67e5\u770b\u914d\u7f6e pip\u8bbe\u7f6e\u8c46\u74e3\u6e90 \u00b6 \u987a\u4fbf\u8d34\u4e00\u4e0b pip config set global.index-url https://pypi.douban.com/simple npm config delete proxy","title":"git\u8bbe\u7f6e\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#git","text":"https://gist.github.com/laispace/666dd7b27e9116faece6","title":"git\u8bbe\u7f6e\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#git_1","text":"git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080","title":"git \u8bbe\u7f6e\u5168\u5c40\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#git_2","text":"git config --global --unset http.proxy git config --global --unset https.proxy","title":"git \u5220\u9664\u5168\u5c40\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#git-github","text":"git config --global http.https://github.com.proxy socks5://127.0.0.1:9999","title":"git \u8bbe\u7f6e\u53ea\u5bf9github\u7684\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#git-github_1","text":"git config --global --unset http.https://github.com.proxy) \u5728\u7528\u6237\u76ee\u5f55\u4e0b ~\\.gitconfig \u4e0b\u67e5\u770b\u914d\u7f6e","title":"git \u5220\u9664\u53ea\u5bf9github\u7684\u4ee3\u7406"},{"location":"%E9%9A%8F%E7%AC%94/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/#pip","text":"\u987a\u4fbf\u8d34\u4e00\u4e0b pip config set global.index-url https://pypi.douban.com/simple npm config delete proxy","title":"pip\u8bbe\u7f6e\u8c46\u74e3\u6e90"},{"location":"%E9%9A%8F%E7%AC%94/outlook%2Bjira%2Bto-do/","text":"outlook+jira+to-do \u00b6 \u57fa\u672c\u6559\u7a0b \u00b6 \u817e\u8baf\u4f01\u4e1a\u90ae\u7bb1\u8f6c\u53d1\u5230outlook\u90ae\u7bb1 \u5c06\u4f60\u7684\u8f6c\u53d1\u90ae\u7bb1\u8bbe\u7f6e\u5230\u5b89\u5168\u90ae\u4ef6\u5217\u8868 \u8bbe\u7f6e\u666e\u901aJIRA\u89c4\u5219 \u56f4\u89c2\u7c7b\u90ae\u4ef6\u5f52\u5165\u666e\u901a\u6587\u4ef6\u5939 \u8bbe\u7f6e @\u6211 \u7684JIRA\u89c4\u5219 \u6807\u8bb0\u5230\u5fae\u8f6f\u5f85\u529e( Microsoft To Do ) \u4e0b\u8f7d\u5fae\u8f6f\u5f85\u529e( Microsoft To Do )\u5ba2\u6237\u7aef \u7565 \u4f7f\u7528\u4f60\u7684outlook\u8d26\u53f7\u767b\u5f55\u5fae\u8f6f\u5f85\u529e\uff0c\u67e5\u770b\u5f85\u529e\u4e8b\u9879 \u00b7\u00b7\u00b7 \u9ad8\u7aef\u6559\u7a0b \u00b6 windows\u4e0b\u8f7doutlook\u90ae\u7bb1\u5ba2\u6237\u7aef \u8bbe\u7f6e\u89c4\u5219\u5982\u4e0b \u5982\u6b64 \u53ea\u8981\u4f60\u7684 \u5ba2\u6237\u7aef\u5f00\u7740 \u63d0\u53ca\u5230\u4f60\u7684\u90ae\u4ef6\u5c31\u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u5f85\u529e\u4e8b\u9879\u4e2d \u7591\u96be\u6742\u75c7 \u00b6 \u5982\u679c\u4f60\u7684\u90ae\u7bb1\u540d\u4e3a\u5168\u6570\u5b57\u65e0\u4e2d\u6587\u7c7b\u578b \u5219\u4f1a\u51fa\u73b0\u90ae\u4ef6\u4e0d\u51fa\u73b0\u5728\u5fae\u8f6f\u5f85\u529e\u7684\u95ee\u9898 \u9700\u8981\u66f4\u6362\u90ae\u4ef6\u540d \u5305\u542b\u82f1\u6587\u624d\u884c","title":"outlook+jira+to-do"},{"location":"%E9%9A%8F%E7%AC%94/outlook%2Bjira%2Bto-do/#outlookjirato-do","text":"","title":"outlook+jira+to-do"},{"location":"%E9%9A%8F%E7%AC%94/outlook%2Bjira%2Bto-do/#_1","text":"\u817e\u8baf\u4f01\u4e1a\u90ae\u7bb1\u8f6c\u53d1\u5230outlook\u90ae\u7bb1 \u5c06\u4f60\u7684\u8f6c\u53d1\u90ae\u7bb1\u8bbe\u7f6e\u5230\u5b89\u5168\u90ae\u4ef6\u5217\u8868 \u8bbe\u7f6e\u666e\u901aJIRA\u89c4\u5219 \u56f4\u89c2\u7c7b\u90ae\u4ef6\u5f52\u5165\u666e\u901a\u6587\u4ef6\u5939 \u8bbe\u7f6e @\u6211 \u7684JIRA\u89c4\u5219 \u6807\u8bb0\u5230\u5fae\u8f6f\u5f85\u529e( Microsoft To Do ) \u4e0b\u8f7d\u5fae\u8f6f\u5f85\u529e( Microsoft To Do )\u5ba2\u6237\u7aef \u7565 \u4f7f\u7528\u4f60\u7684outlook\u8d26\u53f7\u767b\u5f55\u5fae\u8f6f\u5f85\u529e\uff0c\u67e5\u770b\u5f85\u529e\u4e8b\u9879 \u00b7\u00b7\u00b7","title":"\u57fa\u672c\u6559\u7a0b"},{"location":"%E9%9A%8F%E7%AC%94/outlook%2Bjira%2Bto-do/#_2","text":"windows\u4e0b\u8f7doutlook\u90ae\u7bb1\u5ba2\u6237\u7aef \u8bbe\u7f6e\u89c4\u5219\u5982\u4e0b \u5982\u6b64 \u53ea\u8981\u4f60\u7684 \u5ba2\u6237\u7aef\u5f00\u7740 \u63d0\u53ca\u5230\u4f60\u7684\u90ae\u4ef6\u5c31\u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u5f85\u529e\u4e8b\u9879\u4e2d","title":"\u9ad8\u7aef\u6559\u7a0b"},{"location":"%E9%9A%8F%E7%AC%94/outlook%2Bjira%2Bto-do/#_3","text":"\u5982\u679c\u4f60\u7684\u90ae\u7bb1\u540d\u4e3a\u5168\u6570\u5b57\u65e0\u4e2d\u6587\u7c7b\u578b \u5219\u4f1a\u51fa\u73b0\u90ae\u4ef6\u4e0d\u51fa\u73b0\u5728\u5fae\u8f6f\u5f85\u529e\u7684\u95ee\u9898 \u9700\u8981\u66f4\u6362\u90ae\u4ef6\u540d \u5305\u542b\u82f1\u6587\u624d\u884c","title":"\u7591\u96be\u6742\u75c7"},{"location":"%E9%9A%8F%E7%AC%94/pycharm%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E7%BC%96%E8%BE%91%E5%A4%9A%E8%A1%8C/","text":"pycharm\u5982\u4f55\u540c\u65f6\u7f16\u8f91\u591a\u884c \u00b6 \u5b9e\u73b0\u50cf\u8fd9\u4e2a\u6837\u5b50\uff1a ctrl\u53cc\u51fb\u4e0d\u677e\u624b+\u4e0a\u4e0b\u952e.\u53ef\u4ee5\u5728\u540c\u4e00\u5217\u589e\u52a0\u5149\u6807. ctrl+shift+alt+\u70b9\u51fb\u9f20\u6807\u5de6\u952e.\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u589e\u52a0\u5149\u6807. \u8bbe\u7f6e\u597d\u5149\u6807\u540e\u5c31\u53ef\u4ee5\u677e\u5f00\u6309\u952e\u4f7f\u7528shift+ctrl+\u5de6\u53f3\u6309\u952e\u7ec4\u5408\uff0c\u53ef\u4ee5\u9009\u4e2d\u5149\u6807\u540e\u9762\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u591a\u884c\u7f16\u8f91\u3002 copy for https://blog.csdn.net/bingocoder/article/details/103760422","title":"pycharm\u5982\u4f55\u540c\u65f6\u7f16\u8f91\u591a\u884c"},{"location":"%E9%9A%8F%E7%AC%94/pycharm%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E7%BC%96%E8%BE%91%E5%A4%9A%E8%A1%8C/#pycharm","text":"\u5b9e\u73b0\u50cf\u8fd9\u4e2a\u6837\u5b50\uff1a ctrl\u53cc\u51fb\u4e0d\u677e\u624b+\u4e0a\u4e0b\u952e.\u53ef\u4ee5\u5728\u540c\u4e00\u5217\u589e\u52a0\u5149\u6807. ctrl+shift+alt+\u70b9\u51fb\u9f20\u6807\u5de6\u952e.\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u589e\u52a0\u5149\u6807. \u8bbe\u7f6e\u597d\u5149\u6807\u540e\u5c31\u53ef\u4ee5\u677e\u5f00\u6309\u952e\u4f7f\u7528shift+ctrl+\u5de6\u53f3\u6309\u952e\u7ec4\u5408\uff0c\u53ef\u4ee5\u9009\u4e2d\u5149\u6807\u540e\u9762\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u591a\u884c\u7f16\u8f91\u3002 copy for https://blog.csdn.net/bingocoder/article/details/103760422","title":"pycharm\u5982\u4f55\u540c\u65f6\u7f16\u8f91\u591a\u884c"},{"location":"%E9%9A%8F%E7%AC%94/socketio%20%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/","text":"socketio \u7b2c\u4e09\u6b21\u63e1\u624b\u5931\u8d25\u95ee\u9898 \u00b6 https://segmentfault.com/a/1190000012634779 location /socket.io { proxy_pass http://rqpro_socketio; proxy_http_version 1.1; proxy_set_header upgrade $http_upgrade; proxy_set_header connection $connection_upgrade; proxy_set_header x-real-ip $remote_addr; proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for; proxy_set_header host $http_host; proxy_set_header x-nginx-proxy true; proxy_set_header Origin \"\"; proxy_read_timeout 86400; }","title":"socketio \u7b2c\u4e09\u6b21\u63e1\u624b\u5931\u8d25\u95ee\u9898"},{"location":"%E9%9A%8F%E7%AC%94/socketio%20%E7%AC%AC%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/#socketio","text":"https://segmentfault.com/a/1190000012634779 location /socket.io { proxy_pass http://rqpro_socketio; proxy_http_version 1.1; proxy_set_header upgrade $http_upgrade; proxy_set_header connection $connection_upgrade; proxy_set_header x-real-ip $remote_addr; proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for; proxy_set_header host $http_host; proxy_set_header x-nginx-proxy true; proxy_set_header Origin \"\"; proxy_read_timeout 86400; }","title":"socketio \u7b2c\u4e09\u6b21\u63e1\u624b\u5931\u8d25\u95ee\u9898"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/","text":"win10 \u5f00\u53d1\u73af\u5883\u76f8\u5173 \u00b6 Ubuntu \u00b6 \u5b89\u88c5 \u00b6 \u6253\u5f00\u5f00\u53d1\u8005\u6a21\u5f0f(\u53ef\u9009\uff09 \u8bbe\u7f6e\u83dc\u5355 - \u66f4\u65b0\u548c\u5b89\u5168 - \u5f00\u53d1\u8005\u9009\u9879 - \u9009\u62e9\u5f00\u53d1\u8005\u6a21\u5f0f\u3002 \u6253\u5f00\u9002\u7528\u4e8elinux\u7684windows\u5b50\u7cfb\u7edf \u8bbe\u7f6e\u83dc\u5355 - \u5e94\u7528\u548c\u529f\u80fd - \u7a0b\u5e8f\u548c\u529f\u80fd - \u542f\u52a8\u6216\u8005\u5173\u95edwindows\u529f\u80fd - \u9002\u7528\u4e8elinux\u7684windows\u5b50\u7cfb\u7edf - \u6253\u52fe - \u91cd\u542f\u7535\u8111 \u5b89\u88c5ubuntu \u5728Mirosoft store\u4e2d\u641c\u7d22linux\uff0c\u7136\u540e\u70b9\u51fb\u83b7\u53d6\u8fd9\u4e9b\u5e94\u7528\uff0c\u5c06\u4f1a\u770b\u5230\u5217\u4e3e\u7684\u5404\u79cdlinux\u7cfb\u7edf\uff0c\u8fd9\u91cc\u6211\u9009\u7740\u4e86ubuntu\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002 \u4f7f\u7528 \u5b89\u88c5\u5b8c\u540e\uff0ccmd\u8f93\u5165 ubuntu \u8fdb\u5165ubuntu\u7cfb\u7edf\uff0c\u4e3b\u8981\u4f1a\u8981\u6c42\u8bbe\u7f6e\u5e10\u53f7\u5bc6\u7801 cmder \u00b6 \u597d\u770b \u53f3\u952e\u8d34\u8d34 \u5927\u91cf\u7684 linux \u547d\u4ee4\uff1a grep, vim, grep, tar, unzip, ssh, ls, bash, perl, curl(\u6ca1\u6709 wget) \u5b89\u88c5 Cmder\u5b98\u7f51 \u4e0b\u8f7d\uff0c\u89e3\u538b\u53ef\u7528\u3002 * \u628a cmder \u52a0\u5230\u73af\u5883\u53d8\u91cf \u53ef\u4ee5\u628aCmder.exe\u5b58\u653e\u7684\u76ee\u5f55\u6dfb\u52a0\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1b\u52a0\u5b8c\u4e4b\u540e,Win+r\u4e00\u4e0b\u8f93\u5165cmder,\u5373\u53ef\u3002 \u6dfb\u52a0 cmder \u5230\u53f3\u952e\u83dc\u5355] \u5728\u67d0\u4e2a\u6587\u4ef6\u5939\u4e2d\u6253\u5f00\u7ec8\u7aef, \u8fd9\u4e2a\u662f\u4e00\u4e2a(\u8d85\u7ea7)\u75db\u70b9\u9700\u6c42, \u5b9e\u9645\u4e0a\u4e0a\u4e00\u6b65\u7684\u628a cmder \u52a0\u5230\u73af\u5883\u53d8\u91cf\u5c31\u662f\u4e3a\u6b64\u670d\u52a1\u7684, \u5728\u7ba1\u7406\u5458\u6743\u9650\u7684\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u8bed\u53e5\u5373\u53ef: Cmder.exe /REGISTER ALL * zsh \u5b89\u88c5 docker(https://www.jianshu.com/p/d1b2b4240256) windows\u5305 \u00b6 \u7528windows\u73af\u5883\u5f00\u53d1\uff0c\u9700\u8981\u4e00\u4e9b\u73af\u5883\u53bb\u7f16\u8bd1\u5305\uff0c\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u73b0\u6210\u5df2\u7f16\u8bd1\u597d\u7684\u3002 https://www.lfd.uci.edu/~gohlke/pythonlibs/ \u53f3\u952e\u590d\u5236 \u00b6 shift + \u9f20\u6807\u53f3\u952e \u9009\u62e9\u590d\u5236\u8def\u5f84 * \u8bbe\u7f6e\u9ed8\u8ba4\u51fa\u73b0 \u590d\u5236\u8def\u5f84\u9009\u9879 \u5f00\u53d1\u76f8\u5173 \u00b6 windows \u8bbf\u95ee ubuntu \u00b6 \\\\wsl$\\Ubuntu\\home ubuntu \u8bbf\u95ee windows \u00b6 \u6302\u8f7d\u5728 /mnt/ \u4e2d \u63a8\u8350\u4f7f\u7528\u8f6f\u8fde\u63a5 \u8fde\u63a5\u5230Windows\u9700\u8981\u7684\u7ec4\u4ef6 - cmder\u5728Ubuntu\u4e2d\u53f3\u952e\u8d34\u8d34\u65f6\u81ea\u52a8\u8865\u9f50 /mnt/c/... pycharm\u4e2d\u4f7f\u7528Ubuntu\u7684python \u00b6 pycharm \u914d\u7f6epython\u73af\u5883 \u53ef\u4ee5\u770b\u5230ubuntu\u7684\u5b9e\u9645\u76ee\u5f55\u5982\u4e0b C:\\Users\\74071\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\bin \u4e5f\u53ef\u4ee5\u8fde\u63a5\u670d\u52a1\u5668\u89e3\u91ca\u5668 pycahrm\u4f1a\u5f00\u542f\u4e00\u4e2aFile Transfer\u7684\u7a97\u53e3\uff08\u81ea\u52a8\u540c\u6b65\uff09 cmd\u4e2d\u542f\u52a8\u73af\u5883\uff08\u6bd4\u8f83\u9ebb\u70e6 \u63a8\u8350cmder\u518d\u5f00\u4e00\u4e2a\uff09 pycharm \u8fdc\u7a0b\u73af\u5883 \u00b6 \u914d\u7f6e\u65b9\u5f0f \u672c\u8d28\u4e0a\u662f\u5c06\u6587\u4ef6\u4f20\u5230\u670d\u52a1\u5668/tmp\u4e0b\u8fdb\u884c\u5de5\u4f5c","title":"win10 \u5f00\u53d1\u73af\u5883\u76f8\u5173"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#win10","text":"","title":"win10 \u5f00\u53d1\u73af\u5883\u76f8\u5173"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#ubuntu","text":"","title":"Ubuntu"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#_1","text":"\u6253\u5f00\u5f00\u53d1\u8005\u6a21\u5f0f(\u53ef\u9009\uff09 \u8bbe\u7f6e\u83dc\u5355 - \u66f4\u65b0\u548c\u5b89\u5168 - \u5f00\u53d1\u8005\u9009\u9879 - \u9009\u62e9\u5f00\u53d1\u8005\u6a21\u5f0f\u3002 \u6253\u5f00\u9002\u7528\u4e8elinux\u7684windows\u5b50\u7cfb\u7edf \u8bbe\u7f6e\u83dc\u5355 - \u5e94\u7528\u548c\u529f\u80fd - \u7a0b\u5e8f\u548c\u529f\u80fd - \u542f\u52a8\u6216\u8005\u5173\u95edwindows\u529f\u80fd - \u9002\u7528\u4e8elinux\u7684windows\u5b50\u7cfb\u7edf - \u6253\u52fe - \u91cd\u542f\u7535\u8111 \u5b89\u88c5ubuntu \u5728Mirosoft store\u4e2d\u641c\u7d22linux\uff0c\u7136\u540e\u70b9\u51fb\u83b7\u53d6\u8fd9\u4e9b\u5e94\u7528\uff0c\u5c06\u4f1a\u770b\u5230\u5217\u4e3e\u7684\u5404\u79cdlinux\u7cfb\u7edf\uff0c\u8fd9\u91cc\u6211\u9009\u7740\u4e86ubuntu\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002 \u4f7f\u7528 \u5b89\u88c5\u5b8c\u540e\uff0ccmd\u8f93\u5165 ubuntu \u8fdb\u5165ubuntu\u7cfb\u7edf\uff0c\u4e3b\u8981\u4f1a\u8981\u6c42\u8bbe\u7f6e\u5e10\u53f7\u5bc6\u7801","title":"\u5b89\u88c5"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#cmder","text":"\u597d\u770b \u53f3\u952e\u8d34\u8d34 \u5927\u91cf\u7684 linux \u547d\u4ee4\uff1a grep, vim, grep, tar, unzip, ssh, ls, bash, perl, curl(\u6ca1\u6709 wget) \u5b89\u88c5 Cmder\u5b98\u7f51 \u4e0b\u8f7d\uff0c\u89e3\u538b\u53ef\u7528\u3002 * \u628a cmder \u52a0\u5230\u73af\u5883\u53d8\u91cf \u53ef\u4ee5\u628aCmder.exe\u5b58\u653e\u7684\u76ee\u5f55\u6dfb\u52a0\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\uff1b\u52a0\u5b8c\u4e4b\u540e,Win+r\u4e00\u4e0b\u8f93\u5165cmder,\u5373\u53ef\u3002 \u6dfb\u52a0 cmder \u5230\u53f3\u952e\u83dc\u5355] \u5728\u67d0\u4e2a\u6587\u4ef6\u5939\u4e2d\u6253\u5f00\u7ec8\u7aef, \u8fd9\u4e2a\u662f\u4e00\u4e2a(\u8d85\u7ea7)\u75db\u70b9\u9700\u6c42, \u5b9e\u9645\u4e0a\u4e0a\u4e00\u6b65\u7684\u628a cmder \u52a0\u5230\u73af\u5883\u53d8\u91cf\u5c31\u662f\u4e3a\u6b64\u670d\u52a1\u7684, \u5728\u7ba1\u7406\u5458\u6743\u9650\u7684\u7ec8\u7aef\u8f93\u5165\u4ee5\u4e0b\u8bed\u53e5\u5373\u53ef: Cmder.exe /REGISTER ALL * zsh \u5b89\u88c5 docker(https://www.jianshu.com/p/d1b2b4240256)","title":"cmder"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#windows","text":"\u7528windows\u73af\u5883\u5f00\u53d1\uff0c\u9700\u8981\u4e00\u4e9b\u73af\u5883\u53bb\u7f16\u8bd1\u5305\uff0c\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u73b0\u6210\u5df2\u7f16\u8bd1\u597d\u7684\u3002 https://www.lfd.uci.edu/~gohlke/pythonlibs/","title":"windows\u5305"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#_2","text":"shift + \u9f20\u6807\u53f3\u952e \u9009\u62e9\u590d\u5236\u8def\u5f84 * \u8bbe\u7f6e\u9ed8\u8ba4\u51fa\u73b0 \u590d\u5236\u8def\u5f84\u9009\u9879","title":"\u53f3\u952e\u590d\u5236"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#_3","text":"","title":"\u5f00\u53d1\u76f8\u5173"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#windows-ubuntu","text":"\\\\wsl$\\Ubuntu\\home","title":"windows \u8bbf\u95ee ubuntu"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#ubuntu-windows","text":"\u6302\u8f7d\u5728 /mnt/ \u4e2d \u63a8\u8350\u4f7f\u7528\u8f6f\u8fde\u63a5 \u8fde\u63a5\u5230Windows\u9700\u8981\u7684\u7ec4\u4ef6 - cmder\u5728Ubuntu\u4e2d\u53f3\u952e\u8d34\u8d34\u65f6\u81ea\u52a8\u8865\u9f50 /mnt/c/...","title":"ubuntu \u8bbf\u95ee windows"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#pycharmubuntupython","text":"pycharm \u914d\u7f6epython\u73af\u5883 \u53ef\u4ee5\u770b\u5230ubuntu\u7684\u5b9e\u9645\u76ee\u5f55\u5982\u4e0b C:\\Users\\74071\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\bin \u4e5f\u53ef\u4ee5\u8fde\u63a5\u670d\u52a1\u5668\u89e3\u91ca\u5668 pycahrm\u4f1a\u5f00\u542f\u4e00\u4e2aFile Transfer\u7684\u7a97\u53e3\uff08\u81ea\u52a8\u540c\u6b65\uff09 cmd\u4e2d\u542f\u52a8\u73af\u5883\uff08\u6bd4\u8f83\u9ebb\u70e6 \u63a8\u8350cmder\u518d\u5f00\u4e00\u4e2a\uff09","title":"pycharm\u4e2d\u4f7f\u7528Ubuntu\u7684python"},{"location":"%E9%9A%8F%E7%AC%94/win10%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3/#pycharm","text":"\u914d\u7f6e\u65b9\u5f0f \u672c\u8d28\u4e0a\u662f\u5c06\u6587\u4ef6\u4f20\u5230\u670d\u52a1\u5668/tmp\u4e0b\u8fdb\u884c\u5de5\u4f5c","title":"pycharm \u8fdc\u7a0b\u73af\u5883"},{"location":"%E9%9A%8F%E7%AC%94/wsl%20%E4%B8%8A%E8%A3%85node/","text":"wsl \u4e0a\u88c5node \u00b6 \u5b89\u88c5 Node.js curl -L https://git.io/n-install -x 127.0.0.1:9999 | bash npm config set registry https://registry.npm.taobao.org pycharm \u914d\u7f6e npm \u00b6 windows \u6587\u4ef6 \\r\u7ed3\u5c3e\u95ee\u9898 \u00b6 sudo apt-get install dos2unix","title":"wsl \u4e0a\u88c5node"},{"location":"%E9%9A%8F%E7%AC%94/wsl%20%E4%B8%8A%E8%A3%85node/#wsl-node","text":"\u5b89\u88c5 Node.js curl -L https://git.io/n-install -x 127.0.0.1:9999 | bash npm config set registry https://registry.npm.taobao.org","title":"wsl \u4e0a\u88c5node"},{"location":"%E9%9A%8F%E7%AC%94/wsl%20%E4%B8%8A%E8%A3%85node/#pycharm-npm","text":"","title":"pycharm \u914d\u7f6e npm"},{"location":"%E9%9A%8F%E7%AC%94/wsl%20%E4%B8%8A%E8%A3%85node/#windows-r","text":"sudo apt-get install dos2unix","title":"windows \u6587\u4ef6 \\r\u7ed3\u5c3e\u95ee\u9898"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B8%80%E4%B8%AAjs%E7%A0%B4%E8%A7%A3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/","text":"\u4e00\u4e2ajs\u7834\u89e3\u95ee\u9898\u8bb0\u5f55 \u00b6 \u4e2d\u95f4\u8df3\u5230\u4e00\u4e2acgi\u9875\u9762 https://dns.bufferover.run/dns?q=.pk1352.com","title":"\u4e00\u4e2ajs\u7834\u89e3\u95ee\u9898\u8bb0\u5f55"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B8%80%E4%B8%AAjs%E7%A0%B4%E8%A7%A3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#js","text":"\u4e2d\u95f4\u8df3\u5230\u4e00\u4e2acgi\u9875\u9762 https://dns.bufferover.run/dns?q=.pk1352.com","title":"\u4e00\u4e2ajs\u7834\u89e3\u95ee\u9898\u8bb0\u5f55"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B8%A4%E5%8F%B0Nginx%20socketio%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87/","text":"\u4e24\u53f0Nginx socketio\u65e0\u6cd5\u901a\u8fc7 \u00b6 \u9879\u76ee\u7528\u5230\u4e86socket io\u901a\u4fe1 \u53d1\u9001\u4fe1\u606f client\u548cserver\u76f4\u8fde\u65e0\u95ee\u9898 \u4f46\u662f\u8d70niginx\u96c6\u7fa4\u5c31\u76f4\u63a5\u62a5\u9519\u4e86 \u5927\u795e\u6539\u4e86\u4e00\u4e2a\u914d\u7f6e\u7136\u540e\u5c31\u901a\u8fc7\u4e86 \u8bb0\u5f55\u4e00\u4e0bNginx\u914d\u7f6e location /socket.io { proxy_pass http://pro_socketio; proxy_http_version 1.1; proxy_set_header upgrade $http_upgrade; proxy_set_header connection $connection_upgrade; proxy_set_header x-real-ip $remote_addr; proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for; proxy_set_header host $http_host; proxy_set_header x-nginx-proxy true; proxy_set_header Access-Control-Allow-Origin *; # \u4e3b\u8981\u8d77\u4f5c\u7528 proxy_set_header Origin \"\"; # \u4e3b\u8981\u8d77\u4f5c\u7528\u5b57\u6bb5 proxy_read_timeout 86400; }","title":"\u4e24\u53f0Nginx socketio\u65e0\u6cd5\u901a\u8fc7"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B8%A4%E5%8F%B0Nginx%20socketio%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87/#nginx-socketio","text":"\u9879\u76ee\u7528\u5230\u4e86socket io\u901a\u4fe1 \u53d1\u9001\u4fe1\u606f client\u548cserver\u76f4\u8fde\u65e0\u95ee\u9898 \u4f46\u662f\u8d70niginx\u96c6\u7fa4\u5c31\u76f4\u63a5\u62a5\u9519\u4e86 \u5927\u795e\u6539\u4e86\u4e00\u4e2a\u914d\u7f6e\u7136\u540e\u5c31\u901a\u8fc7\u4e86 \u8bb0\u5f55\u4e00\u4e0bNginx\u914d\u7f6e location /socket.io { proxy_pass http://pro_socketio; proxy_http_version 1.1; proxy_set_header upgrade $http_upgrade; proxy_set_header connection $connection_upgrade; proxy_set_header x-real-ip $remote_addr; proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for; proxy_set_header host $http_host; proxy_set_header x-nginx-proxy true; proxy_set_header Access-Control-Allow-Origin *; # \u4e3b\u8981\u8d77\u4f5c\u7528 proxy_set_header Origin \"\"; # \u4e3b\u8981\u8d77\u4f5c\u7528\u5b57\u6bb5 proxy_read_timeout 86400; }","title":"\u4e24\u53f0Nginx socketio\u65e0\u6cd5\u901a\u8fc7"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/","text":"\u4e50\u7406\u7b14\u8bb0 \u00b6 https://www.bilibili.com/video/av4395456/index_6.html#page=1 \u4e00\u4e2a\u534a\u97f3\u4e3a\u4e00\u4e2a\u7434\u952e \u97f3\u7a0b \u00b6 \u4e0d\u770b\u9ed1\u952e\uff0c\u53ea\u770b\u767d\u5065\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5728\u770b\u6240\u6309\u7684\u97f3\u4e0e\u6807\u51c6\u767d\u5065\u5dee\u51e0\u4e2a\u534a\u97f3 \u51cf \u5dee\u4e24\u4e2a \u5c0f \u5dee\u4e00\u4e2a \u5927 \u4e0d\u5dee \u589e \u591a\u4e00\u4e2a \u4f8b\u5982 1 3 \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 1-3 \u4e3a\u4e09\u5ea6 \u97f3\u9636\u4e0a\u5dee\u4e09\u4e2a\u534a\u97f3 1# 2 2# \u6240\u4ee5\u4e3a\u5927\u4e09\u5ea6 \u4f8b\u5982 1 2# \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 1-2 \u4e3a\u4e8c\u5ea6 \u97f3\u8282\u4e0a\u4e3a\u4e00\u4e2a\u4e24\u534a\u97f3 1# 2 \u6240\u4ee5\u4e3a\u66fe\u4e8c\u5ea6 \u4f8b\u5982 3 5# \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 3 5 = 1 3 \u4e3a\u4e09\u5ea6 \u97f3\u9636\u4e0a\u4e3a\u4e09\u4e2a\u534a\u97f3 \u6240\u4ee5\u4e3a \u5927\u4e09\u5ea6 \u4e09\u548c\u5f26 \u00b6 \u4e09\u4e2a\u97f3\u4e4b\u95f4\u7684\u5173\u7cfb\u4e3a\u67d0\u4e24\u4e2a\u97f3\u7a0b\u7684\u7ec4\u5408 \u79f0\u4e3a\u4e00\u4e2a\u548c\u5f26 \u5927\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6 \u4e3a\u5927\u4e09\u548c\u5f26 3 2 \uff08\u4e09\u4e2a\u97f3\u4e4b\u95f4\u5dee \u4e09\u4e2a\u534a\u97f3 \u4e24\u4e2a\u534a\u97f3 \u4f8b\u5982 1 3 5 \u5927C\u548c\u5f26\uff09 \u5c0f\u4e09\u5ea6 + \u5927\u4e09\u5ea6 \u4e3a\u5c0f\u4e09\u548c\u5f26 2 3 \u5927\u4e09\u5ea6 + \u5927\u4e09\u5ea6 \u4e3a\u589e\u4e09\u548c\u5f26 3 3 \u5c0f\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6 \u4e3a\u51cf\u4e09\u548c\u5f26 2 2 \u4e03\u548c\u5f26 \u00b6 \u5927\u4e03 = \u5927\u5927\u4e03 3 2 3 \u4e5f\u53ef\u770b\u4f5c\u5927\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u6807\u51c6\u4e03\u5ea6 \u5c5e\u4e03 = \u5927\u5c0f\u4e03 3 2 2 \u4e5f\u53ef\u770b\u4f5c\u5927\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u4e03\u5ea6 \u5c0f\u4e03 = \u5c0f\u5c0f\u4e03 2 3 2 \u4e5f\u53ef\u770b\u4f5c\u5c0f\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u4e03\u5ea6 \u534a\u51cf\u4e03 = \u51cf\u5c0f\u4e03 2 2 3 \u51cf\u4e03 = \u51cf\u51cf\u4e03 2 2 2 \u4f8b\u5982C\u5927\u4e03 1 (3\u4e2a\u534a\u97f3) 3 (2\u4e2a\u534a\u97f3) 5 (3\u4e2a\u534a\u97f3) 7 \u5927\u5c0f\u8c03\u5173\u7cfb \u00b6 \u5927\u8c03\u7684\u7b2c\u516d\u4e2a\u97f3\u4e3a\u5c0f\u8c03\u7684\u7b2c\u4e00\u4e2a\u97f3 \u59821234567 \u5927\u8c03 67123456","title":"\u4e50\u7406\u7b14\u8bb0"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/#_1","text":"https://www.bilibili.com/video/av4395456/index_6.html#page=1 \u4e00\u4e2a\u534a\u97f3\u4e3a\u4e00\u4e2a\u7434\u952e","title":"\u4e50\u7406\u7b14\u8bb0"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/#_2","text":"\u4e0d\u770b\u9ed1\u952e\uff0c\u53ea\u770b\u767d\u5065\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5728\u770b\u6240\u6309\u7684\u97f3\u4e0e\u6807\u51c6\u767d\u5065\u5dee\u51e0\u4e2a\u534a\u97f3 \u51cf \u5dee\u4e24\u4e2a \u5c0f \u5dee\u4e00\u4e2a \u5927 \u4e0d\u5dee \u589e \u591a\u4e00\u4e2a \u4f8b\u5982 1 3 \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 1-3 \u4e3a\u4e09\u5ea6 \u97f3\u9636\u4e0a\u5dee\u4e09\u4e2a\u534a\u97f3 1# 2 2# \u6240\u4ee5\u4e3a\u5927\u4e09\u5ea6 \u4f8b\u5982 1 2# \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 1-2 \u4e3a\u4e8c\u5ea6 \u97f3\u8282\u4e0a\u4e3a\u4e00\u4e2a\u4e24\u534a\u97f3 1# 2 \u6240\u4ee5\u4e3a\u66fe\u4e8c\u5ea6 \u4f8b\u5982 3 5# \u767d\u5065\u4e4b\u95f4\u6570\u5b57\u5173\u7cfb\u4e3a 3 5 = 1 3 \u4e3a\u4e09\u5ea6 \u97f3\u9636\u4e0a\u4e3a\u4e09\u4e2a\u534a\u97f3 \u6240\u4ee5\u4e3a \u5927\u4e09\u5ea6","title":"\u97f3\u7a0b"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/#_3","text":"\u4e09\u4e2a\u97f3\u4e4b\u95f4\u7684\u5173\u7cfb\u4e3a\u67d0\u4e24\u4e2a\u97f3\u7a0b\u7684\u7ec4\u5408 \u79f0\u4e3a\u4e00\u4e2a\u548c\u5f26 \u5927\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6 \u4e3a\u5927\u4e09\u548c\u5f26 3 2 \uff08\u4e09\u4e2a\u97f3\u4e4b\u95f4\u5dee \u4e09\u4e2a\u534a\u97f3 \u4e24\u4e2a\u534a\u97f3 \u4f8b\u5982 1 3 5 \u5927C\u548c\u5f26\uff09 \u5c0f\u4e09\u5ea6 + \u5927\u4e09\u5ea6 \u4e3a\u5c0f\u4e09\u548c\u5f26 2 3 \u5927\u4e09\u5ea6 + \u5927\u4e09\u5ea6 \u4e3a\u589e\u4e09\u548c\u5f26 3 3 \u5c0f\u4e09\u5ea6 + \u5c0f\u4e09\u5ea6 \u4e3a\u51cf\u4e09\u548c\u5f26 2 2","title":"\u4e09\u548c\u5f26"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/#_4","text":"\u5927\u4e03 = \u5927\u5927\u4e03 3 2 3 \u4e5f\u53ef\u770b\u4f5c\u5927\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u6807\u51c6\u4e03\u5ea6 \u5c5e\u4e03 = \u5927\u5c0f\u4e03 3 2 2 \u4e5f\u53ef\u770b\u4f5c\u5927\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u4e03\u5ea6 \u5c0f\u4e03 = \u5c0f\u5c0f\u4e03 2 3 2 \u4e5f\u53ef\u770b\u4f5c\u5c0f\u4e09\u548c\u5f26\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u4e03\u5ea6 \u534a\u51cf\u4e03 = \u51cf\u5c0f\u4e03 2 2 3 \u51cf\u4e03 = \u51cf\u51cf\u4e03 2 2 2 \u4f8b\u5982C\u5927\u4e03 1 (3\u4e2a\u534a\u97f3) 3 (2\u4e2a\u534a\u97f3) 5 (3\u4e2a\u534a\u97f3) 7","title":"\u4e03\u548c\u5f26"},{"location":"%E9%9A%8F%E7%AC%94/%E4%B9%90%E7%90%86%E7%AC%94%E8%AE%B0/#_5","text":"\u5927\u8c03\u7684\u7b2c\u516d\u4e2a\u97f3\u4e3a\u5c0f\u8c03\u7684\u7b2c\u4e00\u4e2a\u97f3 \u59821234567 \u5927\u8c03 67123456","title":"\u5927\u5c0f\u8c03\u5173\u7cfb"},{"location":"%E9%9A%8F%E7%AC%94/%E4%BC%81%E4%B8%9A%E5%90%8D%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E8%B0%83%E7%A0%94/","text":"\u4f01\u4e1a\u540d\u6a21\u7cca\u67e5\u8be2\u8c03\u7814 \u00b6 \u00b6 \u552f\u4f60\u79d1\u6280 0.08 \u6bcf\u6761 \u4f01\u67e5\u67e5 0.3 \u53ef\u722c \u524d\u77bb\u4e91 0.03 \u5929\u5143\u6570\u636e 0.05 \u5b98\u7f51\u6d4b\u8bd5\u5931\u8d25 [\u5929\u773c\u67e5] \u9700\u8981\u6c9f\u901a \u4eac\u4e1c\u4e91 0.04 \u2013 0.0005 \u963f\u91cc\u4e91 0.045 \u2013 0.035 \u817e\u8baf\u4e91 4\u4e2a\u5b57 0.15 \u2013 0.03","title":"\u4f01\u4e1a\u540d\u6a21\u7cca\u67e5\u8be2\u8c03\u7814"},{"location":"%E9%9A%8F%E7%AC%94/%E4%BC%81%E4%B8%9A%E5%90%8D%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E8%B0%83%E7%A0%94/#_1","text":"","title":"\u4f01\u4e1a\u540d\u6a21\u7cca\u67e5\u8be2\u8c03\u7814"},{"location":"%E9%9A%8F%E7%AC%94/%E4%BC%81%E4%B8%9A%E5%90%8D%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E8%B0%83%E7%A0%94/#_2","text":"\u552f\u4f60\u79d1\u6280 0.08 \u6bcf\u6761 \u4f01\u67e5\u67e5 0.3 \u53ef\u722c \u524d\u77bb\u4e91 0.03 \u5929\u5143\u6570\u636e 0.05 \u5b98\u7f51\u6d4b\u8bd5\u5931\u8d25 [\u5929\u773c\u67e5] \u9700\u8981\u6c9f\u901a \u4eac\u4e1c\u4e91 0.04 \u2013 0.0005 \u963f\u91cc\u4e91 0.045 \u2013 0.035 \u817e\u8baf\u4e91 4\u4e2a\u5b57 0.15 \u2013 0.03","title":""},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/","text":"\u597d\u7269\u5206\u4eab \u00b6 \u81ea\u5df1\u559c\u6b22\u5565\uff0c\u603b\u8981\u4e00\u904d\u4e00\u904d\u548c\u670b\u53cb\u4ecb\u7ecd\uff0c\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u6837\u6c47\u603b\u4e00\u4e0b\uff0c\u65b9\u4fbf\u670b\u53cb\u4e00\u6b21\u6027\u5b89\u5229\u3002 ps. \u6bcf\u4e2a\u5de5\u5177\u5176\u5b9e\u5728B\u7ad9\u90fd\u6709\u89c6\u5c4f\u79d1\u666e\uff0c\u5927\u4f6c\u4eec\u4e5f\u53ef\u4ee5\u4e0aB\u7ad9\u770b\u770b\u3002 \u786c\u4ef6 \u00b6 \u952e\u76d8\uff1a Anne pro 2 \u00b6 \u5168\u952e\u81ea\u5b9a\u4e49 tap key: \u652f\u6301\u8f7b\u89e6\u65b9\u5411\u952e magic key: CaspLk \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e3aFN\u952e \u952e\u76d8\u5b8f \u81ea\u5b9a\u4e49rgb type-C \u5145\u7535 USB + \u84dd\u7259\u53cc\u6a21 \u56db\u84dd\u7259\u8fde\u63a5 * \u5e26\u7535\u91cf\u663e\u793a: Fn2 + 8 \u7f3a\u70b9\u662f\u6ca1\u6709\u9759\u97f3\u7248\u672c\uff0c\u9009\u4e86\u7ea2\u8f74\u9ed8\u8ba4\u4e0d\u6309\u5230\u5e95\uff0c\u52c9\u52c9\u5f3a\u5f3a\u58f0\u97f3\u4e0d\u5927\u3002 \u6709\u4e2a\u6ce8\u610f\u70b9\u662f\uff0c\u5f53\u7ebf\u8fde\u63a5\u7535\u8111\uff0c\u6ca1\u5173\u6389\u84dd\u7259\u7684\u8bdd\uff0c\u9ed8\u8ba4\u8fd8\u662f\u84dd\u7259\u8f93\u5165\u8f93\u51fa\uff0c\u7ebf\u652f\u6301\u5145\u7535\u3002 \u9f20\u6807: \u7f57\u6280M590 \u00b6 \u9759\u97f3\uff0c\u7528\u7535\u4e45\uff0c\u81ea\u5b9a\u4e49\u9f20\u6807\u6eda\u8f6e\u5de6\u53f3\u65b9\u5411\uff0c\u53cc\u84dd\u7259\uff0c\u591a\u8bbe\u5907\u652f\u6301Logitech Flow\uff0c\u7f3a\u70b9\u662f\u4e0d\u597d\u770b\u3002 \u9f20\u6807: \u7f57\u6280M720 \u00b6 \u540c\u4e0a\u6b3e\uff0c\u81ea\u5b9a\u4e49\u6309\u952e\u66f4\u591a\uff0c\u636e\u8bf4\u6709\u4e8c\u4e09\u5341\u4e2a\u3002\u7f3a\u70b9\u662f\u4e0d\u9759\u97f3\u3002 \u8f6f\u4ef6 \u00b6 ps.\u672c\u4eba\u662f\u5168windows\u5f00\u53d1\u3002 \u4f2aLinux\u7cfb\u7edf \u00b6 Cmder + WSL2 + oh my zsh wsl2\u652f\u6301docker\u4e86\uff0ccmder\u914d\u4e0a\u4e2a\u70ab\u9177\u7684\u534a\u900f\u660e\u754c\u9762\uff0coh my zsh \u81ea\u5e26\u5404\u79cd\u63d2\u4ef6\u597d\u7528\u7684\u54fc\uff0c\u4e00\u5957\u4e0b\u6765\uff0cwindows\u53d8Linux\uff0c\u5e76\u4e14pycharm\u652f\u6301\u57fa\u4e8ewsl\u5f00\u53d1\uff0c\u5df4\u9002\u5f97\u5f88\u3002 \u5173\u4e8esz rz \u4f20\u8f93 \u6211\u8fd9\u91cc\u6709\u4e2a \u89e3\u51b3\u65b9\u6848 \u3002 \u529e\u516c\u5957\u4ef6 to do list + outlook \u00b6 \u5f85\u529e\u4e0d\u7ba1\u662f\u4e0a\u73ed\u8fd8\u662f\u5e73\u65f6\u90fd\u7528\u5f97\u4e0a\u3002 outlook\u652f\u6301\u5c06\u90ae\u4ef6\u81ea\u52a8\u8f6c\u5165\u5f85\u529e (windows\u5ba2\u6237\u7aef)\u3002 \u8fd9\u91cc\u6709\u4efd \u53c2\u8003 \u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0coutlook\u7684\u65e5\u5386\u7ba1\u7406\u4e5f\u5f88\u9999\u3002 \u624b\u673a\u65e5\u5386\u4e0a\u9009\u62e9Exchange\u5bfc\u5165\u65b9\u5f0f\u5bfc\u5165\u65e5\u5386\uff0c\u5c31\u624b\u673a\u7aef\u548c\u7535\u8111\u7aef\u540c\u6b65\u4e86\u3002 \u5206\u5c4f\u5229\u5668 PowerToys \u00b6 \u8fd9\u4e2a\u6bcf\u4e2a \u5e16\u5b50 \u90fd\u8bb2\u70c2\u4e86\uff0c\u81ea\u5df1\u770b\u628a\u3002 \u987a\u4fbf\u8bf4\u8bf4windows\u865a\u62df\u684c\u9762(\u90e8\u5206\u5c0f\u4f19\u4f34\u4e0d\u77e5\u9053) windows + ctrl + d \u521b\u5efa\u684c\u9762 windows + ctrl + f4 \u5220\u9664\u684c\u9762 windows + ctrl +\u65b9\u5411\u952e \u5feb\u901f\u79fb\u52a8 \u597d\u4e86\u606d\u559c\u4f60\u62e5\u6709\u4e86\u65e0\u6570\u4e2a\u865a\u62df\u684c\u9762\u3002\u53ef\u4ee5\u7ed9\u684c\u9762\u547d\u540d\uff0c\u628a\u6478\u9c7c\u684c\u9762\uff0c\u5b66\u4e60\u684c\u9762\uff0c\u5de5\u4f5c\u684c\u9762\uff0c\u770b\u677f\u684c\u9762\u5206\u5f00\u3002 \u7f51\u7ad9 \u00b6 todo","title":"\u597d\u7269\u5206\u4eab"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#_1","text":"\u81ea\u5df1\u559c\u6b22\u5565\uff0c\u603b\u8981\u4e00\u904d\u4e00\u904d\u548c\u670b\u53cb\u4ecb\u7ecd\uff0c\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u6837\u6c47\u603b\u4e00\u4e0b\uff0c\u65b9\u4fbf\u670b\u53cb\u4e00\u6b21\u6027\u5b89\u5229\u3002 ps. \u6bcf\u4e2a\u5de5\u5177\u5176\u5b9e\u5728B\u7ad9\u90fd\u6709\u89c6\u5c4f\u79d1\u666e\uff0c\u5927\u4f6c\u4eec\u4e5f\u53ef\u4ee5\u4e0aB\u7ad9\u770b\u770b\u3002","title":"\u597d\u7269\u5206\u4eab"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#_2","text":"","title":"\u786c\u4ef6"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#anne-pro-2","text":"\u5168\u952e\u81ea\u5b9a\u4e49 tap key: \u652f\u6301\u8f7b\u89e6\u65b9\u5411\u952e magic key: CaspLk \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e3aFN\u952e \u952e\u76d8\u5b8f \u81ea\u5b9a\u4e49rgb type-C \u5145\u7535 USB + \u84dd\u7259\u53cc\u6a21 \u56db\u84dd\u7259\u8fde\u63a5 * \u5e26\u7535\u91cf\u663e\u793a: Fn2 + 8 \u7f3a\u70b9\u662f\u6ca1\u6709\u9759\u97f3\u7248\u672c\uff0c\u9009\u4e86\u7ea2\u8f74\u9ed8\u8ba4\u4e0d\u6309\u5230\u5e95\uff0c\u52c9\u52c9\u5f3a\u5f3a\u58f0\u97f3\u4e0d\u5927\u3002 \u6709\u4e2a\u6ce8\u610f\u70b9\u662f\uff0c\u5f53\u7ebf\u8fde\u63a5\u7535\u8111\uff0c\u6ca1\u5173\u6389\u84dd\u7259\u7684\u8bdd\uff0c\u9ed8\u8ba4\u8fd8\u662f\u84dd\u7259\u8f93\u5165\u8f93\u51fa\uff0c\u7ebf\u652f\u6301\u5145\u7535\u3002","title":"\u952e\u76d8\uff1a Anne pro 2"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#m590","text":"\u9759\u97f3\uff0c\u7528\u7535\u4e45\uff0c\u81ea\u5b9a\u4e49\u9f20\u6807\u6eda\u8f6e\u5de6\u53f3\u65b9\u5411\uff0c\u53cc\u84dd\u7259\uff0c\u591a\u8bbe\u5907\u652f\u6301Logitech Flow\uff0c\u7f3a\u70b9\u662f\u4e0d\u597d\u770b\u3002","title":"\u9f20\u6807: \u7f57\u6280M590"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#m720","text":"\u540c\u4e0a\u6b3e\uff0c\u81ea\u5b9a\u4e49\u6309\u952e\u66f4\u591a\uff0c\u636e\u8bf4\u6709\u4e8c\u4e09\u5341\u4e2a\u3002\u7f3a\u70b9\u662f\u4e0d\u9759\u97f3\u3002","title":"\u9f20\u6807: \u7f57\u6280M720"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#_3","text":"ps.\u672c\u4eba\u662f\u5168windows\u5f00\u53d1\u3002","title":"\u8f6f\u4ef6"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#linux","text":"Cmder + WSL2 + oh my zsh wsl2\u652f\u6301docker\u4e86\uff0ccmder\u914d\u4e0a\u4e2a\u70ab\u9177\u7684\u534a\u900f\u660e\u754c\u9762\uff0coh my zsh \u81ea\u5e26\u5404\u79cd\u63d2\u4ef6\u597d\u7528\u7684\u54fc\uff0c\u4e00\u5957\u4e0b\u6765\uff0cwindows\u53d8Linux\uff0c\u5e76\u4e14pycharm\u652f\u6301\u57fa\u4e8ewsl\u5f00\u53d1\uff0c\u5df4\u9002\u5f97\u5f88\u3002 \u5173\u4e8esz rz \u4f20\u8f93 \u6211\u8fd9\u91cc\u6709\u4e2a \u89e3\u51b3\u65b9\u6848 \u3002","title":"\u4f2aLinux\u7cfb\u7edf"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#to-do-list-outlook","text":"\u5f85\u529e\u4e0d\u7ba1\u662f\u4e0a\u73ed\u8fd8\u662f\u5e73\u65f6\u90fd\u7528\u5f97\u4e0a\u3002 outlook\u652f\u6301\u5c06\u90ae\u4ef6\u81ea\u52a8\u8f6c\u5165\u5f85\u529e (windows\u5ba2\u6237\u7aef)\u3002 \u8fd9\u91cc\u6709\u4efd \u53c2\u8003 \u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0coutlook\u7684\u65e5\u5386\u7ba1\u7406\u4e5f\u5f88\u9999\u3002 \u624b\u673a\u65e5\u5386\u4e0a\u9009\u62e9Exchange\u5bfc\u5165\u65b9\u5f0f\u5bfc\u5165\u65e5\u5386\uff0c\u5c31\u624b\u673a\u7aef\u548c\u7535\u8111\u7aef\u540c\u6b65\u4e86\u3002","title":"\u529e\u516c\u5957\u4ef6 to do list + outlook"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#powertoys","text":"\u8fd9\u4e2a\u6bcf\u4e2a \u5e16\u5b50 \u90fd\u8bb2\u70c2\u4e86\uff0c\u81ea\u5df1\u770b\u628a\u3002 \u987a\u4fbf\u8bf4\u8bf4windows\u865a\u62df\u684c\u9762(\u90e8\u5206\u5c0f\u4f19\u4f34\u4e0d\u77e5\u9053) windows + ctrl + d \u521b\u5efa\u684c\u9762 windows + ctrl + f4 \u5220\u9664\u684c\u9762 windows + ctrl +\u65b9\u5411\u952e \u5feb\u901f\u79fb\u52a8 \u597d\u4e86\u606d\u559c\u4f60\u62e5\u6709\u4e86\u65e0\u6570\u4e2a\u865a\u62df\u684c\u9762\u3002\u53ef\u4ee5\u7ed9\u684c\u9762\u547d\u540d\uff0c\u628a\u6478\u9c7c\u684c\u9762\uff0c\u5b66\u4e60\u684c\u9762\uff0c\u5de5\u4f5c\u684c\u9762\uff0c\u770b\u677f\u684c\u9762\u5206\u5f00\u3002","title":"\u5206\u5c4f\u5229\u5668 PowerToys"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A5%BD%E7%89%A9%E5%88%86%E4%BA%AB/#_4","text":"todo","title":"\u7f51\u7ad9"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/","text":"\u5982\u4f55\u6109\u5feb\u7684\u9b42\u7a7f\u5230\u516c\u53f8\u2014\u2014\u5185\u7f51\u8fde\u63a5\u6307\u5357 \u00b6 \u9996\u5148\u5fc5\u8981\u8981\u6c42 \u00b6 \u516c\u53f8\u6709VPN\u8fde\u63a5\u5230\u5185\u7f51 \u83b7\u53d6\u673a\u5668ip \u00b6 \u53c2\u8003: [windows\u4e0b\u9762\u56fa\u5b9a\u672c\u5730ip] * \u67e5\u8be2\u673a\u5668ip (win + R \u53ec\u5524)cmd \u4e0b ifconfig.exe \u56fa\u5b9a\u673a\u5668ip \u8fd9\u91cc\u5efa\u8bae\u56fa\u5b9a\u4e0b\u81ea\u5df1\u673a\u5668\u7684ip,\u907f\u514d\u91cd\u542fip\u6539\u4e86\u3002\u8bf7\u4f7f\u7528\u4f60\u67e5\u8be2\u7684ip\u56fa\u5b9a\u3002 1. \u53f3\u952e\u7f51\u7edc->\u6253\u5f00\u7f51\u7edc\u548c\u5171\u4eab\u4e2d\u5fc3->\u9009\u62e9\u4f60\u6b63\u8fde\u63a5\u7684\u7f51\u7edc->\u5c5e\u6027->\u53cc\u51fbTcp/ipv4\uff1b 2. \u8bbe\u7f6eip\u548c\u63a9\u7801\uff0c\u53ca\u7f51\u5173\uff0c\u7f51\u5173\u53ef\u4ee5\u5728cmd\u91cc\u9762\u8f93\u5165ipconfig\u5373\u53ef\u770b\u5230 3. ifconfig.exe\u9a8c\u8bc1 ps. \u6709\u53ef\u80fd\u4ee5\u540e\u5f00\u542f\u673a\u5668\u540e\u8fde\u4e0d\u4e0a\u7f51\uff0c\u53ef\u80fd\u662f\u4f60\u7684ip\u88ab\u522b\u7684\u673a\u5668\u5360\u4e86\uff0c\u89e3\u51b3\u65b9\u6848\u662f \u4e0d\u5173\u7535\u8111 \u3002 \u5fc5\u8981\u8bbe\u7f6e \u00b6 Win + Q \u641c\u7d22 \u767b\u5f55\u9009\u9879 \u8bbe\u7f6e\u4e2a\u5bc6\u7801 \u3010\u6211\u7684\u7535\u8111\u3011\u53f3\u952e\u3010\u5c5e\u6027\u3011\uff0c\u6700\u5de6\u8fb9\u3010\u8fdc\u7a0b\u8bbe\u7f6e\u3011\uff0c\u2714\u5141\u8bb8\u8fdc\u7a0b\u8fde\u63a5\u5230\u6b64\u8ba1\u7b97\u673a(L) Win + Q \u641c\u7d22 \u5b89\u5168\u4e2d\u5fc3* ----> \u9632\u706b\u5899 ** ----> \u5173\u95ed\u57df\u9632\u706b\u5899 \u8fde\u63a5 \u00b6 Win + R \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4 mstsc /v 192.168.0.136 \u5176\u4ed6\u95ee\u9898 \u00b6 win10\u7684\u5bb6\u5ead\u7248\u662f\u6ca1\u6709\u7ec4\u7b56\u7565\u7684 \u8fde\u63a5\u5361\u987f\u95ee\u9898 \u9996\u5148\u5728\u5ba2\u6237\u7aef\u4e0a\uff0c\u641c\u7d22\u7b56\u7565\u7ec4\u8fdb\u5165\u7b56\u7565\u7ec4\u7f16\u8f91\u7a97\u53e3\uff0c\u6253\u5f00\u8ba1\u7b97\u673a\u914d\u7f6e->\u7ba1\u7406\u6a21\u677f->Windows\u7ec4\u4ef6->\u8fdc\u7a0b\u684c\u9762\u670d\u52a1->\u8fdc\u7a0b\u684c\u9762\u8fde\u63a5\u5ba2\u6237\u7aef->\u5173\u95ed\u5ba2\u6237\u7aef\u4e0a\u7684UDP->\u542f\u7528\uff1b \u7136\u540e\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\uff0c\u540c\u6837\u8fdb\u5165\u7b56\u7565\u7ec4\u7f16\u8f91\u7a97\u53e3\uff0c\u6253\u5f00\u8ba1\u7b97\u673a\u914d\u7f6e->\u7ba1\u7406\u6a21\u677f->Windows\u7ec4\u4ef6->\u8fdc\u7a0b\u684c\u9762\u670d\u52a1->\u8fdc\u7a0b\u684c\u9762\u4f1a\u8bdd\u4e3b\u673a->\u8fde\u63a5->\u9009\u62e9RDP\u4f20\u8f93\u534f\u8bae->\u542f\u7528\u5e76\u9009\u62e9\u4ec5\u4f7f\u7528TCP\uff1b \u4e24\u53f0\u673a\u5668\u90fd\u91cd\u542f\u4e00\u4e0b\uff0c\u518d\u8fde\u63a5\uff0c\u5c31\u4e0d\u4f1a\u5361\u987f\u4e86","title":"\u5982\u4f55\u6109\u5feb\u7684\u9b42\u7a7f\u5230\u516c\u53f8\u2014\u2014\u5185\u7f51\u8fde\u63a5\u6307\u5357"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#_1","text":"","title":"\u5982\u4f55\u6109\u5feb\u7684\u9b42\u7a7f\u5230\u516c\u53f8\u2014\u2014\u5185\u7f51\u8fde\u63a5\u6307\u5357"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#_2","text":"\u516c\u53f8\u6709VPN\u8fde\u63a5\u5230\u5185\u7f51","title":"\u9996\u5148\u5fc5\u8981\u8981\u6c42"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#ip","text":"\u53c2\u8003: [windows\u4e0b\u9762\u56fa\u5b9a\u672c\u5730ip] * \u67e5\u8be2\u673a\u5668ip (win + R \u53ec\u5524)cmd \u4e0b ifconfig.exe \u56fa\u5b9a\u673a\u5668ip \u8fd9\u91cc\u5efa\u8bae\u56fa\u5b9a\u4e0b\u81ea\u5df1\u673a\u5668\u7684ip,\u907f\u514d\u91cd\u542fip\u6539\u4e86\u3002\u8bf7\u4f7f\u7528\u4f60\u67e5\u8be2\u7684ip\u56fa\u5b9a\u3002 1. \u53f3\u952e\u7f51\u7edc->\u6253\u5f00\u7f51\u7edc\u548c\u5171\u4eab\u4e2d\u5fc3->\u9009\u62e9\u4f60\u6b63\u8fde\u63a5\u7684\u7f51\u7edc->\u5c5e\u6027->\u53cc\u51fbTcp/ipv4\uff1b 2. \u8bbe\u7f6eip\u548c\u63a9\u7801\uff0c\u53ca\u7f51\u5173\uff0c\u7f51\u5173\u53ef\u4ee5\u5728cmd\u91cc\u9762\u8f93\u5165ipconfig\u5373\u53ef\u770b\u5230 3. ifconfig.exe\u9a8c\u8bc1 ps. \u6709\u53ef\u80fd\u4ee5\u540e\u5f00\u542f\u673a\u5668\u540e\u8fde\u4e0d\u4e0a\u7f51\uff0c\u53ef\u80fd\u662f\u4f60\u7684ip\u88ab\u522b\u7684\u673a\u5668\u5360\u4e86\uff0c\u89e3\u51b3\u65b9\u6848\u662f \u4e0d\u5173\u7535\u8111 \u3002","title":"\u83b7\u53d6\u673a\u5668ip"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#_3","text":"Win + Q \u641c\u7d22 \u767b\u5f55\u9009\u9879 \u8bbe\u7f6e\u4e2a\u5bc6\u7801 \u3010\u6211\u7684\u7535\u8111\u3011\u53f3\u952e\u3010\u5c5e\u6027\u3011\uff0c\u6700\u5de6\u8fb9\u3010\u8fdc\u7a0b\u8bbe\u7f6e\u3011\uff0c\u2714\u5141\u8bb8\u8fdc\u7a0b\u8fde\u63a5\u5230\u6b64\u8ba1\u7b97\u673a(L) Win + Q \u641c\u7d22 \u5b89\u5168\u4e2d\u5fc3* ----> \u9632\u706b\u5899 ** ----> \u5173\u95ed\u57df\u9632\u706b\u5899","title":"\u5fc5\u8981\u8bbe\u7f6e"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#_4","text":"Win + R \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4 mstsc /v 192.168.0.136","title":"\u8fde\u63a5"},{"location":"%E9%9A%8F%E7%AC%94/%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%AD%82%E7%A9%BF%E5%88%B0%E5%85%AC%E5%8F%B8%E2%80%94%E2%80%94%E5%86%85%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%8C%87%E5%8D%97/#_5","text":"win10\u7684\u5bb6\u5ead\u7248\u662f\u6ca1\u6709\u7ec4\u7b56\u7565\u7684 \u8fde\u63a5\u5361\u987f\u95ee\u9898 \u9996\u5148\u5728\u5ba2\u6237\u7aef\u4e0a\uff0c\u641c\u7d22\u7b56\u7565\u7ec4\u8fdb\u5165\u7b56\u7565\u7ec4\u7f16\u8f91\u7a97\u53e3\uff0c\u6253\u5f00\u8ba1\u7b97\u673a\u914d\u7f6e->\u7ba1\u7406\u6a21\u677f->Windows\u7ec4\u4ef6->\u8fdc\u7a0b\u684c\u9762\u670d\u52a1->\u8fdc\u7a0b\u684c\u9762\u8fde\u63a5\u5ba2\u6237\u7aef->\u5173\u95ed\u5ba2\u6237\u7aef\u4e0a\u7684UDP->\u542f\u7528\uff1b \u7136\u540e\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\uff0c\u540c\u6837\u8fdb\u5165\u7b56\u7565\u7ec4\u7f16\u8f91\u7a97\u53e3\uff0c\u6253\u5f00\u8ba1\u7b97\u673a\u914d\u7f6e->\u7ba1\u7406\u6a21\u677f->Windows\u7ec4\u4ef6->\u8fdc\u7a0b\u684c\u9762\u670d\u52a1->\u8fdc\u7a0b\u684c\u9762\u4f1a\u8bdd\u4e3b\u673a->\u8fde\u63a5->\u9009\u62e9RDP\u4f20\u8f93\u534f\u8bae->\u542f\u7528\u5e76\u9009\u62e9\u4ec5\u4f7f\u7528TCP\uff1b \u4e24\u53f0\u673a\u5668\u90fd\u91cd\u542f\u4e00\u4e0b\uff0c\u518d\u8fde\u63a5\uff0c\u5c31\u4e0d\u4f1a\u5361\u987f\u4e86","title":"\u5176\u4ed6\u95ee\u9898"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/","text":"\u601d\u7ef4\u4ea7\u54c1\u8bfe \u00b6 \u601d\u7ef4\u4ea7\u54c1\u8bfe \u300a\u6881\u5b81\u00b7\u4ea7\u54c1\u601d\u7ef430\u8bb2\u300b\u5168\u96c6 02 \u00b6 \u611f\u77e5\u5c42 \u89d2\u8272\u5c42 \u8d44\u6e90\u5c42 \u80fd\u529b\u5708 \u5b58\u5728\u611f 03 \u00b6 \u540c\u7406\u5fc3 \u6ee1\u8db3 \u5c3a\u5ea6 \u6109\u60a6 \u9700\u6c42\u88ab\u6ee1\u8db3 \u723d \u79ef\u538b\u8d1f\u9762\u540e\u4e00\u77ac\u95f4\u88ab\u6ee1\u8db3 \u4e0d\u723d \u4e0d\u6ee1\u8db3 04 \u00b6 \u88ab\u4fb5\u72af\u611f \u6124\u6012 \u662f\u4e00\u79cd\u6050\u60e7 \u7126\u8651 \u662f\u4e00\u79cd\u6301\u4e45\u7684\u6050\u60e7 \u6050\u60e7\u662f\u8fb9\u754c \u6346\u4f4f\u4eba\u7684\u624b\u811a \u6050\u60e7\u662f\u52a8\u529b \u6050\u60e7\u662f\u75db\u70b9 \u8981\u4e48\u6109\u60a6 \u8981\u4e48 \u6050\u60e7 \u4e0d\u8981\u4e0d\u75db\u4e0d\u75d2 \u4e3a\u6b64\u4f1a\u82b1\u94b1 \u6240\u4ee5\u76f4\u9762\u6050\u60e7 05 \u00b6 \u57fa\u4e8e\u610f\u8bc6 \u53ea\u80fd\u8ba9\u5bf9\u65b9\u89c9\u5f97\u5360\u4e86\u4fbf\u5b9c \u610f\u8bc6\u5373\u9632\u5fa1 \u8d8a\u601d\u8003\u8d8a\u987e\u8651 \u4e86\u89e3\u4e00\u4e2a\u4eba\u7684\u5173\u7cfb\u6a21\u5f0f \u4e86\u89e3\u7ae5\u5e74\u548c\u4eb2\u8fd1\u4eba\u7684\u4e92\u52a8\u6a21\u5f0f \u50ac\u7720 \uff1a \u5fae\u7b11 \u91cd\u590d 06 \u00b6 \u5f62\u6210\u4eba\u683c 1. \u786e\u5b9a\u76ee\u6807 2. \u5efa\u7acb\u6050\u60e7\u7684\u8fb9\u754c 3. \u653e\u5165\u6e05\u6670\u7684\u6807\u7684 4. \u7ed9\u4e88\u7ea2\u5229\uff0c\u7136\u540e\u8ba9\u5b83\u4ea7\u751f\u8def\u5f84\u4f9d\u8d56 5. \u4e0d\u65ad\u91cd\u590d \u7528\u4e8e \u4fbf\u4e8e\u88ab\u7ba1\u7406\uff08\u6559\u80b2\u662f\u53cd\u4eba\u6027\u7684\uff09 \u4e00\u4e2a\u4eba\u5fd9\u4e86\u4e00\u5929\u56de\u5230\u5bb6\uff0c\u5750\u5728\u6c99\u53d1\u4e0a\uff0c\u638f\u51fa\u624b\u673a\u60f3\u4f11\u606f\u4e00\u4f1a\u513f\u7684\u65f6\u5019\uff0c\u51ed\u4ec0\u4e48\u4f60\u8ba4\u4e3a\u5979\u201c\u5e94\u8be5\u201d\u7ee7\u7eed\u5b8c\u6210\u89d2\u8272\uff0c\u5e76\u4e14\u6309\u7167\u89d2\u8272\u7684\u8bbe\u5b9a\u70b9\u70b9\u6233\u6233\u4f60\u7684\u4ea7\u54c1\u5462\uff1f \u4eba\u5176\u5b9e\u53ea\u6709\u5728\u538b\u529b\u975e\u5e38\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u4f1a\u53bb\u626e\u6f14\u89d2\u8272\u3002\u9664\u975e\u4f60\u80fd\u7ed9\u4ed6\u7684\u538b\u529b\u975e\u5e38\u5230\u4f4d\uff0c\u5426\u5219\u5c31\u4e0d\u8981\u5bf9\u4ed6\u505a\u89d2\u8272\u5316\u9884\u671f\u3002 \u4eba\u662f\u56e0\u4e3a\u8bad\u7ec3\u548c\u538b\u529b\u624d\u6210\u4e3a\u89d2\u8272\u7684\uff0c\u800c\u96c6\u4f53\u5c31\u662f\u89d2\u8272\u7684\u805a\u96c6\u3002 07 \u00b6 \u4e00\u79cd\u4eba\u66f4\u5173\u6ce8\u6211\u559c\u6b22\u4ec0\u4e48\uff0c\u800c\u53e6\u4e00\u79cd\u4eba\u66f4\u5173\u6ce8\u4ec0\u4e48\u662f\u5bf9\u7684\u3002 \u81ea\u6211\uff1a\u611f\u53d7\u529b\u5f3a\u3001\u66b4\u8e81\u3001\u60c5\u7eea\u5316\u3001\u65e0\u65f6\u95f4\u89c2\u5ff5\u3001\u81ea\u6211\u3001\u81ea\u79c1 \u9760\u6109\u60a6\u9a71\u52a8\u7684\u4eba\uff0c\u5f80\u5f80\u81ea\u6211\u3002 \u9760\u6050\u60e7\u9a71\u52a8\u7684\u4eba\uff0c\u5f80\u5f80\u81ea\u5f8b\u3002 08 \u00b6 \u673a\u4f1a\u5224\u65ad \u9644\u7740\u7684\u7ecf\u6d4e\u4f53 \u70b9\u7684\u52aa\u529b\u6210\u529f \u70b9\u7ebf\u9762\u4f53\u5b9a\u4f4d\u4e2a\u4eba\u5de5\u4f5c 09 \u00b6 \u957f\u671f\u5173\u7cfb\u4e0d\u80fd\u9760\u95ea\u8000\u70b9 \u5e73\u5e38\u5c31\u597d \u6c42\u4e4b\u4e8e\u4e16 \u4e0d\u6c42\u4e8e\u4eba 10 \u00b6 \u70b9\u7ebf\u9762\u4f53 \u75db\u70b9 \u723d\u70b9 \u5373\u65f6\u6ee1\u8db3 \u75d2\u70b9 \u6ee1\u8db3\u865a\u62df\u81ea\u6211(\u60f3\u8c61\u4e2d\u7406\u60f3\u7684\u81ea\u5df1) 11 \u00b6 \u7528\u6237\u753b\u50cf \u7b2c\u4e00\u53ea\u7f8a \u5934\u7f8a(\u7f51\u7edc\u6548\u5e94\uff0c\u81ea\u7ec4\u7ec7) \u72fc \u7f51\u7edc\u6548\u5e94\u770b\u5934\u7f8a\u6570\u91cf \u5927\u660e(\u4eac\u4e1c) \u7b28\u7b28(\u6dd8\u5b9d) \u5c0f\u95f2(\u817e\u8baf) \u5373\u4f7f\u9762\u5bf9\u5343\u519b\u4e07\u9a6c \u4f60\u8981\u65a9\u6740\u7684\u53ea\u662f\u5bf9\u9762\u7684\u4e00\u4eba \u7528\u6237\u5fc3\u91cc\u5efa\u8bbe(\u9884\u671f) 12 \u00b6 \u573a\u666f \u60c5\u7eea\u89e6\u53d1 \u80fd\u89e6\u53d1\u7528\u6237\u60c5\u7eea\u7684\u573a\u666f \u624d\u662f\u6d41\u91cf\u5165\u53e3 \u573a\u666f\u89e6\u53d1\u60c5\u7eea \u7528\u6237\u9047\u5230\u8fd9\u4e2a\u95ee\u9898 \u4f1a\u60f3\u5230\u4ec0\u4e48\u540d\u5b57 \u573a\u666f = \u573a + \u666f =\u7a7a\u95f4+\u65f6\u95f4\u7684\u70b9\u4e0a \u60c5\u7eea\u51fa\u53d1 \u4e92\u8054\u7f51\u5546\u4e1a = \u4ea7\u54c1\u7684\u6bd4\u62fc \u6d41\u91cf\u7684\u4e89\u593a \u8f6c\u5316\u7387\u7684\u4f18\u5316 \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898 \u4e3a\u8c01\u89e3\u51b3\u95ee\u9898 \u4ed6\u5373\u523b\u6ee1\u8db3\u4e86\u4e48 \u591a\u5c11\u4eba\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898 \u76ee\u524d \u5927\u5bb6\u600e\u4e48\u89e3\u51b3\u7684 \u6211\u7684\u7ade\u4e89\u529b \u7528\u6237\u5728\u4ec0\u4e48\u573a\u666f\u51fa\u53d1\u60c5\u7eea \u7528\u6237\u4f1a\u60f3\u5230\u8c01 \uff08\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \u4e3a\u8c01\u89e3\u51b3 \u591a\u5c11\u4eba \u522b\u4eba\u600e\u4e48\u89e3\u51b3 \u6211\u7684\u4e3a\u4ec0\u4e48\u80fd\u8d62 \u7528\u6237\u4f1a\u5728\u4ec0\u4e48\uff09 13 \u00b6 \u7cfb\u7edf\u80fd\u529b \u670d\u52a1 \u7528\u6237\u83b7\u5f97 \u7528\u6237\u6ee1\u8db3 \u4e3a\u4e2d\u5fc3 \u786e\u5b9a\u6027 \u6838\u5fc3\u670d\u52a1 \u6838\u5fc3\u8d44\u6e90 \u6218\u7565\u5224\u65ad \u7528\u6237\u533a\u5206 \u533a\u5206\u9700\u6c42 \u56de\u6536\u6210\u672c \u670d\u52a1\u6210\u672c \u7a33\u5b9a\u7684\u670d\u52a1\u7528\u6237\u7684\u7279\u6027 14 \u00b6 \u5efa\u8bbe\u7cfb\u7edf\u80fd\u529b \u7528\u6237\u4f9d\u8d56\u4ea7\u54c1\u7684\u786e\u5b9a\u6027 \u6548\u7387 \u7528\u6237\u4f53\u9a8c \u4e3a\u7cfb\u7edf\u80fd\u529b\u7684\u6838\u5fc3\u6307\u6807 \u6570\u5b57\u5316 \u7ed9\u4eba\u538b\u529b \u4f01\u4e1a\u7684\u5b58\u5728 \u5c31\u662f\u793e\u4f1a\u6548\u7387\u5206\u5de5\u7684\u4ea7\u7269 \u62fc\u624b\u673a\u7684\u65f6\u5019 \u5c0f\u7c73\u5728\u62fc\u6548\u7387 15 \u00b6 \u8fed\u4ee3 16 \u00b6 \u6838\u5fc3\u529f\u80fd work \u6bd4\u4ec0\u4e48\u90fd\u91cd\u8981 \u7528\u6237\u81ea\u4e3b\u66f4\u65b0 \u65b0\u70b9\u5438\u5f15\u4eba \u5173\u7cfb\u94fe \u76f8\u540c\u7279\u8d28 \u672a\u6765\u7684\u51e0\u5e74\u4f60 \u4f60\u4f1a\u7528\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f \u6301\u7eed\u8fed\u4ee3 17 \u00b6 \u6b7b \u9876 \u501f \u8d62 \u666e\u901a\u5458\u5de5\uff1a\u660e\u786e\u77e5\u9053\u5e38\u89c1\u98ce\u9669 \u4ea7\u54c1\u7ecf\u7406\uff1a\u5177\u5907\u98ce\u9669\u89c4\u907f\u610f\u8bc6 \u603b\u76d1\uff1a\u6709\u98ce\u63a7\u80fd\u529b \u66f4\u9ad8\u7ea7\uff1a\u80fd\u64cd\u4f5c\u6709\u98ce\u9669\u7684\u6267\u884c \u7528\u5411\u6b7b\u4e4b\u5fc3\u5de5\u4f5c \uff08\u770b\u751f\u6b7b\u95ee\u4f60\uff09 \u7cfb\u7edf\u80fd\u529b\u662f\u4f60\u7684\u672c\u5730 \u7504\u522b\u5173\u952e\u4eba\u7269 18 \u00b6 \u7528\u6237\u4f53\u9a8c \u7528\u6237\u4f53\u9a8c\u8981\u7d20 \u4e94\u4e2a\u5c42\u6b21 \u611f\u77e5\u5c42 \u89d2\u8272\u6846\u67b6\u5c42 \u8d44\u6e90\u7ed3\u6784\u5c42 \u80fd\u529b\u8303\u56f4\u5c42 \u6218\u7565\u5b58\u5728\u5c42 \u6218\u7565\u5b58\u5728\u5c42 \u6211\u4eec\u8981\u901a\u8fc7\u8fd9\u4e2a\u4ea7\u54c1\u5f97\u5230\u4ec0\u4e48 \u6211\u4eec\u7528\u6237\u80fd\u5f97\u5230\u4ec0\u4e48 \uff08\u522b\u4eba\u80fd\u591f\u6301\u7eed\u7684\u4f9d\u8d56\u4f60 \uff09 \u80fd\u529b\u5708\uff1a\u505a\u5230\u90a3\u4e9b \u90a3\u4e9b\u4e0d\u505a \u8d44\u6e90\u7ed3\u6784\u5c42\uff1a\u8c01\u662f\u654c\u4eba \u8c01\u662f\u670b\u53cb \u89d2\u8272\u6846\u67b6 \u611f\u77e5\u5c42 19 \u00b6 \u4e0d\u7528\u5168\u5c40\u578b \u4e00\u4e2a\u7528\u6237\u7684\u89c6\u89d2 \u7528\u6237\u5730\u56fe\uff1a\u7528\u6237\u76ee\u6807 \u89e6\u70b9 \u4f7f\u7528\u8def\u5f84 \u7ed9\u76f8\u4f3c\u7684\u6545\u4e8b \u505a\u7528\u6237\u5730\u56fe \u7ed9\u7b28\u7b28 \u4e0d\u7ed9\u5927\u660e \u8c08\u7528\u6237\u4f53\u9a8c \u4e0d\u8c08\u6570\u636e \u5efa\u7acb\u4e00\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u6545\u4e8b \u6570\u636e\u6ca1\u6709\u903b\u8f91 \u6545\u4e8b\u6709\u903b\u8f91 \u5173\u7cfb=\u4fe1\u606f 20 \u00b6 \u8bbe\u8ba1\u670d\u52a1\u84dd\u56fe \u4e00\u773c\uff1a\u4e00\u773c\u770b\u5230\u76ee\u6807 \u4e00\u6761\u8def\uff1a\u6e05\u6670\u7684\u8def\u5f84 \u4e09\u4e2a\u70b9\uff1a\u5cf0\u503c+- \u7ec8\u503c \u5fcd\u8010\u5e95\u7ebf \u6709\u6982\u5ff5\u611f \u5370\u8c61\u7559\u5b58 \u4e0e\u5176\u66f4\u597d \u4e0d\u5982\u4e0d\u540c 21 \u00b6 \u6fc0\u52b1\u80fd\u529b \u6fc0\u52b1 \u6ee1\u8db3 \u4e0d\u786e\u5b9a\u7684\u723d\u70b9 \u786e\u5b9a\u7684\u723d\u70b9 \u7528\u6237\u7684\u6fc0\u52b1\u611f \u7528\u6237\u6fc0\u52b1\u673a\u5236 \u6fc0\u52b1\u7684\u53e0\u52a0 \u786e\u5b9a\u662f\u4f9d\u8d56 \u4e0d\u786e\u5b9a\u5c31\u662f\u4f24\u5bb3 \u81ea\u6211\u6ee1\u8db3\u6109\u60a6\u611f\u6765\u505a\u4e8b \u4e0d\u8981\u8ba9\u7528\u6237\u601d\u8003 \u964d\u4f4e\u8bbe\u5907\u95e8\u69db \u964d\u4f4e\u52a8\u4f5c\u95e8\u69db \u964d\u4f4e\u601d\u8003\u95e8\u69db \u964d\u4f4e\u65f6\u95f4\u95e8\u69db \u4eba\u4f1a\u4e0a\u763e \u5bf9\u786e\u5b9a\u6027\u6ee1\u8db3\u7684\u4f9d\u8d56 \u4e0a\u763e\u673a\u5236\u7684\u8bbe\u8ba1=\u6fc0\u52b1\u673a\u5236\u7684\u8bbe\u8ba1 \u5916\u5728\u6fc0\u52b1 \u5185\u5728\u6fc0\u52b1 \u8bbe\u8ba1\u591a\u5c11\u4e2a\u6fc0\u52b1\u70b9 22 \u00b6 \u540d\u5b57\u548c\u53e3\u7891 \uff08\u8bf4\u6587\u89e3\u5b57\uff09 \u540d\u5b57\u662f\u6700\u77ed\u7684\u5492\uff08\u675f\u7f1a \u7279\u5f81\uff09 \u7528\u94b1\u6216\u6743\u505a\u6760\u6746 \u53e3\u7891\u5c31\u662f\u628a\u4e8b\u60c5\u505a\u8fc7\u5934\uff08\u8d85\u8fc7\u9884\u671f\uff09 \u53e3\u7891\u662f\u4e00\u4e2a\u542c\u89c9\u6587\u6848\uff08\u63d0\u6d88\u8d39\u8005\u8bbe\u8ba1\u4ed6\u8981\u8bf4\u7684\u8bdd\uff09 23 \u00b6 \u521b\u65b0\u6a21\u5f0f \u4ea7\u54c1\u7ecf\u7406\uff1a\u521b\u9020\u7528\u6237\u4ef7\u503c\u4e3a\u5de5\u5177 \u6253\u7834\u65e7\u7684\u5229\u76ca\u5e73\u8861 \u5efa\u7acb\u5bf9\u5df1\u65b9\u6709\u5229\u7684\u65b0\u5229\u76ca\u94fe \u5efa\u7acb\u65b0\u5e73\u8861\u7684\u8fc7\u7a0b \u7528\u6237\u4ef7\u503c= \u65b0\u4f53\u9a8c-\u65e7\u4f53\u9a8c-\u53d8\u5316\u6210\u672c \u540c\u7eac\u5ea6\u7ade\u4e89 \u4f53\u91cf\u5927\u7684\u7684\u80dc \u964d\u7eac\u653b\u51fb \u8d44\u672c\u5f3a\u884c\u5408\u5e76 24 \u00b6 \u672a\u6765\u5df2\u6765 \u53ea\u662f\u5206\u5e03\u7684\u4e0d\u5747\u5300 \u7528\u5e38\u89c1\u914d\u4ef6\u8fed\u4ee3\uff08\u5e38\u7528\u6280\u672f \u5e38\u89c1\u914d\u4ef6\uff09 25 \u00b6 \u65b0\u8981\u7d20 \u4ece\u65b0\u8981\u7d20\u6362\u672c\u8d28 \u4e0d\u6362\u670d\u52a1 \u5148\u6709\u57fa\u7840\u4e0a \u4f18\u5316\u4f53\u9a8c\u6216\u6210\u672c\u7ed3\u6784 \u6216\u53d8\u9769\u5546\u4e1a\u903b\u8f91 26 \u00b6 \u5546\u4e1a\u6a21\u5f0f\u7684\u4e09\u7ea7\u706b\u7bad \u7b2c\u4e00\u7ea7\u706b\u7bad\uff1a\u642d\u5efa\u9ad8\u9891\u7684\u5934\u90e8\u6d41\u91cf \u7b2c\u4e8c\u7ea7\u706b\u7bad\uff1a\u6c89\u6dc0\u67d0\u7c7b\u7528\u6237\u7684\u5546\u4e1a\u573a\u666f \u7b2c\u4e09\u7ea7\u706b\u7bad\uff1a\u5b8c\u6210\u5546\u4e1a\u95ed\u73af 27 \u00b6 \u98a0\u8986\u5f0f\u521b\u65b0 \u4ef7\u503c\u7f51 \u771f\u6b63\u51b3\u5b9a\u4f01\u4e1a\u672a\u6765\u53d1\u5c55\u65b9\u5411\u7684\u662f\u5e02\u573a\u4ef7\u503c\u7f51 \u771f\u6b63\u4e3b\u5bfc\u4f01\u4e1a\u53d1\u5c55\u8fdb\u7a0b\u7684\u662f\u673a\u6784\u4ee5\u5916\u7684\u529b\u91cf * \u4f01\u4e1a\u771f\u6b63\u7684\u7ba1\u7406\u8005\uff0c\u9700\u8981\u8bc6\u522b\u81ea\u5df1\u8d56\u4ee5\u751f\u5b58\u7684\u4ef7\u503c\u7f51\uff0c\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u7ec4\u7ec7\uff0c\u4e0e\u8fd9\u4e2a\u4ef7\u503c\u7f51\u8fdb\u884c\u8d44\u6e90\u5bf9\u63a5 \u4ef7\u503c\u7f51\uf9e9\uff0c\u81f3\u5c11\u6709\u4e09\u4e2a\u89d2\u8272\uff1a\u4e00\u662f\u5ba2\u6237\uff0c\u4e8c\u662f\u5bf9\u624b\uff0c\u4e09\u662f\u6295\u8d44\u4eba \u5ba2\u6237\u662f\u6211\u4eec\u6700\u91cd\u8981\u7684\u8d44\u4ea7\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u6211\u4eec\u6700\u4e3b\u8981\u7684\u521b\u65b0\u76f2\u533a \u6211\u4eec\u5e94\u8be5\u8b66\u9192\uff0c\u6709\u65f6\u5019\u771f\u6b63\u7f20\u4f4f\u4f60\u89c6\u91ce\u7684\uff0c\u53ef\u80fd\u4e0d\u662f\u5ba2\u6237\uff0c\u800c\u662f\u4f60\u7684\u5bf9\u624b \u5728\u8d44\u672c\u7684\u589e\u957f\u538b\u529b\u4e0b\uff0c\u5927\u516c\u53f8\u5f88\u96be\u8fdb\u5165\u5c0f\u5e02\u573a \u5c0f\u5e02\u573a\u4e00\u65e6\u542f\u52a8\u6307\u6570\u7ea7\u7684\u7206\u53d1\u589e\u957f\uff0c\u5927\u516c\u53f8\u5c31\u518d\u4e5f\u8ffd\u4e0d\u4e0a\u4e86 \u770b\u4e0a\u53bb\u662f\u4e00\u6837\u7684\u4ea7\u54c1\uff0c\u4f46\u4ee3\u8868\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u4e24\u5f20\u4ef7\u503c\u7f51 \u8986\u5f0f\u521b\u65b0\u6700\u91cd\u8981\u7684\u6807\u51c6\u5c31\u662f\uff0c\u662f\u5426\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u4ef7\u503c\u7f51 28 \u00b6 \u4e2d\u89c2 \u5fae\u89c2 \u5b8f\u89c2 \u5957\u8def \u662f\u524d\u4eba\u603b\u7ed3\u7684\u6709\u6548\u7ecf\u9a8c\uff0c\u7ec3\u597d\u5957\u8def\u53ef\u4ee5\u81ea\u6211\u6392\u67e5\u95ee\u9898\uff0c\u4fbf\u4e8e\u548c\u56e2\u961f\u6c9f\u901a \u9760\u5957\u8def\u6210\u4e0d\u4e86\u9ad8\u624b \u5fae\u89c2\u4f53\u611f\uff1a\u771f\u5b9e\u5730\u611f\u77e5\u6bcf\u4e00\u4e2a\u5fae\u5c0f\u77ac\u95f4 \u6700\u6311\u5254\u7684\u4eba\uff0c\u5176\u5b9e\u5c31\u662f\u6700\u6709\u9632\u5fa1\u610f\u8bc6\u7684\u4eba \u5982\u679c\u4ea7\u54c1\u7a81\u7136\u78b0\u89e6\u7528\u6237\u7684\u67d0\u4e2a\u610f\u8bc6\u795e\u7ecf\uff0c\u8ba9\u7528\u6237\u4ea7\u751f\u9632\u5fa1\uff0c\u90a3\u6d41\u5931\u7684\u51e0\u7387\u5c31\u4f1a\u52a0\u5927 \u5efa\u7acb\u7ec6\u5fae\u7684\u5fae\u89c2\u4f53\u611f \u51e0\u5bb6\u5b9a\u4f4d\u76f8\u4f3c\u3001\u4f53\u9a8c\u76f8\u4f3c\u7684\u4ea7\u54c1\uff0c\u9760\u4f18\u5316\u7528\u6237\u4f53\u9a8c\uff0c\u5176\u5b9e\u662f\u65e0\u6cd5\u7ec8\u7ed3\u6218\u4e89\u7684 \u5927\u4ed7\u62fc\u80dc\u8d1f\uff0c\u9760\u7684\u662f\u5b8f\u89c2\u80fd\u529b \u6ca1\u6709\u5fae\u89c2\u4f53\u611f\uff0c\u9760\u5957\u8def\u5224\u65ad\uff0c\u5c31\u662f\u81ea\u6b3a\u6b3a\u4eba \u4f46\u6253\u5927\u4ed7\uff0c\u505a\u9876\u7ea7\u9ad8\u624b\uff0c\u5219\u8981\u6c42\u5b8f\u89c2\u80fd\u529b\u4e5f\u8981\u5f3a 29 \u00b6 \u4ea7\u54c1\u662f\u4e00\u79cd\u73b0\u5b9e\u80fd\u529b \u98ce\u53e3 \u9700\u8981\u63a0\u593a\u6027 \u4e09\u7ea7\u7ec4\u7ec7 \u5171\u540c\u89c4\u5219 \u4e8c\u7ea7\u7ec4\u7ec7 \u5171\u540c\u5229\u76ca \u4e00\u7ea7\u7ec4\u7ec7 \u5171\u540c\u4fe1\u4ef0 \u9876\u7ea7\u7ec4\u7ec7 \u81f3\u60c5\u81f3\u6027 \u786e\u5b9a\u6027\u662f\u5173\u952e \u786e\u5b9a\u611f\u4f1a\u8ba9\u4eba\u89c9\u5f97\u8212\u9002\u4e0e\u5b89\u5168 \u4f9d\u8d56=\u771f\u5b9e\u7684\u957f\u671f\u5173\u7cfb \u505a\u6709\u786e\u5b9a\u611f\u7684\u4e8b\u60c5 \u4eba\u751f\u903b\u8f91\u5927\u4e8e\u5546\u4e1a\u903b\u8f91 30 \u00b6 \u7c89\u4e1d\u7ecf\u6d4e","title":"\u601d\u7ef4\u4ea7\u54c1\u8bfe"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#_1","text":"\u601d\u7ef4\u4ea7\u54c1\u8bfe \u300a\u6881\u5b81\u00b7\u4ea7\u54c1\u601d\u7ef430\u8bb2\u300b\u5168\u96c6","title":"\u601d\u7ef4\u4ea7\u54c1\u8bfe"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#02","text":"\u611f\u77e5\u5c42 \u89d2\u8272\u5c42 \u8d44\u6e90\u5c42 \u80fd\u529b\u5708 \u5b58\u5728\u611f","title":"02"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#03","text":"\u540c\u7406\u5fc3 \u6ee1\u8db3 \u5c3a\u5ea6 \u6109\u60a6 \u9700\u6c42\u88ab\u6ee1\u8db3 \u723d \u79ef\u538b\u8d1f\u9762\u540e\u4e00\u77ac\u95f4\u88ab\u6ee1\u8db3 \u4e0d\u723d \u4e0d\u6ee1\u8db3","title":"03"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#04","text":"\u88ab\u4fb5\u72af\u611f \u6124\u6012 \u662f\u4e00\u79cd\u6050\u60e7 \u7126\u8651 \u662f\u4e00\u79cd\u6301\u4e45\u7684\u6050\u60e7 \u6050\u60e7\u662f\u8fb9\u754c \u6346\u4f4f\u4eba\u7684\u624b\u811a \u6050\u60e7\u662f\u52a8\u529b \u6050\u60e7\u662f\u75db\u70b9 \u8981\u4e48\u6109\u60a6 \u8981\u4e48 \u6050\u60e7 \u4e0d\u8981\u4e0d\u75db\u4e0d\u75d2 \u4e3a\u6b64\u4f1a\u82b1\u94b1 \u6240\u4ee5\u76f4\u9762\u6050\u60e7","title":"04"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#05","text":"\u57fa\u4e8e\u610f\u8bc6 \u53ea\u80fd\u8ba9\u5bf9\u65b9\u89c9\u5f97\u5360\u4e86\u4fbf\u5b9c \u610f\u8bc6\u5373\u9632\u5fa1 \u8d8a\u601d\u8003\u8d8a\u987e\u8651 \u4e86\u89e3\u4e00\u4e2a\u4eba\u7684\u5173\u7cfb\u6a21\u5f0f \u4e86\u89e3\u7ae5\u5e74\u548c\u4eb2\u8fd1\u4eba\u7684\u4e92\u52a8\u6a21\u5f0f \u50ac\u7720 \uff1a \u5fae\u7b11 \u91cd\u590d","title":"05"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#06","text":"\u5f62\u6210\u4eba\u683c 1. \u786e\u5b9a\u76ee\u6807 2. \u5efa\u7acb\u6050\u60e7\u7684\u8fb9\u754c 3. \u653e\u5165\u6e05\u6670\u7684\u6807\u7684 4. \u7ed9\u4e88\u7ea2\u5229\uff0c\u7136\u540e\u8ba9\u5b83\u4ea7\u751f\u8def\u5f84\u4f9d\u8d56 5. \u4e0d\u65ad\u91cd\u590d \u7528\u4e8e \u4fbf\u4e8e\u88ab\u7ba1\u7406\uff08\u6559\u80b2\u662f\u53cd\u4eba\u6027\u7684\uff09 \u4e00\u4e2a\u4eba\u5fd9\u4e86\u4e00\u5929\u56de\u5230\u5bb6\uff0c\u5750\u5728\u6c99\u53d1\u4e0a\uff0c\u638f\u51fa\u624b\u673a\u60f3\u4f11\u606f\u4e00\u4f1a\u513f\u7684\u65f6\u5019\uff0c\u51ed\u4ec0\u4e48\u4f60\u8ba4\u4e3a\u5979\u201c\u5e94\u8be5\u201d\u7ee7\u7eed\u5b8c\u6210\u89d2\u8272\uff0c\u5e76\u4e14\u6309\u7167\u89d2\u8272\u7684\u8bbe\u5b9a\u70b9\u70b9\u6233\u6233\u4f60\u7684\u4ea7\u54c1\u5462\uff1f \u4eba\u5176\u5b9e\u53ea\u6709\u5728\u538b\u529b\u975e\u5e38\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u4f1a\u53bb\u626e\u6f14\u89d2\u8272\u3002\u9664\u975e\u4f60\u80fd\u7ed9\u4ed6\u7684\u538b\u529b\u975e\u5e38\u5230\u4f4d\uff0c\u5426\u5219\u5c31\u4e0d\u8981\u5bf9\u4ed6\u505a\u89d2\u8272\u5316\u9884\u671f\u3002 \u4eba\u662f\u56e0\u4e3a\u8bad\u7ec3\u548c\u538b\u529b\u624d\u6210\u4e3a\u89d2\u8272\u7684\uff0c\u800c\u96c6\u4f53\u5c31\u662f\u89d2\u8272\u7684\u805a\u96c6\u3002","title":"06"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#07","text":"\u4e00\u79cd\u4eba\u66f4\u5173\u6ce8\u6211\u559c\u6b22\u4ec0\u4e48\uff0c\u800c\u53e6\u4e00\u79cd\u4eba\u66f4\u5173\u6ce8\u4ec0\u4e48\u662f\u5bf9\u7684\u3002 \u81ea\u6211\uff1a\u611f\u53d7\u529b\u5f3a\u3001\u66b4\u8e81\u3001\u60c5\u7eea\u5316\u3001\u65e0\u65f6\u95f4\u89c2\u5ff5\u3001\u81ea\u6211\u3001\u81ea\u79c1 \u9760\u6109\u60a6\u9a71\u52a8\u7684\u4eba\uff0c\u5f80\u5f80\u81ea\u6211\u3002 \u9760\u6050\u60e7\u9a71\u52a8\u7684\u4eba\uff0c\u5f80\u5f80\u81ea\u5f8b\u3002","title":"07"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#08","text":"\u673a\u4f1a\u5224\u65ad \u9644\u7740\u7684\u7ecf\u6d4e\u4f53 \u70b9\u7684\u52aa\u529b\u6210\u529f \u70b9\u7ebf\u9762\u4f53\u5b9a\u4f4d\u4e2a\u4eba\u5de5\u4f5c","title":"08"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#09","text":"\u957f\u671f\u5173\u7cfb\u4e0d\u80fd\u9760\u95ea\u8000\u70b9 \u5e73\u5e38\u5c31\u597d \u6c42\u4e4b\u4e8e\u4e16 \u4e0d\u6c42\u4e8e\u4eba","title":"09"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#10","text":"\u70b9\u7ebf\u9762\u4f53 \u75db\u70b9 \u723d\u70b9 \u5373\u65f6\u6ee1\u8db3 \u75d2\u70b9 \u6ee1\u8db3\u865a\u62df\u81ea\u6211(\u60f3\u8c61\u4e2d\u7406\u60f3\u7684\u81ea\u5df1)","title":"10"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#11","text":"\u7528\u6237\u753b\u50cf \u7b2c\u4e00\u53ea\u7f8a \u5934\u7f8a(\u7f51\u7edc\u6548\u5e94\uff0c\u81ea\u7ec4\u7ec7) \u72fc \u7f51\u7edc\u6548\u5e94\u770b\u5934\u7f8a\u6570\u91cf \u5927\u660e(\u4eac\u4e1c) \u7b28\u7b28(\u6dd8\u5b9d) \u5c0f\u95f2(\u817e\u8baf) \u5373\u4f7f\u9762\u5bf9\u5343\u519b\u4e07\u9a6c \u4f60\u8981\u65a9\u6740\u7684\u53ea\u662f\u5bf9\u9762\u7684\u4e00\u4eba \u7528\u6237\u5fc3\u91cc\u5efa\u8bbe(\u9884\u671f)","title":"11"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#12","text":"\u573a\u666f \u60c5\u7eea\u89e6\u53d1 \u80fd\u89e6\u53d1\u7528\u6237\u60c5\u7eea\u7684\u573a\u666f \u624d\u662f\u6d41\u91cf\u5165\u53e3 \u573a\u666f\u89e6\u53d1\u60c5\u7eea \u7528\u6237\u9047\u5230\u8fd9\u4e2a\u95ee\u9898 \u4f1a\u60f3\u5230\u4ec0\u4e48\u540d\u5b57 \u573a\u666f = \u573a + \u666f =\u7a7a\u95f4+\u65f6\u95f4\u7684\u70b9\u4e0a \u60c5\u7eea\u51fa\u53d1 \u4e92\u8054\u7f51\u5546\u4e1a = \u4ea7\u54c1\u7684\u6bd4\u62fc \u6d41\u91cf\u7684\u4e89\u593a \u8f6c\u5316\u7387\u7684\u4f18\u5316 \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898 \u4e3a\u8c01\u89e3\u51b3\u95ee\u9898 \u4ed6\u5373\u523b\u6ee1\u8db3\u4e86\u4e48 \u591a\u5c11\u4eba\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898 \u76ee\u524d \u5927\u5bb6\u600e\u4e48\u89e3\u51b3\u7684 \u6211\u7684\u7ade\u4e89\u529b \u7528\u6237\u5728\u4ec0\u4e48\u573a\u666f\u51fa\u53d1\u60c5\u7eea \u7528\u6237\u4f1a\u60f3\u5230\u8c01 \uff08\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \u4e3a\u8c01\u89e3\u51b3 \u591a\u5c11\u4eba \u522b\u4eba\u600e\u4e48\u89e3\u51b3 \u6211\u7684\u4e3a\u4ec0\u4e48\u80fd\u8d62 \u7528\u6237\u4f1a\u5728\u4ec0\u4e48\uff09","title":"12"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#13","text":"\u7cfb\u7edf\u80fd\u529b \u670d\u52a1 \u7528\u6237\u83b7\u5f97 \u7528\u6237\u6ee1\u8db3 \u4e3a\u4e2d\u5fc3 \u786e\u5b9a\u6027 \u6838\u5fc3\u670d\u52a1 \u6838\u5fc3\u8d44\u6e90 \u6218\u7565\u5224\u65ad \u7528\u6237\u533a\u5206 \u533a\u5206\u9700\u6c42 \u56de\u6536\u6210\u672c \u670d\u52a1\u6210\u672c \u7a33\u5b9a\u7684\u670d\u52a1\u7528\u6237\u7684\u7279\u6027","title":"13"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#14","text":"\u5efa\u8bbe\u7cfb\u7edf\u80fd\u529b \u7528\u6237\u4f9d\u8d56\u4ea7\u54c1\u7684\u786e\u5b9a\u6027 \u6548\u7387 \u7528\u6237\u4f53\u9a8c \u4e3a\u7cfb\u7edf\u80fd\u529b\u7684\u6838\u5fc3\u6307\u6807 \u6570\u5b57\u5316 \u7ed9\u4eba\u538b\u529b \u4f01\u4e1a\u7684\u5b58\u5728 \u5c31\u662f\u793e\u4f1a\u6548\u7387\u5206\u5de5\u7684\u4ea7\u7269 \u62fc\u624b\u673a\u7684\u65f6\u5019 \u5c0f\u7c73\u5728\u62fc\u6548\u7387","title":"14"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#15","text":"\u8fed\u4ee3","title":"15"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#16","text":"\u6838\u5fc3\u529f\u80fd work \u6bd4\u4ec0\u4e48\u90fd\u91cd\u8981 \u7528\u6237\u81ea\u4e3b\u66f4\u65b0 \u65b0\u70b9\u5438\u5f15\u4eba \u5173\u7cfb\u94fe \u76f8\u540c\u7279\u8d28 \u672a\u6765\u7684\u51e0\u5e74\u4f60 \u4f60\u4f1a\u7528\u4ec0\u4e48\u6837\u7684\u65b9\u5f0f \u6301\u7eed\u8fed\u4ee3","title":"16"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#17","text":"\u6b7b \u9876 \u501f \u8d62 \u666e\u901a\u5458\u5de5\uff1a\u660e\u786e\u77e5\u9053\u5e38\u89c1\u98ce\u9669 \u4ea7\u54c1\u7ecf\u7406\uff1a\u5177\u5907\u98ce\u9669\u89c4\u907f\u610f\u8bc6 \u603b\u76d1\uff1a\u6709\u98ce\u63a7\u80fd\u529b \u66f4\u9ad8\u7ea7\uff1a\u80fd\u64cd\u4f5c\u6709\u98ce\u9669\u7684\u6267\u884c \u7528\u5411\u6b7b\u4e4b\u5fc3\u5de5\u4f5c \uff08\u770b\u751f\u6b7b\u95ee\u4f60\uff09 \u7cfb\u7edf\u80fd\u529b\u662f\u4f60\u7684\u672c\u5730 \u7504\u522b\u5173\u952e\u4eba\u7269","title":"17"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#18","text":"\u7528\u6237\u4f53\u9a8c \u7528\u6237\u4f53\u9a8c\u8981\u7d20 \u4e94\u4e2a\u5c42\u6b21 \u611f\u77e5\u5c42 \u89d2\u8272\u6846\u67b6\u5c42 \u8d44\u6e90\u7ed3\u6784\u5c42 \u80fd\u529b\u8303\u56f4\u5c42 \u6218\u7565\u5b58\u5728\u5c42 \u6218\u7565\u5b58\u5728\u5c42 \u6211\u4eec\u8981\u901a\u8fc7\u8fd9\u4e2a\u4ea7\u54c1\u5f97\u5230\u4ec0\u4e48 \u6211\u4eec\u7528\u6237\u80fd\u5f97\u5230\u4ec0\u4e48 \uff08\u522b\u4eba\u80fd\u591f\u6301\u7eed\u7684\u4f9d\u8d56\u4f60 \uff09 \u80fd\u529b\u5708\uff1a\u505a\u5230\u90a3\u4e9b \u90a3\u4e9b\u4e0d\u505a \u8d44\u6e90\u7ed3\u6784\u5c42\uff1a\u8c01\u662f\u654c\u4eba \u8c01\u662f\u670b\u53cb \u89d2\u8272\u6846\u67b6 \u611f\u77e5\u5c42","title":"18"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#19","text":"\u4e0d\u7528\u5168\u5c40\u578b \u4e00\u4e2a\u7528\u6237\u7684\u89c6\u89d2 \u7528\u6237\u5730\u56fe\uff1a\u7528\u6237\u76ee\u6807 \u89e6\u70b9 \u4f7f\u7528\u8def\u5f84 \u7ed9\u76f8\u4f3c\u7684\u6545\u4e8b \u505a\u7528\u6237\u5730\u56fe \u7ed9\u7b28\u7b28 \u4e0d\u7ed9\u5927\u660e \u8c08\u7528\u6237\u4f53\u9a8c \u4e0d\u8c08\u6570\u636e \u5efa\u7acb\u4e00\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u6545\u4e8b \u6570\u636e\u6ca1\u6709\u903b\u8f91 \u6545\u4e8b\u6709\u903b\u8f91 \u5173\u7cfb=\u4fe1\u606f","title":"19"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#20","text":"\u8bbe\u8ba1\u670d\u52a1\u84dd\u56fe \u4e00\u773c\uff1a\u4e00\u773c\u770b\u5230\u76ee\u6807 \u4e00\u6761\u8def\uff1a\u6e05\u6670\u7684\u8def\u5f84 \u4e09\u4e2a\u70b9\uff1a\u5cf0\u503c+- \u7ec8\u503c \u5fcd\u8010\u5e95\u7ebf \u6709\u6982\u5ff5\u611f \u5370\u8c61\u7559\u5b58 \u4e0e\u5176\u66f4\u597d \u4e0d\u5982\u4e0d\u540c","title":"20"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#21","text":"\u6fc0\u52b1\u80fd\u529b \u6fc0\u52b1 \u6ee1\u8db3 \u4e0d\u786e\u5b9a\u7684\u723d\u70b9 \u786e\u5b9a\u7684\u723d\u70b9 \u7528\u6237\u7684\u6fc0\u52b1\u611f \u7528\u6237\u6fc0\u52b1\u673a\u5236 \u6fc0\u52b1\u7684\u53e0\u52a0 \u786e\u5b9a\u662f\u4f9d\u8d56 \u4e0d\u786e\u5b9a\u5c31\u662f\u4f24\u5bb3 \u81ea\u6211\u6ee1\u8db3\u6109\u60a6\u611f\u6765\u505a\u4e8b \u4e0d\u8981\u8ba9\u7528\u6237\u601d\u8003 \u964d\u4f4e\u8bbe\u5907\u95e8\u69db \u964d\u4f4e\u52a8\u4f5c\u95e8\u69db \u964d\u4f4e\u601d\u8003\u95e8\u69db \u964d\u4f4e\u65f6\u95f4\u95e8\u69db \u4eba\u4f1a\u4e0a\u763e \u5bf9\u786e\u5b9a\u6027\u6ee1\u8db3\u7684\u4f9d\u8d56 \u4e0a\u763e\u673a\u5236\u7684\u8bbe\u8ba1=\u6fc0\u52b1\u673a\u5236\u7684\u8bbe\u8ba1 \u5916\u5728\u6fc0\u52b1 \u5185\u5728\u6fc0\u52b1 \u8bbe\u8ba1\u591a\u5c11\u4e2a\u6fc0\u52b1\u70b9","title":"21"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#22","text":"\u540d\u5b57\u548c\u53e3\u7891 \uff08\u8bf4\u6587\u89e3\u5b57\uff09 \u540d\u5b57\u662f\u6700\u77ed\u7684\u5492\uff08\u675f\u7f1a \u7279\u5f81\uff09 \u7528\u94b1\u6216\u6743\u505a\u6760\u6746 \u53e3\u7891\u5c31\u662f\u628a\u4e8b\u60c5\u505a\u8fc7\u5934\uff08\u8d85\u8fc7\u9884\u671f\uff09 \u53e3\u7891\u662f\u4e00\u4e2a\u542c\u89c9\u6587\u6848\uff08\u63d0\u6d88\u8d39\u8005\u8bbe\u8ba1\u4ed6\u8981\u8bf4\u7684\u8bdd\uff09","title":"22"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#23","text":"\u521b\u65b0\u6a21\u5f0f \u4ea7\u54c1\u7ecf\u7406\uff1a\u521b\u9020\u7528\u6237\u4ef7\u503c\u4e3a\u5de5\u5177 \u6253\u7834\u65e7\u7684\u5229\u76ca\u5e73\u8861 \u5efa\u7acb\u5bf9\u5df1\u65b9\u6709\u5229\u7684\u65b0\u5229\u76ca\u94fe \u5efa\u7acb\u65b0\u5e73\u8861\u7684\u8fc7\u7a0b \u7528\u6237\u4ef7\u503c= \u65b0\u4f53\u9a8c-\u65e7\u4f53\u9a8c-\u53d8\u5316\u6210\u672c \u540c\u7eac\u5ea6\u7ade\u4e89 \u4f53\u91cf\u5927\u7684\u7684\u80dc \u964d\u7eac\u653b\u51fb \u8d44\u672c\u5f3a\u884c\u5408\u5e76","title":"23"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#24","text":"\u672a\u6765\u5df2\u6765 \u53ea\u662f\u5206\u5e03\u7684\u4e0d\u5747\u5300 \u7528\u5e38\u89c1\u914d\u4ef6\u8fed\u4ee3\uff08\u5e38\u7528\u6280\u672f \u5e38\u89c1\u914d\u4ef6\uff09","title":"24"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#25","text":"\u65b0\u8981\u7d20 \u4ece\u65b0\u8981\u7d20\u6362\u672c\u8d28 \u4e0d\u6362\u670d\u52a1 \u5148\u6709\u57fa\u7840\u4e0a \u4f18\u5316\u4f53\u9a8c\u6216\u6210\u672c\u7ed3\u6784 \u6216\u53d8\u9769\u5546\u4e1a\u903b\u8f91","title":"25"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#26","text":"\u5546\u4e1a\u6a21\u5f0f\u7684\u4e09\u7ea7\u706b\u7bad \u7b2c\u4e00\u7ea7\u706b\u7bad\uff1a\u642d\u5efa\u9ad8\u9891\u7684\u5934\u90e8\u6d41\u91cf \u7b2c\u4e8c\u7ea7\u706b\u7bad\uff1a\u6c89\u6dc0\u67d0\u7c7b\u7528\u6237\u7684\u5546\u4e1a\u573a\u666f \u7b2c\u4e09\u7ea7\u706b\u7bad\uff1a\u5b8c\u6210\u5546\u4e1a\u95ed\u73af","title":"26"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#27","text":"\u98a0\u8986\u5f0f\u521b\u65b0 \u4ef7\u503c\u7f51 \u771f\u6b63\u51b3\u5b9a\u4f01\u4e1a\u672a\u6765\u53d1\u5c55\u65b9\u5411\u7684\u662f\u5e02\u573a\u4ef7\u503c\u7f51 \u771f\u6b63\u4e3b\u5bfc\u4f01\u4e1a\u53d1\u5c55\u8fdb\u7a0b\u7684\u662f\u673a\u6784\u4ee5\u5916\u7684\u529b\u91cf * \u4f01\u4e1a\u771f\u6b63\u7684\u7ba1\u7406\u8005\uff0c\u9700\u8981\u8bc6\u522b\u81ea\u5df1\u8d56\u4ee5\u751f\u5b58\u7684\u4ef7\u503c\u7f51\uff0c\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u7ec4\u7ec7\uff0c\u4e0e\u8fd9\u4e2a\u4ef7\u503c\u7f51\u8fdb\u884c\u8d44\u6e90\u5bf9\u63a5 \u4ef7\u503c\u7f51\uf9e9\uff0c\u81f3\u5c11\u6709\u4e09\u4e2a\u89d2\u8272\uff1a\u4e00\u662f\u5ba2\u6237\uff0c\u4e8c\u662f\u5bf9\u624b\uff0c\u4e09\u662f\u6295\u8d44\u4eba \u5ba2\u6237\u662f\u6211\u4eec\u6700\u91cd\u8981\u7684\u8d44\u4ea7\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u6211\u4eec\u6700\u4e3b\u8981\u7684\u521b\u65b0\u76f2\u533a \u6211\u4eec\u5e94\u8be5\u8b66\u9192\uff0c\u6709\u65f6\u5019\u771f\u6b63\u7f20\u4f4f\u4f60\u89c6\u91ce\u7684\uff0c\u53ef\u80fd\u4e0d\u662f\u5ba2\u6237\uff0c\u800c\u662f\u4f60\u7684\u5bf9\u624b \u5728\u8d44\u672c\u7684\u589e\u957f\u538b\u529b\u4e0b\uff0c\u5927\u516c\u53f8\u5f88\u96be\u8fdb\u5165\u5c0f\u5e02\u573a \u5c0f\u5e02\u573a\u4e00\u65e6\u542f\u52a8\u6307\u6570\u7ea7\u7684\u7206\u53d1\u589e\u957f\uff0c\u5927\u516c\u53f8\u5c31\u518d\u4e5f\u8ffd\u4e0d\u4e0a\u4e86 \u770b\u4e0a\u53bb\u662f\u4e00\u6837\u7684\u4ea7\u54c1\uff0c\u4f46\u4ee3\u8868\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u4e24\u5f20\u4ef7\u503c\u7f51 \u8986\u5f0f\u521b\u65b0\u6700\u91cd\u8981\u7684\u6807\u51c6\u5c31\u662f\uff0c\u662f\u5426\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684\u4ef7\u503c\u7f51","title":"27"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#28","text":"\u4e2d\u89c2 \u5fae\u89c2 \u5b8f\u89c2 \u5957\u8def \u662f\u524d\u4eba\u603b\u7ed3\u7684\u6709\u6548\u7ecf\u9a8c\uff0c\u7ec3\u597d\u5957\u8def\u53ef\u4ee5\u81ea\u6211\u6392\u67e5\u95ee\u9898\uff0c\u4fbf\u4e8e\u548c\u56e2\u961f\u6c9f\u901a \u9760\u5957\u8def\u6210\u4e0d\u4e86\u9ad8\u624b \u5fae\u89c2\u4f53\u611f\uff1a\u771f\u5b9e\u5730\u611f\u77e5\u6bcf\u4e00\u4e2a\u5fae\u5c0f\u77ac\u95f4 \u6700\u6311\u5254\u7684\u4eba\uff0c\u5176\u5b9e\u5c31\u662f\u6700\u6709\u9632\u5fa1\u610f\u8bc6\u7684\u4eba \u5982\u679c\u4ea7\u54c1\u7a81\u7136\u78b0\u89e6\u7528\u6237\u7684\u67d0\u4e2a\u610f\u8bc6\u795e\u7ecf\uff0c\u8ba9\u7528\u6237\u4ea7\u751f\u9632\u5fa1\uff0c\u90a3\u6d41\u5931\u7684\u51e0\u7387\u5c31\u4f1a\u52a0\u5927 \u5efa\u7acb\u7ec6\u5fae\u7684\u5fae\u89c2\u4f53\u611f \u51e0\u5bb6\u5b9a\u4f4d\u76f8\u4f3c\u3001\u4f53\u9a8c\u76f8\u4f3c\u7684\u4ea7\u54c1\uff0c\u9760\u4f18\u5316\u7528\u6237\u4f53\u9a8c\uff0c\u5176\u5b9e\u662f\u65e0\u6cd5\u7ec8\u7ed3\u6218\u4e89\u7684 \u5927\u4ed7\u62fc\u80dc\u8d1f\uff0c\u9760\u7684\u662f\u5b8f\u89c2\u80fd\u529b \u6ca1\u6709\u5fae\u89c2\u4f53\u611f\uff0c\u9760\u5957\u8def\u5224\u65ad\uff0c\u5c31\u662f\u81ea\u6b3a\u6b3a\u4eba \u4f46\u6253\u5927\u4ed7\uff0c\u505a\u9876\u7ea7\u9ad8\u624b\uff0c\u5219\u8981\u6c42\u5b8f\u89c2\u80fd\u529b\u4e5f\u8981\u5f3a","title":"28"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#29","text":"\u4ea7\u54c1\u662f\u4e00\u79cd\u73b0\u5b9e\u80fd\u529b \u98ce\u53e3 \u9700\u8981\u63a0\u593a\u6027 \u4e09\u7ea7\u7ec4\u7ec7 \u5171\u540c\u89c4\u5219 \u4e8c\u7ea7\u7ec4\u7ec7 \u5171\u540c\u5229\u76ca \u4e00\u7ea7\u7ec4\u7ec7 \u5171\u540c\u4fe1\u4ef0 \u9876\u7ea7\u7ec4\u7ec7 \u81f3\u60c5\u81f3\u6027 \u786e\u5b9a\u6027\u662f\u5173\u952e \u786e\u5b9a\u611f\u4f1a\u8ba9\u4eba\u89c9\u5f97\u8212\u9002\u4e0e\u5b89\u5168 \u4f9d\u8d56=\u771f\u5b9e\u7684\u957f\u671f\u5173\u7cfb \u505a\u6709\u786e\u5b9a\u611f\u7684\u4e8b\u60c5 \u4eba\u751f\u903b\u8f91\u5927\u4e8e\u5546\u4e1a\u903b\u8f91","title":"29"},{"location":"%E9%9A%8F%E7%AC%94/%E6%80%9D%E7%BB%B4%E4%BA%A7%E5%93%81%E8%AF%BE/#30","text":"\u7c89\u4e1d\u7ecf\u6d4e","title":"30"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/","text":"\u6c38\u4e45\u5173\u95edWPS\u70ed\u70b9\u3001\u4e91\u670d\u52a1 \u00b6 \u7fa4\u91cc\u5927\u4f6c\u7684\u65b9\u6cd5 \u00b6 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:19:53 \u5e72\u6389\u670d\u52a1 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:19:57 \u5e72\u6389\u8ba1\u5212\u4efb\u52a1 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:13 \u4ed6\u81ea\u5e26\u914d\u7f6e \u5173\u6389 \u81ea\u52a8\u66f4\u65b0 \u70ed\u70b9\u63a8\u8350\u5565\u7684 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f \u56fe\u72471.png \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:38 \u8fd9\u56db\u4e2a dll \u8ddf\u6211\u4e00\u6837 \u52a0\u4e2a _ \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:48 \u4fee\u6539\u4e4b\u524d \u5148\u7ed3\u675f wps \u8fdb\u7a0b \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:54 \u91cd\u542f \u684c\u9762 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:21:02 \u56e0\u4e3a dll \u662f\u6ce8\u5165\u5230 \u684c\u9762\u91cc \u91cd\u542f \u684c\u9762 win10\u6ca1\u6709Explorer.exe \u8fdb\u7a0b \u76f4\u63a5\u7ed3\u675fWindows \u8d44\u6e90\u7ba1\u7406\u5668 \u7136\u540e\u70b9\u6587\u4ef6 - \u8fd0\u884c\u65b0\u4efb\u52a1 - explorer.exe \u2014 \u00b6 \u2014 \u00b6 \u7f51\u4e0a\u5927\u4f6c\u7684\u65b9\u6cd5 \u00b6 \u6bcf\u6b21\u5373\u4f7f\u5173\u95ed\u5728 \u4efb\u52a1\u7ba1\u7406\u5668 \u4e2d\u6740\u6b7b\u4e86wps\u70ed\u70b9wps\u4e91\u670d\u52a1\u7b49\u5e94\u7528\u4e0d\u4e45\u53c8\u4f1a\u81ea\u542f\uff0c\u6545\u4ee5\u4e0b\u63d0\u4f9b\u6c38\u4e45\u5173\u95ed\u70ed\u70b9\u548c\u4e91\u670d\u52a1\u7684\u65b9\u6cd5\uff1a \u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff08\u5982txt\uff09\u5e76\u4fee\u6539\u6210\u4e0b\u5217\u6587\u4ef6\u7684\u540d\u79f0\uff08\u540e\u7f00\u4e00\u5b9a\u8981\u4fee\u6539\u6210.exe\uff09\uff0c\u7136\u540e\u8986\u76d6\u539f\u6587\u4ef6\uff08\u4e5f\u53ef\u4ee5\u5220\u9664\u540e\u4ee5\u540c\u540d\u7a7a\u6587\u4ef6\u66ff\u6362\uff09\uff1a 1. WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscenter.exe WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscloudlaunch.exe WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscloudsvr.exe WPS Office\\\u2026\\\u2026\\\u2026\\ wtoolex\\ wpsnotify.exe WPS Office\\\u2026\\\u2026\\\u2026\\ wtoolex\\ wpsupdate.exe \u3010\u6ce8\u3011 \u7531\u4e8eWPS\u7248\u672c\u4e0d\u540c\uff0c\u6545\u7531\u4e3b\u76ee\u5f55\u7d22\u5f15\u7684\u6df1\u5ea6\u548c\u76ee\u5f55\u540d\u79f0\u4e0d\u540c\uff0c\u6545\u4ee5\u201c\\\u2026\\\u2026\\\u2026\\\u201d\u4ee3\u66ff\uff0c\u6211\u7684\u76ee\u5f55\u5982\u4e0b\u56fe\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u00b6 \u6c38\u4e45\u5173\u95edWPS\u521d\u59cb\u767b\u9646\u754c\u9762 \u6bcf\u6b21\u7b2c\u4e00\u6b21\u4f7f\u7528wps\u65f6\uff0c\u90fd\u4f1a\u8fdb\u5165\u767b\u9646\u754c\u9762\uff0c\u5341\u5206\u5361\uff0c\u4ee5\u4e0b\u63d0\u4f9b\u6c38\u4e45\u5173\u95ed\u521d\u59cb\u767b\u9646\u754c\u9762\uff0c\u76f4\u63a5\u8fdb\u5165\u6587\u6863\u7684\u65b9\u6cd5\uff1a \u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff08\u5982txt\uff09\u5e76\u4fee\u6539\u6210\u4e0b\u5217\u6587\u4ef6\u7684\u540d\u79f0\uff08\u540e\u7f00\u4e00\u5b9a\u8981\u4fee\u6539\u6210.exe\uff09\uff0c\u7136\u540e\u8986\u76d6\u539f\u6587\u4ef6\uff08\u4e5f\u53ef\u4ee5\u5220\u9664\u540e\u4ee5\u540c\u540d\u7a7a\u6587\u4ef6\u66ff\u6362\uff09\uff1a WPS Office\\\u2026\\\u2026\\ ksolaunch.exe WPS Office\\\u2026\\\u2026\\ wpscloudsvr.exe \u3010\u6ce8\u3011 \u7531\u4e8eWPS\u7248\u672c\u4e0d\u540c\uff0c\u6545\u7531\u4e3b\u76ee\u5f55\u7d22\u5f15\u7684\u6df1\u5ea6\u548c\u76ee\u5f55\u540d\u79f0\u4e0d\u540c\uff0c\u6545\u4ee5\u201c\\\u2026\\\u2026\\\u201d\u4ee3\u66ff\uff0c\u8be5\u76ee\u5f55\u4e3a\u4e0a\u8ff0\u76ee\u5f55\u7684\u4e0a\u4e00\u5c42\uff0c\u6211\u7684\u76ee\u5f55\u5982\u4e0b\u56fe \u539f\u6587\uff1ahttps://blog.csdn.net/CN_DXTZ/article/details/79415565 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u535a\u6587\u94fe\u63a5\uff01","title":"\u6c38\u4e45\u5173\u95edWPS\u70ed\u70b9\u3001\u4e91\u670d\u52a1"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#wps","text":"","title":"\u6c38\u4e45\u5173\u95edWPS\u70ed\u70b9\u3001\u4e91\u670d\u52a1"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#_1","text":"\u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:19:53 \u5e72\u6389\u670d\u52a1 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:19:57 \u5e72\u6389\u8ba1\u5212\u4efb\u52a1 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:13 \u4ed6\u81ea\u5e26\u914d\u7f6e \u5173\u6389 \u81ea\u52a8\u66f4\u65b0 \u70ed\u70b9\u63a8\u8350\u5565\u7684 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f \u56fe\u72471.png \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:38 \u8fd9\u56db\u4e2a dll \u8ddf\u6211\u4e00\u6837 \u52a0\u4e2a _ \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:48 \u4fee\u6539\u4e4b\u524d \u5148\u7ed3\u675f wps \u8fdb\u7a0b \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:20:54 \u91cd\u542f \u684c\u9762 \u3010\u6c5f\u6e56\u4eba\u79f0\u9e1f\u54e5\u3011\u804c\u4e1a\u83dc\u9e1f 2019/2/25 14:21:02 \u56e0\u4e3a dll \u662f\u6ce8\u5165\u5230 \u684c\u9762\u91cc \u91cd\u542f \u684c\u9762 win10\u6ca1\u6709Explorer.exe \u8fdb\u7a0b \u76f4\u63a5\u7ed3\u675fWindows \u8d44\u6e90\u7ba1\u7406\u5668 \u7136\u540e\u70b9\u6587\u4ef6 - \u8fd0\u884c\u65b0\u4efb\u52a1 - explorer.exe","title":"\u7fa4\u91cc\u5927\u4f6c\u7684\u65b9\u6cd5"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#-","text":"","title":"---"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#-_1","text":"","title":"---"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#_2","text":"\u6bcf\u6b21\u5373\u4f7f\u5173\u95ed\u5728 \u4efb\u52a1\u7ba1\u7406\u5668 \u4e2d\u6740\u6b7b\u4e86wps\u70ed\u70b9wps\u4e91\u670d\u52a1\u7b49\u5e94\u7528\u4e0d\u4e45\u53c8\u4f1a\u81ea\u542f\uff0c\u6545\u4ee5\u4e0b\u63d0\u4f9b\u6c38\u4e45\u5173\u95ed\u70ed\u70b9\u548c\u4e91\u670d\u52a1\u7684\u65b9\u6cd5\uff1a \u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff08\u5982txt\uff09\u5e76\u4fee\u6539\u6210\u4e0b\u5217\u6587\u4ef6\u7684\u540d\u79f0\uff08\u540e\u7f00\u4e00\u5b9a\u8981\u4fee\u6539\u6210.exe\uff09\uff0c\u7136\u540e\u8986\u76d6\u539f\u6587\u4ef6\uff08\u4e5f\u53ef\u4ee5\u5220\u9664\u540e\u4ee5\u540c\u540d\u7a7a\u6587\u4ef6\u66ff\u6362\uff09\uff1a 1. WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscenter.exe WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscloudlaunch.exe WPS Office\\\u2026\\\u2026\\\u2026\\ office6\\ wpscloudsvr.exe WPS Office\\\u2026\\\u2026\\\u2026\\ wtoolex\\ wpsnotify.exe WPS Office\\\u2026\\\u2026\\\u2026\\ wtoolex\\ wpsupdate.exe \u3010\u6ce8\u3011 \u7531\u4e8eWPS\u7248\u672c\u4e0d\u540c\uff0c\u6545\u7531\u4e3b\u76ee\u5f55\u7d22\u5f15\u7684\u6df1\u5ea6\u548c\u76ee\u5f55\u540d\u79f0\u4e0d\u540c\uff0c\u6545\u4ee5\u201c\\\u2026\\\u2026\\\u2026\\\u201d\u4ee3\u66ff\uff0c\u6211\u7684\u76ee\u5f55\u5982\u4e0b\u56fe\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0","title":"\u7f51\u4e0a\u5927\u4f6c\u7684\u65b9\u6cd5"},{"location":"%E9%9A%8F%E7%AC%94/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADWPS%E7%83%AD%E7%82%B9%E3%80%81%E4%BA%91%E6%9C%8D%E5%8A%A1/#_3","text":"\u6c38\u4e45\u5173\u95edWPS\u521d\u59cb\u767b\u9646\u754c\u9762 \u6bcf\u6b21\u7b2c\u4e00\u6b21\u4f7f\u7528wps\u65f6\uff0c\u90fd\u4f1a\u8fdb\u5165\u767b\u9646\u754c\u9762\uff0c\u5341\u5206\u5361\uff0c\u4ee5\u4e0b\u63d0\u4f9b\u6c38\u4e45\u5173\u95ed\u521d\u59cb\u767b\u9646\u754c\u9762\uff0c\u76f4\u63a5\u8fdb\u5165\u6587\u6863\u7684\u65b9\u6cd5\uff1a \u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff08\u5982txt\uff09\u5e76\u4fee\u6539\u6210\u4e0b\u5217\u6587\u4ef6\u7684\u540d\u79f0\uff08\u540e\u7f00\u4e00\u5b9a\u8981\u4fee\u6539\u6210.exe\uff09\uff0c\u7136\u540e\u8986\u76d6\u539f\u6587\u4ef6\uff08\u4e5f\u53ef\u4ee5\u5220\u9664\u540e\u4ee5\u540c\u540d\u7a7a\u6587\u4ef6\u66ff\u6362\uff09\uff1a WPS Office\\\u2026\\\u2026\\ ksolaunch.exe WPS Office\\\u2026\\\u2026\\ wpscloudsvr.exe \u3010\u6ce8\u3011 \u7531\u4e8eWPS\u7248\u672c\u4e0d\u540c\uff0c\u6545\u7531\u4e3b\u76ee\u5f55\u7d22\u5f15\u7684\u6df1\u5ea6\u548c\u76ee\u5f55\u540d\u79f0\u4e0d\u540c\uff0c\u6545\u4ee5\u201c\\\u2026\\\u2026\\\u201d\u4ee3\u66ff\uff0c\u8be5\u76ee\u5f55\u4e3a\u4e0a\u8ff0\u76ee\u5f55\u7684\u4e0a\u4e00\u5c42\uff0c\u6211\u7684\u76ee\u5f55\u5982\u4e0b\u56fe \u539f\u6587\uff1ahttps://blog.csdn.net/CN_DXTZ/article/details/79415565 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u535a\u6587\u94fe\u63a5\uff01","title":""},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/","text":"\u8fdc\u7a0b\u5de5\u4f5c\u5206\u6790 \u00b6 HOW TO GET IDEA \u00b6 \u5728\u6709\u5e78\u4f53\u4f1a\u8fc7996\u7684\u751f\u6d3b\uff0c\u65e9\u4e0a8.30\u4e0a\u73ed\uff0c\u4e2d\u5348\u4f11\u606f\u4e24\u4e2a\u5c0f\u65f6\uff0c\u4e0b\u53486\u70b9\u5403\u665a\u996d\uff0c\u665a\u996d\u540e7.30\u4e0a\u73ed\u52309\u70b9\u3002 \u8bf4\u662f\u5230\u4e5d\u70b9\uff0c\u5176\u5b9e\u5230\u4e86\u5341\u70b9\u5341\u4e00\u70b9\u8fd8\u5728\u516c\u53f8\uff0c\u5230\u5bbf\u820d\u6d17\u6f31\u540e\uff0c\u5dee\u4e0d\u591a\u5341\u4e8c\u70b9\u4e86\u3002 \u4eba\u662f\u6709\u786c\u6027\u7684\u5a31\u4e50\u65f6\u95f4 (\u4eba\u5fc5\u987b\u6709\u4e00\u5b9a\u7684\u81ea\u6211\u653e\u677e\u65f6\u95f4\uff0c\u5982\u679c\u5de5\u4f5c\u5bf9\u81ea\u5df1\u6765\u8bf4\u4e0d\u8f7b\u677e\u7684\u8bdd\uff0c\u5fd8\u4e86\u90a3\u4e2a\u5730\u65b9\u8bf4\u7684\u4e86\u3002)\uff0c \u4eba\u662f\u793e\u4f1a\u6027\u52a8\u7269\uff0c\u5fc5\u987b\u4fdd\u8bc1\u81f3\u5c114\u4e2a\u5c0f\u65f6\u7684\u793e\u4ea4 (\u300a\u4eba\u7c7b\u7b80\u53f2\u300b)\u3002996\u7684\u5de5\u4f5c\u5f3a\u5ea6\u4e0b\uff0c\u4eba\u7684\u7cbe\u795e\u5c31\u5f88\u5bb9\u6613\u51fa\u95ee\u9898\u3002 \u518d\u4e00\u4e2a\u5c31\u662f\uff0c\u5728996\u7684\u5de5\u4f5c\u73af\u5883\u4e0b\uff0c\u5c31\u53ea\u6709\u5468\u65e5\u4e86\uff0c\u5468\u65e5\u662f\u9700\u8981\u8865\u89c9\u7684\uff0c\u90a3\u4e48\u4e00\u4e0a\u5348\u5c31\u6ca1\u4e86\uff0c\u4e0b\u5348\u5728\u770b\u770b\u751f\u6d3b\u5fc5\u9700\u54c1\uff0c\u90a3\u4e48\u8fde\u89c1\u670b\u53cb\u7684\u65f6\u95f4\u90fd\u6ca1\u4e86\u3002 \u4e4b\u524d\u770b\u8fc7 \u5e7f\u4e3a\u4eba\u77e5(che di feng sha) \u7684\u5927\u9879\u76ee 996.ICU \uff0c\u5728\u56fd\u5185\u73af\u5883\u786e\u5b9e\u611f\u53d7\u5230\u4e86\u4e25\u91cd\u7684 \u5185\u5377 \u548c\u5458\u5de5\u538b\u69a8\u3002 \u786e\u5b9e\u4e5f\u6709\u5f88\u591a\u8bb2\u8ff0\u81ea\u8eab\u7ecf\u9a8c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728ICU\u9879\u76ee\u4e0b\uff1a * \u627e\u652f\u6301965\u7684 \u516c\u53f8\u540d\u5355 * \u81ea\u5e26\u7684 \u9003\u79bb996 \uff0c\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bb2\u5b8c\u4e86\u5982\u4f55\u53bb\u505a\u3002 \u56e0\u4e3a\u5bb6\u5ead\u56e0\u7d20\uff0c\u6211\u786e\u5b9e\u53ef\u4ee5\u8003\u8651\u51fa\u56fd\u53d1\u5c55\uff0c\u9996\u9009\u52a0\u62ff\u5927\uff0c\u52a0\u62ff\u5927\u6700\u8fd1\u6709\u4e2a \u4e09\u5e74\u79fb\u6c11\u8ba1\u5212 \uff0c\u5bf9\u5e94\u7684 \u52a0\u62ff\u5927IT\u4eba\u5458\u8ba1\u5212 \u4e5f\u6709\u3002\u53d1\u51fa\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\u3002 \u7f8e\u56fd\u5de5\u4f5c\u601d\u8def\u53c2\u8003 HOW TO DO \u00b6 \u52a0\u62ff\u5927\uff0c\u9996\u5148\uff0c\u8003\u8651\u4ed8\u8d39\u79fb\u6c11\uff08\u5982\u679c\u6709\u94b1\u7684\u8bdd\uff0c\u4e94\u5341\u4e07\u5de6\u53f3\u3002\u53bb\u52a0\u62ff\u5927\u521b\u4e1a\u5f00\u5e97\uff09\uff0c\u76f8\u5173\u4fe1\u606f\uff0c\u63a8\u8350\u641c\u7d22\u6296\u97f3\u53f7[\u5317\u7f8e\u7406\u674e\u5bdf\u5fb7 (TopTalk)]\uff0c\u975eIT\u884c\u4e1a\u7684\u65b9\u5f0f\u90fd\u6709\uff0c\u5370\u8c61\u6bd4\u8f83\u6df1\u7684\u662f\u53bb\u8bfb\u52a0\u62ff\u5927\u7684\u5357\u7fd4\u6280\u6821\uff0c\u8bfb\u4e2a\u4f1a\u8ba1\u5565\u51fa\u6765\u76f4\u63a5\u5c31\u4e1a\uff0c\u9003\u79bb\u56fd\u5185\u5185\u5377\u73af\u5883\u3002 \u76f4\u63a5\u8003\u8651\u8fdc\u7a0b\u56fd\u5916\u4e0a\u73ed \u00b6 IT\u884c\u4e1a\uff0c\u6211\u53bb\u52a0\u62ff\u5927\u7684\u62db\u8058\u7f51\u7ad9\u770b\u4e86\u770b: Indeed : https://ca.indeed.com/ Glassdoor : https://www.glassdoor.ca/index.htm Monster : https://www.monster.ca/ \u9996\u5148\u516c\u53f8\u662f\u652f\u6301 \u5b8c\u5168\u8fdc\u7a0b\u4e0a\u73ed \u7684\uff0c\u5bf9\u5e94\u7684\u5de5\u8d44 19k-34k (\u53c2\u8003 \u77e5\u4e4e \uff0c\u53ef\u80fd\u6211\u641c\u7d22\u65b9\u5f0f\u4e0d\u5bf9)\uff0c\u7136\u540e\u82f1\u8bed\u5176\u5b9e\u8981\u6c42\u5f88\u9ad8\u3002 \u5bf9\u6211\u800c\u8a00\uff0c\u9996\u8981\u8003\u8651\u628a\u82f1\u8bed\u8fc7\u4e86\uff0c \u96c5\u601d\u6ca1\u52307\u5206 \uff0c\u5176\u5b9e\u5927\u90e8\u5206\u505a\u4e0d\u4e86\u3002 ] \u5185\u9500\u8f6c\u51fa\u53e3 \u00b6 \u4e3a\u5565\u8bf4\u5927\u90e8\u5206\u505a\u4e0d\u4e86\u5462\uff0c\u56e0\u4e3a\u8fd8\u6709\u4e00\u6761\u8def\uff0c\u5728\u4e2d\u56fd\u627e\u4e00\u5bb6\u5916\u4f01\uff0c\u6bd4\u5982ThoughtWorks(\u601d\u7279\u6c83\u514b)\uff0c\u505a\u534a\u5e74\u5230\u4e00\u5e74\u540e\u7533\u8bf7\u5916\u8c03\uff0c\u5230\u56fd\u5916\u540e\uff0c\u9002\u5e94\u73af\u5883\u540e\u5728\u8003\u8651\u628a\u5de5\u4f5c\u7b7e\u8bc1\u6362\u6210\u7eff\u5361\u3002 \u8fd9\u79cd\u6a21\u5f0f\u8fd8\u6709\u597d\u5904\uff0c\u5728\u56fd\u5185\u4eab\u53d7\u56fd\u5916\u7684\u5236\u5ea6\uff0c\u6ca1\u6709\u52a0\u73ed\uff0c\u5e74\u5047\u957f\uff0c\u798f\u5229\u597d\uff0c\u88ab\u5f00\u9664\u6709\u5f88\u591a\u5f88\u591a\u7684\u8865\u507f\u3002 \u7b80\u5355\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c \u9886\u82f1 \u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002 \u53c2\u8003\u3002 \u5176\u6b21\u662fglassdoor\u3002 \u56fd\u5185\u652f\u6301\u8fdc\u7a0b\u4e0a\u73ed \u00b6 \u5982\u679c\u51e0\u79cd\u65b9\u5f0f\u90fd\u4e0d\u884c\uff0c\u90a3\u4e48\u6211\u60f3\u5230\u7684\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u662f\uff0c\u9996\u5148\u5728\u56fd\u5185\u652f\u6301\u8fdc\u7a0b\u4e0a\u73ed\u7684\u516c\u53f8\u5de5\u4f5c\uff0c\u7136\u540e\u5728\u901a\u8fc7\u96c5\u601d\u53bb\u56fd\u5916\uff0c\u8fd9\u6837\u5728\u63a5\u89e6\u65b0\u73af\u5883\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u8131\u4ea7\u800c\u4ea7\u751f\u8fc7\u591a\u7684\u56f0\u96be\u3002 \u9996\u5148\uff0c\u8fdc\u7a0b\u4e0a\u73ed\u7684\u52a3\u52bf\u8981\u5217\u4e00\u4e0b(\u6765\u81ea\u670b\u53cb\u5206\u4eab): * \u53ef\u80fd\u4e0d\u4ea4\u793e\u4fdd\u3002 * \u8001\u677f\u4e5f\u8ba4\u4e3a\u6210\u672c\u51cf\u5c11\uff0c\u6240\u4ee5\u5de5\u8d44\u4e5f\u7ed9\u7684\u5c11\u3002 * \u4fe1\u4efb\u95ee\u9898\uff0c\u8001\u677f\u4e0d\u4fe1\u4efb\u4f60\uff0c\u4f60\u4fe1\u4efb\u8001\u677f\uff0c\u5f88\u5bb9\u6613\u4ea7\u751f\u95ee\u9898\u3002 * \u7f3a\u5c11\u5fc3\u7406\u5065\u5eb7\u7684\u5173\u5fc3\uff0c\u6bd5\u7adf\u6ca1\u6709\u540c\u4e8b\u5728\u65c1\u8fb9\uff0c\u4eba\u4e5f\u662f\u793e\u4ea4\u52a8\u7269\uff0c\u9700\u8981\u601d\u8003\u5982\u4f55\u8865\u6551\u3002 \u8fdc\u7a0b\u62db\u8058\u6e20\u9053 \u00b6 \u4e0e\u5e38\u89c4\u62db\u8058\u6e20\u9053\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u91cc\u6709\u4e00\u4e0b\u6e20\u9053\u5171\u5927\u5bb6\u9009\u62e9: \u7535\u9e2d\u62db\u8058 https://eleduck.com remoteok https://remoteok.io github job https://jobs.github.com/ stackoverflow jobs https://stackoverflow.com/jobs toptal https://www.toptal.com \u9700\u8981\u5168\u5c40\u68af\uff0c\u800c\u4e14\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u7528\u2026 Another Thing \u00b6 \u5728\u75ab\u60c5\u4e0b\uff0c\u8fdc\u7a0b\u529e\u516c\u548c\u8fdc\u7a0b\u9762\u8bd5\u5f97\u5230\u4e86\u6700\u5927\u9650\u5ea6\u7684\u53d1\u5c55\u3002\u56fd\u5185\u5916\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u5b8c\u5168\u652f\u6301\u8fdc\u7a0b\u529e\u516c\uff0c\u6bd4\u5982 Facebook \uff0c\u6709\u70b9\u662fIT\u7ec8\u4e8e\u6446\u8131\u5730\u7406\u9650\u5236\uff0c\u5bf9\u56fd\u5185\u800c\u8a00\uff0c\u6162\u6162\u623f\u4ef7\u4e0d\u518d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4f4e\u6210\u672c\u540c\u65f6\u610f\u5473\u7740\u66f4\u5927\u7684\u7ade\u4e89\u548c\u66f4\u4f4e\u7684\u6210\u672c\uff0c\u56fd\u5185\u9996\u5148\u8003\u8651\u540c\u683710k\u7684\u4ef7\u683c\uff0c\u4e3a\u4f55\u4e0d\u96c7\u4e00\u4e2a\u5df2\u7ecf\u4f1a\u8001\u5bb6\u7684n\u5e74\u7ecf\u9a8c\u7684\u8001\u5458\u5de5\uff0c\u800c\u5728\u6df1\u5733\u96c7\u4f63\u4e00\u4e2a10k\u7684\u5b9e\u4e60\u751f\uff0c\u66f4\u5927\u4e00\u70b9\u662f\uff0c10k\u7684\u4ef7\u683c\u53ef\u4ee5\u5728\u5370\u5ea6\u96c7\u4f63\u4e09\u4e2a\u7a0b\u5e8f\u733f\u2026 \u518d\u8fd9\u4e48\u4e00\u4e2a\u5185\u5377\u65f6\u4ee3\uff0c\u5148\u8df3\u51fa\u6765\u7684\u4eba\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a\u5360\u4f4d\u5b50\u7684\u4eba\u3002 \u6362\u4e2a\u5730\u65b9\u5446\u786e\u5b9e\u662f\u4e2a\u8003\u8651\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u540c\u65f6\u8981\u8003\u8651\u4eb2\u4eba\u670b\u53cb\u7684\u611f\u53d7\uff0c\u4e5f\u540c\u65f6\u8981\u8003\u8651\u4f1a\u4e0d\u4f1a\u662f\u4ece\u8fd9\u5ea7\u57ce\u8fdb\u5165\u4e86\u53e6\u4e00\u5ea7\u57ce\u3002 \u5f53\u7136\u56fd\u5bb6\u4e00\u5b9a\u4f1a\u6709\u5730\u65b9\u4fdd\u62a4\u7684\u6cd5\u5f8b\u51fa\u6765\uff0c\u6bd4\u5982 \u5fae\u8f6f\u5141\u8bb8\u5458\u5de5\u6c38\u4e45\u5728\u5bb6\u529e\u516c \u3002 Jeff\u5927\u4f6c\u7684\u89c2\u70b9\uff0c\u5982\u679c\u5185\u5377\u662f\u4e2a\u5fc5\u7136\u8d8b\u52bf\uff0c\u90a3\u4e48\u770b\u5927\u4e00\u70b9\uff0c\u8981\u5185\u5377\u5c31\u5377\u5168\u7403\u3002\u5176\u5b9e\u4e5f\u662f\u53e6\u5916\u4e00\u4e2a\u89d2\u5ea6\u7684\u9ed1\u6697\u68ee\u6797\u3002 \u5173\u4e8e\u8fdc\u7a0b\u9762\u8bd5\uff0c\u8fdc\u7a0b\u9762\u8bd5\u7b80\u5386\u53ef\u4ee5\u8003\u8651\u627e\u670b\u53cb\u6a21\u62df\u9762\u8bd5\uff0c\u63d0\u5347\u81ea\u5df1\u7684\u6c34\u5e73\u3002 \u5176\u5b9e \u5148\u8003\u8651\u5176\u4ed6\u6536\u5165\u6e20\u9053 \u4e5f\u662f\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u65b9\u9762\u66f4\u5185\u5377\uff0c\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002 \u670b\u53cb\u5b89\u5229\u7684\u5916\u4f01\u516c\u53f8 \u00b6 VMware SmartX ThoughtWorks","title":"\u8fdc\u7a0b\u5de5\u4f5c\u5206\u6790"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_1","text":"","title":"\u8fdc\u7a0b\u5de5\u4f5c\u5206\u6790"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#how-to-get-idea","text":"\u5728\u6709\u5e78\u4f53\u4f1a\u8fc7996\u7684\u751f\u6d3b\uff0c\u65e9\u4e0a8.30\u4e0a\u73ed\uff0c\u4e2d\u5348\u4f11\u606f\u4e24\u4e2a\u5c0f\u65f6\uff0c\u4e0b\u53486\u70b9\u5403\u665a\u996d\uff0c\u665a\u996d\u540e7.30\u4e0a\u73ed\u52309\u70b9\u3002 \u8bf4\u662f\u5230\u4e5d\u70b9\uff0c\u5176\u5b9e\u5230\u4e86\u5341\u70b9\u5341\u4e00\u70b9\u8fd8\u5728\u516c\u53f8\uff0c\u5230\u5bbf\u820d\u6d17\u6f31\u540e\uff0c\u5dee\u4e0d\u591a\u5341\u4e8c\u70b9\u4e86\u3002 \u4eba\u662f\u6709\u786c\u6027\u7684\u5a31\u4e50\u65f6\u95f4 (\u4eba\u5fc5\u987b\u6709\u4e00\u5b9a\u7684\u81ea\u6211\u653e\u677e\u65f6\u95f4\uff0c\u5982\u679c\u5de5\u4f5c\u5bf9\u81ea\u5df1\u6765\u8bf4\u4e0d\u8f7b\u677e\u7684\u8bdd\uff0c\u5fd8\u4e86\u90a3\u4e2a\u5730\u65b9\u8bf4\u7684\u4e86\u3002)\uff0c \u4eba\u662f\u793e\u4f1a\u6027\u52a8\u7269\uff0c\u5fc5\u987b\u4fdd\u8bc1\u81f3\u5c114\u4e2a\u5c0f\u65f6\u7684\u793e\u4ea4 (\u300a\u4eba\u7c7b\u7b80\u53f2\u300b)\u3002996\u7684\u5de5\u4f5c\u5f3a\u5ea6\u4e0b\uff0c\u4eba\u7684\u7cbe\u795e\u5c31\u5f88\u5bb9\u6613\u51fa\u95ee\u9898\u3002 \u518d\u4e00\u4e2a\u5c31\u662f\uff0c\u5728996\u7684\u5de5\u4f5c\u73af\u5883\u4e0b\uff0c\u5c31\u53ea\u6709\u5468\u65e5\u4e86\uff0c\u5468\u65e5\u662f\u9700\u8981\u8865\u89c9\u7684\uff0c\u90a3\u4e48\u4e00\u4e0a\u5348\u5c31\u6ca1\u4e86\uff0c\u4e0b\u5348\u5728\u770b\u770b\u751f\u6d3b\u5fc5\u9700\u54c1\uff0c\u90a3\u4e48\u8fde\u89c1\u670b\u53cb\u7684\u65f6\u95f4\u90fd\u6ca1\u4e86\u3002 \u4e4b\u524d\u770b\u8fc7 \u5e7f\u4e3a\u4eba\u77e5(che di feng sha) \u7684\u5927\u9879\u76ee 996.ICU \uff0c\u5728\u56fd\u5185\u73af\u5883\u786e\u5b9e\u611f\u53d7\u5230\u4e86\u4e25\u91cd\u7684 \u5185\u5377 \u548c\u5458\u5de5\u538b\u69a8\u3002 \u786e\u5b9e\u4e5f\u6709\u5f88\u591a\u8bb2\u8ff0\u81ea\u8eab\u7ecf\u9a8c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728ICU\u9879\u76ee\u4e0b\uff1a * \u627e\u652f\u6301965\u7684 \u516c\u53f8\u540d\u5355 * \u81ea\u5e26\u7684 \u9003\u79bb996 \uff0c\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bb2\u5b8c\u4e86\u5982\u4f55\u53bb\u505a\u3002 \u56e0\u4e3a\u5bb6\u5ead\u56e0\u7d20\uff0c\u6211\u786e\u5b9e\u53ef\u4ee5\u8003\u8651\u51fa\u56fd\u53d1\u5c55\uff0c\u9996\u9009\u52a0\u62ff\u5927\uff0c\u52a0\u62ff\u5927\u6700\u8fd1\u6709\u4e2a \u4e09\u5e74\u79fb\u6c11\u8ba1\u5212 \uff0c\u5bf9\u5e94\u7684 \u52a0\u62ff\u5927IT\u4eba\u5458\u8ba1\u5212 \u4e5f\u6709\u3002\u53d1\u51fa\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\u3002 \u7f8e\u56fd\u5de5\u4f5c\u601d\u8def\u53c2\u8003","title":"HOW TO GET IDEA"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#how-to-do","text":"\u52a0\u62ff\u5927\uff0c\u9996\u5148\uff0c\u8003\u8651\u4ed8\u8d39\u79fb\u6c11\uff08\u5982\u679c\u6709\u94b1\u7684\u8bdd\uff0c\u4e94\u5341\u4e07\u5de6\u53f3\u3002\u53bb\u52a0\u62ff\u5927\u521b\u4e1a\u5f00\u5e97\uff09\uff0c\u76f8\u5173\u4fe1\u606f\uff0c\u63a8\u8350\u641c\u7d22\u6296\u97f3\u53f7[\u5317\u7f8e\u7406\u674e\u5bdf\u5fb7 (TopTalk)]\uff0c\u975eIT\u884c\u4e1a\u7684\u65b9\u5f0f\u90fd\u6709\uff0c\u5370\u8c61\u6bd4\u8f83\u6df1\u7684\u662f\u53bb\u8bfb\u52a0\u62ff\u5927\u7684\u5357\u7fd4\u6280\u6821\uff0c\u8bfb\u4e2a\u4f1a\u8ba1\u5565\u51fa\u6765\u76f4\u63a5\u5c31\u4e1a\uff0c\u9003\u79bb\u56fd\u5185\u5185\u5377\u73af\u5883\u3002","title":"HOW TO DO"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_2","text":"IT\u884c\u4e1a\uff0c\u6211\u53bb\u52a0\u62ff\u5927\u7684\u62db\u8058\u7f51\u7ad9\u770b\u4e86\u770b: Indeed : https://ca.indeed.com/ Glassdoor : https://www.glassdoor.ca/index.htm Monster : https://www.monster.ca/ \u9996\u5148\u516c\u53f8\u662f\u652f\u6301 \u5b8c\u5168\u8fdc\u7a0b\u4e0a\u73ed \u7684\uff0c\u5bf9\u5e94\u7684\u5de5\u8d44 19k-34k (\u53c2\u8003 \u77e5\u4e4e \uff0c\u53ef\u80fd\u6211\u641c\u7d22\u65b9\u5f0f\u4e0d\u5bf9)\uff0c\u7136\u540e\u82f1\u8bed\u5176\u5b9e\u8981\u6c42\u5f88\u9ad8\u3002 \u5bf9\u6211\u800c\u8a00\uff0c\u9996\u8981\u8003\u8651\u628a\u82f1\u8bed\u8fc7\u4e86\uff0c \u96c5\u601d\u6ca1\u52307\u5206 \uff0c\u5176\u5b9e\u5927\u90e8\u5206\u505a\u4e0d\u4e86\u3002 ]","title":"\u76f4\u63a5\u8003\u8651\u8fdc\u7a0b\u56fd\u5916\u4e0a\u73ed"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_3","text":"\u4e3a\u5565\u8bf4\u5927\u90e8\u5206\u505a\u4e0d\u4e86\u5462\uff0c\u56e0\u4e3a\u8fd8\u6709\u4e00\u6761\u8def\uff0c\u5728\u4e2d\u56fd\u627e\u4e00\u5bb6\u5916\u4f01\uff0c\u6bd4\u5982ThoughtWorks(\u601d\u7279\u6c83\u514b)\uff0c\u505a\u534a\u5e74\u5230\u4e00\u5e74\u540e\u7533\u8bf7\u5916\u8c03\uff0c\u5230\u56fd\u5916\u540e\uff0c\u9002\u5e94\u73af\u5883\u540e\u5728\u8003\u8651\u628a\u5de5\u4f5c\u7b7e\u8bc1\u6362\u6210\u7eff\u5361\u3002 \u8fd9\u79cd\u6a21\u5f0f\u8fd8\u6709\u597d\u5904\uff0c\u5728\u56fd\u5185\u4eab\u53d7\u56fd\u5916\u7684\u5236\u5ea6\uff0c\u6ca1\u6709\u52a0\u73ed\uff0c\u5e74\u5047\u957f\uff0c\u798f\u5229\u597d\uff0c\u88ab\u5f00\u9664\u6709\u5f88\u591a\u5f88\u591a\u7684\u8865\u507f\u3002 \u7b80\u5355\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c \u9886\u82f1 \u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002 \u53c2\u8003\u3002 \u5176\u6b21\u662fglassdoor\u3002","title":"\u5185\u9500\u8f6c\u51fa\u53e3"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_4","text":"\u5982\u679c\u51e0\u79cd\u65b9\u5f0f\u90fd\u4e0d\u884c\uff0c\u90a3\u4e48\u6211\u60f3\u5230\u7684\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u662f\uff0c\u9996\u5148\u5728\u56fd\u5185\u652f\u6301\u8fdc\u7a0b\u4e0a\u73ed\u7684\u516c\u53f8\u5de5\u4f5c\uff0c\u7136\u540e\u5728\u901a\u8fc7\u96c5\u601d\u53bb\u56fd\u5916\uff0c\u8fd9\u6837\u5728\u63a5\u89e6\u65b0\u73af\u5883\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u8131\u4ea7\u800c\u4ea7\u751f\u8fc7\u591a\u7684\u56f0\u96be\u3002 \u9996\u5148\uff0c\u8fdc\u7a0b\u4e0a\u73ed\u7684\u52a3\u52bf\u8981\u5217\u4e00\u4e0b(\u6765\u81ea\u670b\u53cb\u5206\u4eab): * \u53ef\u80fd\u4e0d\u4ea4\u793e\u4fdd\u3002 * \u8001\u677f\u4e5f\u8ba4\u4e3a\u6210\u672c\u51cf\u5c11\uff0c\u6240\u4ee5\u5de5\u8d44\u4e5f\u7ed9\u7684\u5c11\u3002 * \u4fe1\u4efb\u95ee\u9898\uff0c\u8001\u677f\u4e0d\u4fe1\u4efb\u4f60\uff0c\u4f60\u4fe1\u4efb\u8001\u677f\uff0c\u5f88\u5bb9\u6613\u4ea7\u751f\u95ee\u9898\u3002 * \u7f3a\u5c11\u5fc3\u7406\u5065\u5eb7\u7684\u5173\u5fc3\uff0c\u6bd5\u7adf\u6ca1\u6709\u540c\u4e8b\u5728\u65c1\u8fb9\uff0c\u4eba\u4e5f\u662f\u793e\u4ea4\u52a8\u7269\uff0c\u9700\u8981\u601d\u8003\u5982\u4f55\u8865\u6551\u3002","title":"\u56fd\u5185\u652f\u6301\u8fdc\u7a0b\u4e0a\u73ed"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_5","text":"\u4e0e\u5e38\u89c4\u62db\u8058\u6e20\u9053\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u91cc\u6709\u4e00\u4e0b\u6e20\u9053\u5171\u5927\u5bb6\u9009\u62e9: \u7535\u9e2d\u62db\u8058 https://eleduck.com remoteok https://remoteok.io github job https://jobs.github.com/ stackoverflow jobs https://stackoverflow.com/jobs toptal https://www.toptal.com \u9700\u8981\u5168\u5c40\u68af\uff0c\u800c\u4e14\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u7528\u2026","title":"\u8fdc\u7a0b\u62db\u8058\u6e20\u9053"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#another-thing","text":"\u5728\u75ab\u60c5\u4e0b\uff0c\u8fdc\u7a0b\u529e\u516c\u548c\u8fdc\u7a0b\u9762\u8bd5\u5f97\u5230\u4e86\u6700\u5927\u9650\u5ea6\u7684\u53d1\u5c55\u3002\u56fd\u5185\u5916\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u5b8c\u5168\u652f\u6301\u8fdc\u7a0b\u529e\u516c\uff0c\u6bd4\u5982 Facebook \uff0c\u6709\u70b9\u662fIT\u7ec8\u4e8e\u6446\u8131\u5730\u7406\u9650\u5236\uff0c\u5bf9\u56fd\u5185\u800c\u8a00\uff0c\u6162\u6162\u623f\u4ef7\u4e0d\u518d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4f4e\u6210\u672c\u540c\u65f6\u610f\u5473\u7740\u66f4\u5927\u7684\u7ade\u4e89\u548c\u66f4\u4f4e\u7684\u6210\u672c\uff0c\u56fd\u5185\u9996\u5148\u8003\u8651\u540c\u683710k\u7684\u4ef7\u683c\uff0c\u4e3a\u4f55\u4e0d\u96c7\u4e00\u4e2a\u5df2\u7ecf\u4f1a\u8001\u5bb6\u7684n\u5e74\u7ecf\u9a8c\u7684\u8001\u5458\u5de5\uff0c\u800c\u5728\u6df1\u5733\u96c7\u4f63\u4e00\u4e2a10k\u7684\u5b9e\u4e60\u751f\uff0c\u66f4\u5927\u4e00\u70b9\u662f\uff0c10k\u7684\u4ef7\u683c\u53ef\u4ee5\u5728\u5370\u5ea6\u96c7\u4f63\u4e09\u4e2a\u7a0b\u5e8f\u733f\u2026 \u518d\u8fd9\u4e48\u4e00\u4e2a\u5185\u5377\u65f6\u4ee3\uff0c\u5148\u8df3\u51fa\u6765\u7684\u4eba\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a\u5360\u4f4d\u5b50\u7684\u4eba\u3002 \u6362\u4e2a\u5730\u65b9\u5446\u786e\u5b9e\u662f\u4e2a\u8003\u8651\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u540c\u65f6\u8981\u8003\u8651\u4eb2\u4eba\u670b\u53cb\u7684\u611f\u53d7\uff0c\u4e5f\u540c\u65f6\u8981\u8003\u8651\u4f1a\u4e0d\u4f1a\u662f\u4ece\u8fd9\u5ea7\u57ce\u8fdb\u5165\u4e86\u53e6\u4e00\u5ea7\u57ce\u3002 \u5f53\u7136\u56fd\u5bb6\u4e00\u5b9a\u4f1a\u6709\u5730\u65b9\u4fdd\u62a4\u7684\u6cd5\u5f8b\u51fa\u6765\uff0c\u6bd4\u5982 \u5fae\u8f6f\u5141\u8bb8\u5458\u5de5\u6c38\u4e45\u5728\u5bb6\u529e\u516c \u3002 Jeff\u5927\u4f6c\u7684\u89c2\u70b9\uff0c\u5982\u679c\u5185\u5377\u662f\u4e2a\u5fc5\u7136\u8d8b\u52bf\uff0c\u90a3\u4e48\u770b\u5927\u4e00\u70b9\uff0c\u8981\u5185\u5377\u5c31\u5377\u5168\u7403\u3002\u5176\u5b9e\u4e5f\u662f\u53e6\u5916\u4e00\u4e2a\u89d2\u5ea6\u7684\u9ed1\u6697\u68ee\u6797\u3002 \u5173\u4e8e\u8fdc\u7a0b\u9762\u8bd5\uff0c\u8fdc\u7a0b\u9762\u8bd5\u7b80\u5386\u53ef\u4ee5\u8003\u8651\u627e\u670b\u53cb\u6a21\u62df\u9762\u8bd5\uff0c\u63d0\u5347\u81ea\u5df1\u7684\u6c34\u5e73\u3002 \u5176\u5b9e \u5148\u8003\u8651\u5176\u4ed6\u6536\u5165\u6e20\u9053 \u4e5f\u662f\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u65b9\u9762\u66f4\u5185\u5377\uff0c\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002","title":"Another Thing"},{"location":"%E9%9A%8F%E7%AC%94/%E8%BF%9C%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%88%86%E6%9E%90/#_6","text":"VMware SmartX ThoughtWorks","title":"\u670b\u53cb\u5b89\u5229\u7684\u5916\u4f01\u516c\u53f8"},{"location":"%E9%9A%8F%E7%AC%94/%E9%87%8F%E5%8C%96%E7%9B%B8%E5%85%B3/","text":"\u91cf\u5316\u76f8\u5173 \u00b6 \u91cf\u5316\u5c0f\u767d\u4e00\u53ea \u505a\u70b9\u7b14\u8bb0 \u57fa\u7840\u6982\u5ff5\u76f8\u5173 \u9650\u4ef7\u5355\u3001\u6b62\u635f\u5355\u3001\u5e02\u4ef7\u5355\u7b80\u4f8b \u96c6\u5408\u7ade\u4ef7 \u7b56\u7565\u7b97\u6cd5\u76f8\u5173 VWAP\u548cTWAP\u7b97\u6cd5\u4ea4\u6613 iceberg\u7b97\u6cd5 \u5f7c\u5f97\u00b7\u6797\u5947PEG\u7b56\u7565","title":"\u91cf\u5316\u76f8\u5173"},{"location":"%E9%9A%8F%E7%AC%94/%E9%87%8F%E5%8C%96%E7%9B%B8%E5%85%B3/#_1","text":"\u91cf\u5316\u5c0f\u767d\u4e00\u53ea \u505a\u70b9\u7b14\u8bb0 \u57fa\u7840\u6982\u5ff5\u76f8\u5173 \u9650\u4ef7\u5355\u3001\u6b62\u635f\u5355\u3001\u5e02\u4ef7\u5355\u7b80\u4f8b \u96c6\u5408\u7ade\u4ef7 \u7b56\u7565\u7b97\u6cd5\u76f8\u5173 VWAP\u548cTWAP\u7b97\u6cd5\u4ea4\u6613 iceberg\u7b97\u6cd5 \u5f7c\u5f97\u00b7\u6797\u5947PEG\u7b56\u7565","title":"\u91cf\u5316\u76f8\u5173"},{"location":"%E9%A1%B9%E7%9B%AE/GBI%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9/","text":"GBI\u9879\u76ee\u77e5\u8bc6\u70b9 \u00b6 gunicorn \u4e3a flask \u63d0\u4f9b\u9ad8\u5e76\u53d1\u529f\u80fd\u3002 https://www.jianshu.com/p/bf89b761b612 eventlet \u63d0\u9ad8\u7f51\u7edc\u8bbf\u95ee\u7684\u5e76\u53d1\u5e93 https://www.jianshu.com/p/e07ee755c4ac CSRF \u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020 https://blog.csdn.net/stpeace/article/details/53512283 Marshmallow \u5e8f\u5217\u5316\u5904\u7406 https://www.jianshu.com/p/bae2e2d258d1 wtforms \u5b57\u7b26\u9a8c\u8bc1 https://www.jianshu.com/p/ffbe5b0da29e Blueprint \u6a21\u5757\u5316\u63a5\u53e3 https://www.jianshu.com/p/5d5d8c990906","title":"GBI\u9879\u76ee\u77e5\u8bc6\u70b9"},{"location":"%E9%A1%B9%E7%9B%AE/GBI%E9%A1%B9%E7%9B%AE%E7%9F%A5%E8%AF%86%E7%82%B9/#gbi","text":"gunicorn \u4e3a flask \u63d0\u4f9b\u9ad8\u5e76\u53d1\u529f\u80fd\u3002 https://www.jianshu.com/p/bf89b761b612 eventlet \u63d0\u9ad8\u7f51\u7edc\u8bbf\u95ee\u7684\u5e76\u53d1\u5e93 https://www.jianshu.com/p/e07ee755c4ac CSRF \u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020 https://blog.csdn.net/stpeace/article/details/53512283 Marshmallow \u5e8f\u5217\u5316\u5904\u7406 https://www.jianshu.com/p/bae2e2d258d1 wtforms \u5b57\u7b26\u9a8c\u8bc1 https://www.jianshu.com/p/ffbe5b0da29e Blueprint \u6a21\u5757\u5316\u63a5\u53e3 https://www.jianshu.com/p/5d5d8c990906","title":"GBI\u9879\u76ee\u77e5\u8bc6\u70b9"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BC%96%E7%A8%8B%E5%85%B4%E8%B6%A3%E5%B0%8F%E7%BB%84%E6%8B%9B%E4%BA%BA/","text":"\u7f16\u7a0b\u5174\u8da3\u5c0f\u7ec4\u62db\u4eba \u00b6 lz18\u5c4a\u6bd5\u4e1a\u751f\u4e00\u679a\uff0c\u5de5\u4f5c\u6709\u6bb5\u65f6\u95f4\u4e86\uff0c\u8ba1\u79d1\u4e13\u4e1a\u3002 \u4e0a\u73ed\u7684\u65f6\u5019\u6709\u5f88\u591a\u60f3\u6cd5\uff0c\u4f46\u6ca1\u6709\u65f6\u95f4\u5b9e\u73b0\u3002\u6240\u4ee5\u7ec4\u4e2a\u7eaf\u7f51\u7edc\u7684\u5174\u8da3\u5c0f\u7ec4\uff0c\u60f3\u628a\u60f3\u6cd5\u53d8\u73b0\u3002 \u793e\u56e2\u6027\u8d28\uff1a - \u7eaf\u7f51\u7edc\u5174\u8da3\u5c0f\u7ec4\uff08\u4e5f\u5c31\u662f\u6ca1\u6709\u5de5\u4f5c\u5ba4\u5565\u7684\uff0c\u9760\u81ea\u5df1\uff09 - \u7eaf\u516c\u76ca\u793e\u56e2\uff08\u9879\u76ee\u516c\u76ca\uff0c\u4e0d\u5411\u793e\u5458\u6536\u8d39\u540c\u65f6\u4e5f\u4e0d\u8d5a\u94b1\uff0c\u6709\u80fd\u529b\u53ef\u4ee5\u9760\u81ea\u5df1\u63a5case\uff09 - python\u8bed\u8a00\u5411\uff08\u56e0\u4e3alz\u53ea\u4f1apy\u7f16\u7a0b\u8bed\u8a00\uff0c\u6240\u4ee5\u53ea\u80fd\u7ed9\u8fd9\u4e2a\u652f\u6301\uff09 \u5c0f\u7ec4\u6210\u5458\u4e8b\u7269\u5185\u5bb9\uff1a - \u5b66\u4e60\u7f16\u7a0b\uff08\u504fpython\uff0c\u56e0\u4e3alz\u53ea\u80fd\u7ed9\u8fd9\u65b9\u9762\u7684\u6307\u5bfc\u3002\u3002\u3002\uff09 - \u5b9e\u73b0\u5404\u79cd\u5404\u6837\u7684idea\uff08\u6d41\u7a0b\u4e00\u822c\u662f\uff1a\u63d0\u51fa\u60f3\u6cd5\uff0c\u5927\u5bb6\u8ba8\u8bba\u53ef\u884c\u6027\uff0c\u7ec4\u961f\uff0c\u5b9e\u73b0\u60f3\u6cd5\uff09 \u5c0f\u7ec4\u9700\u8981\uff1a - \u5bf9\u7f16\u7a0b\u6709\u5174\u8da3\u7684\u4eba\uff08\u4f30\u6478\u7740\u5e94\u8be5\u9760\u81ea\u5b66\uff0c\u7f16\u7a0b\u6ca1\u5174\u8da3\u5b66\u4e0d\u4e0b\u53bb\u7684\uff09 - \u6709\u4e00\u5b9a\u7684\u7ecf\u6d4e\u57fa\u7840\uff08\u81ea\u5df1\u7684\u7535\u8111\u5f97\u8dd1\u5f97\u8d77\u7f16\u8f91\u5668\u628a\uff0c\u79df\u4e2a\u670d\u52a1\u5668\u6216\u4e70\u4e2a\u6811\u8393\u6d3e\u5565\u7684\uff0c\u4f46\u4e0d\u4f1a\u6709\u5c0f\u7ec4\u6536\u94b1\u7684\u884c\u4e3a\uff09 - \u6709\u65f6\u95f4\uff08\u8bfe\u7a0b\u4e0d\u7d27\uff0c\u95f2\u6687\u65f6\u95f4\u6bd4\u8f83\u591a\uff09 - \u80fd\u81ea\u5df1\u5199\u603b\u7ed3\uff08\u5206\u4eab\u578b\u5c0f\u7ec4\u561b\uff09 \u52a0\u5206\u9879 - \u6709\u4e00\u5b9a\u7f16\u7a0b\u57fa\u7840 - \u8ba1\u7b97\u673a\u4e13\u4e1a\u5927\u4e8c\u5927\u4e09 - \u6709\u4e00\u5b9a\u7684\u82f1\u8bed\u80fd\u529b\uff08\u7f16\u7a0b\uff0c\u82f1\u8bed\u8fd8\u662f\u5f88\u91cd\u8981\u7684\uff09 \u76f8\u4fe1\u6709\u4e9b\u4eba\u89c9\u5f97\u5728\u5b66\u6821\u91cc\u5b66\u7684\u4e1c\u897f\u51fa\u6765\u96be\u627e\u5de5\u4f5c\uff0c\u6211\u89c9\u5f97\u505a\u4e9b\u5f00\u6e90\u9879\u76ee\u4f1a\u5bf9\u4ee5\u540e\u627eITl\u7c7b\u5de5\u4f5cor\u5b9e\u4e60\u6709\u5e2e\u52a9\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u7edd\u5bf9\uff0c\u8fd8\u662f\u5f97\u9760\u81ea\u5df1\u52aa\u529b\u3002 Q\u7fa4\u53f7\uff1a 870632533 \u6b22\u8fce\u8f6c\u7ed9\u8eab\u8fb9\u4eba","title":"\u7f16\u7a0b\u5174\u8da3\u5c0f\u7ec4\u62db\u4eba"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BC%96%E7%A8%8B%E5%85%B4%E8%B6%A3%E5%B0%8F%E7%BB%84%E6%8B%9B%E4%BA%BA/#_1","text":"lz18\u5c4a\u6bd5\u4e1a\u751f\u4e00\u679a\uff0c\u5de5\u4f5c\u6709\u6bb5\u65f6\u95f4\u4e86\uff0c\u8ba1\u79d1\u4e13\u4e1a\u3002 \u4e0a\u73ed\u7684\u65f6\u5019\u6709\u5f88\u591a\u60f3\u6cd5\uff0c\u4f46\u6ca1\u6709\u65f6\u95f4\u5b9e\u73b0\u3002\u6240\u4ee5\u7ec4\u4e2a\u7eaf\u7f51\u7edc\u7684\u5174\u8da3\u5c0f\u7ec4\uff0c\u60f3\u628a\u60f3\u6cd5\u53d8\u73b0\u3002 \u793e\u56e2\u6027\u8d28\uff1a - \u7eaf\u7f51\u7edc\u5174\u8da3\u5c0f\u7ec4\uff08\u4e5f\u5c31\u662f\u6ca1\u6709\u5de5\u4f5c\u5ba4\u5565\u7684\uff0c\u9760\u81ea\u5df1\uff09 - \u7eaf\u516c\u76ca\u793e\u56e2\uff08\u9879\u76ee\u516c\u76ca\uff0c\u4e0d\u5411\u793e\u5458\u6536\u8d39\u540c\u65f6\u4e5f\u4e0d\u8d5a\u94b1\uff0c\u6709\u80fd\u529b\u53ef\u4ee5\u9760\u81ea\u5df1\u63a5case\uff09 - python\u8bed\u8a00\u5411\uff08\u56e0\u4e3alz\u53ea\u4f1apy\u7f16\u7a0b\u8bed\u8a00\uff0c\u6240\u4ee5\u53ea\u80fd\u7ed9\u8fd9\u4e2a\u652f\u6301\uff09 \u5c0f\u7ec4\u6210\u5458\u4e8b\u7269\u5185\u5bb9\uff1a - \u5b66\u4e60\u7f16\u7a0b\uff08\u504fpython\uff0c\u56e0\u4e3alz\u53ea\u80fd\u7ed9\u8fd9\u65b9\u9762\u7684\u6307\u5bfc\u3002\u3002\u3002\uff09 - \u5b9e\u73b0\u5404\u79cd\u5404\u6837\u7684idea\uff08\u6d41\u7a0b\u4e00\u822c\u662f\uff1a\u63d0\u51fa\u60f3\u6cd5\uff0c\u5927\u5bb6\u8ba8\u8bba\u53ef\u884c\u6027\uff0c\u7ec4\u961f\uff0c\u5b9e\u73b0\u60f3\u6cd5\uff09 \u5c0f\u7ec4\u9700\u8981\uff1a - \u5bf9\u7f16\u7a0b\u6709\u5174\u8da3\u7684\u4eba\uff08\u4f30\u6478\u7740\u5e94\u8be5\u9760\u81ea\u5b66\uff0c\u7f16\u7a0b\u6ca1\u5174\u8da3\u5b66\u4e0d\u4e0b\u53bb\u7684\uff09 - \u6709\u4e00\u5b9a\u7684\u7ecf\u6d4e\u57fa\u7840\uff08\u81ea\u5df1\u7684\u7535\u8111\u5f97\u8dd1\u5f97\u8d77\u7f16\u8f91\u5668\u628a\uff0c\u79df\u4e2a\u670d\u52a1\u5668\u6216\u4e70\u4e2a\u6811\u8393\u6d3e\u5565\u7684\uff0c\u4f46\u4e0d\u4f1a\u6709\u5c0f\u7ec4\u6536\u94b1\u7684\u884c\u4e3a\uff09 - \u6709\u65f6\u95f4\uff08\u8bfe\u7a0b\u4e0d\u7d27\uff0c\u95f2\u6687\u65f6\u95f4\u6bd4\u8f83\u591a\uff09 - \u80fd\u81ea\u5df1\u5199\u603b\u7ed3\uff08\u5206\u4eab\u578b\u5c0f\u7ec4\u561b\uff09 \u52a0\u5206\u9879 - \u6709\u4e00\u5b9a\u7f16\u7a0b\u57fa\u7840 - \u8ba1\u7b97\u673a\u4e13\u4e1a\u5927\u4e8c\u5927\u4e09 - \u6709\u4e00\u5b9a\u7684\u82f1\u8bed\u80fd\u529b\uff08\u7f16\u7a0b\uff0c\u82f1\u8bed\u8fd8\u662f\u5f88\u91cd\u8981\u7684\uff09 \u76f8\u4fe1\u6709\u4e9b\u4eba\u89c9\u5f97\u5728\u5b66\u6821\u91cc\u5b66\u7684\u4e1c\u897f\u51fa\u6765\u96be\u627e\u5de5\u4f5c\uff0c\u6211\u89c9\u5f97\u505a\u4e9b\u5f00\u6e90\u9879\u76ee\u4f1a\u5bf9\u4ee5\u540e\u627eITl\u7c7b\u5de5\u4f5cor\u5b9e\u4e60\u6709\u5e2e\u52a9\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u7edd\u5bf9\uff0c\u8fd8\u662f\u5f97\u9760\u81ea\u5df1\u52aa\u529b\u3002 Q\u7fa4\u53f7\uff1a 870632533 \u6b22\u8fce\u8f6c\u7ed9\u8eab\u8fb9\u4eba","title":"\u7f16\u7a0b\u5174\u8da3\u5c0f\u7ec4\u62db\u4eba"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BD%91%E6%98%93%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%AD%8C%E6%9B%B2%E6%94%B6%E9%9B%86/","text":"\u7f51\u6613\u4e91\u6d88\u606f\u63a8\u9001\u6b4c\u66f2\u6536\u96c6 \u00b6 \u9879\u76ee\u4ecb\u7ecd \u00b6 \u901a\u8fc7Chrome\u4e0eselenium \u5c06\u7f51\u6613\u4e91\u79c1\u4fe1\u4e2d\u6b4c\u66f2\u653e\u5230\u4e00\u4e2a\u6b4c\u5355\u4e2d\uff0c\u65b9\u4fbf\u5b9e\u65f6\u6536\u542c\u65b0\u6b4c\u3002 \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u5df2\u767b\u5f55\u7684Chrome\uff08\u4fdd\u5b58\u6709\u7f51\u6613\u4e91\u7f51\u7ad9\u767b\u5f55\u6001\uff09\uff0c\u6a21\u62df\u7528\u6237\u64cd\u4f5c\uff0c\u6536\u85cf\u65b0\u6b4c\u3002 \u5173\u952e\u4ee3\u7801 \u00b6 \u521d\u59cb\u5316selenium def init_driver(): executable_path = \"chromedriver\" if not os.path.exists(\"chromedriver.exe\"): # \u65e0\u9a71\u5219\u9700\u8981\u4e0b\u8f7d # \u672c\u5730\u9879\u76ee \u590d\u5236\u9a71\u52a8 _path = os.path.abspath(__file__) if not \"crawler_set\" in _path: root_path = _path[:_path.index(\"crawler_set\") + len(\"crawler_set\")] executable_path = os.path.join(root_path, \"driver\", \"chromedriver.exe\") else: # \u5355\u4e2a\u6587\u4ef6 \u4e0b\u8f7d\u9a71\u52a8 url = \"https://raw.githubusercontent.com/AngusWG/crawler_set/master/driver/chromedriver.exe\" proxies = { \"http\": \"socks5://127.0.0.1:1080\", \"https\": \"socks5://127.0.0.1:1080\" } r = requests.get(url, proxies=proxies) with open(\"chromedriver.exe\", \"wb\") as code: content_size = int(r.headers['content-length']) # \u5185\u5bb9\u4f53\u603b\u5927\u5c0f for data in tqdm(iterable=r.iter_content(1024), total=content_size, unit=\"k\", desc=\"\u4e0b\u8f7d\u9a71\u52a8\"): code.write(data) user_cookies = \"\".join([os.path.expanduser('~'), r\"\\AppData\\Local\\Google\\Chrome\\User Data\"]) option = webdriver.ChromeOptions() option.add_argument(\"--user-data-dir={}\".format(user_cookies)) # \u8bbe\u7f6e\u6210\u7528\u6237\u81ea\u5df1\u7684\u6570\u636e\u76ee\u5f55 try: driver = webdriver.Chrome(executable_path, options=option) driver.implicitly_wait(5) return driver except WebDriverException: print(\"\u8bf7\u5148\u5173\u6389\u6240\u6709\u7684Chrome\") exit(-2) \u6536\u85cf\u6b4c\u66f2 def save_song(url): print(\"[{}] start\".format(url), end=\" \") driver.get(url) driver.switch_to.frame(\"contentFrame\") title = driver.find_element_by_xpath('//div[contains(@class, \"tit\")]').text for word in shielding_words: if word in title: print(\"{} \u56e0 {} \u5df2\u5ffd\u7565\".format(title, word)) return driver.find_element_by_xpath('//*[contains(text(), \"\u6536\u85cf\")]').click() driver.find_element_by_xpath('//*[contains(text(), \"{}\")]'.format(song_dir)).click() print(title) \u5168\u90e8\u4ee3\u7801 \u00b6 #!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/12/19 9:36 # @author : zza # @Email : 740713651@qq.com # @File : \u5c06\u7f51\u6613\u4e91\u7684\u79c1\u4fe1\u97f3\u4e50\u6574\u7406.py \"\"\" \u8be5\u811a\u672c\u4f1a\u4fdd\u5b58\u6bcf\u5929\u65b0\u79c1\u4fe1\u91cc\u6700\u540e\u51e0\u9996\u6b4c\u66f2\u5230tmp_save_dir 1.\u5728Chrome\u4e0a\u767b\u5f55\u81ea\u5df1\u7684\u7f51\u6613\u4e91\u5e10\u53f7t 2.\u521b\u5efatmp_save_dir \u7136\u540e\u8fd0\u884c\u811a\u672c \"\"\" import os import requests from selenium import webdriver from selenium.common.exceptions import WebDriverException, NoSuchElementException from tqdm import tqdm song_dir = \"tmp_save_dir\" # \u5c4f\u853d\u5173\u952e\u8bcd shielding_words = ['\u4f34\u594f'] def init_driver(): executable_path = \"chromedriver\" if not os.path.exists(\"chromedriver.exe\"): # \u65e0\u9a71\u5219\u9700\u8981\u4e0b\u8f7d # \u672c\u5730\u9879\u76ee \u590d\u5236\u9a71\u52a8 _path = os.path.abspath(__file__) if not \"crawler_set\" in _path: root_path = _path[:_path.index(\"crawler_set\") + len(\"crawler_set\")] executable_path = os.path.join(root_path, \"driver\", \"chromedriver.exe\") else: # \u5355\u4e2a\u6587\u4ef6 \u4e0b\u8f7d\u9a71\u52a8 url = \"https://raw.githubusercontent.com/AngusWG/crawler_set/master/driver/chromedriver.exe\" proxies = { \"http\": \"socks5://127.0.0.1:1080\", \"https\": \"socks5://127.0.0.1:1080\" } r = requests.get(url, proxies=proxies) with open(\"chromedriver.exe\", \"wb\") as code: content_size = int(r.headers['content-length']) # \u5185\u5bb9\u4f53\u603b\u5927\u5c0f for data in tqdm(iterable=r.iter_content(1024), total=content_size, unit=\"k\", desc=\"\u4e0b\u8f7d\u9a71\u52a8\"): code.write(data) user_cookies = \"\".join([os.path.expanduser('~'), r\"\\AppData\\Local\\Google\\Chrome\\User Data\"]) option = webdriver.ChromeOptions() option.add_argument(\"--user-data-dir={}\".format(user_cookies)) # \u8bbe\u7f6e\u6210\u7528\u6237\u81ea\u5df1\u7684\u6570\u636e\u76ee\u5f55 try: driver = webdriver.Chrome(executable_path, options=option) driver.implicitly_wait(5) return driver except WebDriverException: print(\"\u8bf7\u5148\u5173\u6389\u6240\u6709\u7684Chrome\") exit(-2) def get_private_detail(): # \u70b9\u51fb\u79c1\u4fe1\u540e driver.get(\"https://music.163.com/#/msg/m/private\") driver.switch_to.frame(\"contentFrame\") new_msg_items = driver.find_elements_by_xpath('//i[@class=\"u-bub\"]/b[@class=\"f-alpha\"]/..//parent::*//a') private_detail_url_dict = dict() for i in new_msg_items: _, singer_id = i.get_attribute(\"href\").split(\"?\") uri = \"https://music.163.com/#/msg/m/private_detail?\" + singer_id msg_num = int(i.find_element_by_xpath(\"../i/em\").text) private_detail_url_dict[uri] = msg_num return private_detail_url_dict def get_song_url_from_album_set(url): song_set = set() # \u6b4c\u66f2\u9875\u9762\u4fdd\u5b58 driver.get(url) driver.switch_to.frame(\"contentFrame\") url_list = driver.find_elements_by_xpath('//a[contains(@href, \"/song?id\")]') for item in url_list: if \"\u4f34\u594f\" in item.text: break _, song_id = item.get_attribute(\"href\").split(\"?id=\") song_set.add(\"https://music.163.com/#/song?id=\" + song_id) song_name = item.find_element_by_xpath(\"./b\").get_attribute(\"title\") print(song_name, end=\" \") return song_set def get_song_url_from_private_detail(url, msg_num): album_set = set() song_set = set() # \u6b4c\u66f2\u9875\u9762\u4fdd\u5b58 driver.get(url) driver.switch_to.frame(\"contentFrame\") url_list = driver.find_elements_by_xpath('//div[contains(@class,\"itemleft\")]')[-msg_num:] for item in url_list: try: i = item.find_element_by_xpath( './/a[contains(@href,\"album?id\") or contains(@href, \"song?id\")]').get_attribute(\"href\") _, _id = i.split(\"?id=\") if \"song?id\" in i: song_set.add(\"https://music.163.com/#/song?id=\" + _id) else: # \"album?id\" album_set.add(\"https://music.163.com/#/album?id=\" + _id) except NoSuchElementException: pass for album_url in album_set: song_set.update(get_song_url_from_album_set(album_url)) return song_set def save_song(url): print(\"[{}] start\".format(url), end=\" \") driver.get(url) driver.switch_to.frame(\"contentFrame\") title = driver.find_element_by_xpath('//div[contains(@class, \"tit\")]').text for word in shielding_words: if word in title: print(\"{} \u56e0 {} \u5df2\u5ffd\u7565\".format(title, word)) return driver.find_element_by_xpath('//*[contains(text(), \"\u6536\u85cf\")]').click() driver.find_element_by_xpath('//*[contains(text(), \"{}\")]'.format(song_dir)).click() print(title) driver = init_driver() if not os.path.exists(\"tmp.txt\"): # \u83b7\u53d6\u79c1\u4fe1\u7528\u6237\u5217\u8868 private_detail_url_dict = get_private_detail() print(\"private_detail_url_set len={}\".format(len(private_detail_url_dict))) # \u83b7\u53d6\u6b4c\u66f2id song_url_set = set() for private_detail_url, msg_num in private_detail_url_dict.items(): song_url_set.update(get_song_url_from_private_detail(private_detail_url, msg_num)) print(\"song_url_set len={}\".format(len(song_url_set))) with open(\"tmp.txt\", \"w\", encoding=\"utf8\") as f: f.write(\"\\n\".join(song_url_set)) else: with open(\"tmp.txt\", \"r\", encoding=\"utf8\") as f: data = f.read() song_url_set = data.split(\"\\n\") if data else [] # \u4fdd\u5b58\u6b4c\u66f2 for song_url in song_url_set: save_song(song_url) os.remove(\"tmp.txt\") driver.close()","title":"\u7f51\u6613\u4e91\u6d88\u606f\u63a8\u9001\u6b4c\u66f2\u6536\u96c6"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BD%91%E6%98%93%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%AD%8C%E6%9B%B2%E6%94%B6%E9%9B%86/#_1","text":"","title":"\u7f51\u6613\u4e91\u6d88\u606f\u63a8\u9001\u6b4c\u66f2\u6536\u96c6"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BD%91%E6%98%93%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%AD%8C%E6%9B%B2%E6%94%B6%E9%9B%86/#_2","text":"\u901a\u8fc7Chrome\u4e0eselenium \u5c06\u7f51\u6613\u4e91\u79c1\u4fe1\u4e2d\u6b4c\u66f2\u653e\u5230\u4e00\u4e2a\u6b4c\u5355\u4e2d\uff0c\u65b9\u4fbf\u5b9e\u65f6\u6536\u542c\u65b0\u6b4c\u3002 \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u5df2\u767b\u5f55\u7684Chrome\uff08\u4fdd\u5b58\u6709\u7f51\u6613\u4e91\u7f51\u7ad9\u767b\u5f55\u6001\uff09\uff0c\u6a21\u62df\u7528\u6237\u64cd\u4f5c\uff0c\u6536\u85cf\u65b0\u6b4c\u3002","title":"\u9879\u76ee\u4ecb\u7ecd"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BD%91%E6%98%93%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%AD%8C%E6%9B%B2%E6%94%B6%E9%9B%86/#_3","text":"\u521d\u59cb\u5316selenium def init_driver(): executable_path = \"chromedriver\" if not os.path.exists(\"chromedriver.exe\"): # \u65e0\u9a71\u5219\u9700\u8981\u4e0b\u8f7d # \u672c\u5730\u9879\u76ee \u590d\u5236\u9a71\u52a8 _path = os.path.abspath(__file__) if not \"crawler_set\" in _path: root_path = _path[:_path.index(\"crawler_set\") + len(\"crawler_set\")] executable_path = os.path.join(root_path, \"driver\", \"chromedriver.exe\") else: # \u5355\u4e2a\u6587\u4ef6 \u4e0b\u8f7d\u9a71\u52a8 url = \"https://raw.githubusercontent.com/AngusWG/crawler_set/master/driver/chromedriver.exe\" proxies = { \"http\": \"socks5://127.0.0.1:1080\", \"https\": \"socks5://127.0.0.1:1080\" } r = requests.get(url, proxies=proxies) with open(\"chromedriver.exe\", \"wb\") as code: content_size = int(r.headers['content-length']) # \u5185\u5bb9\u4f53\u603b\u5927\u5c0f for data in tqdm(iterable=r.iter_content(1024), total=content_size, unit=\"k\", desc=\"\u4e0b\u8f7d\u9a71\u52a8\"): code.write(data) user_cookies = \"\".join([os.path.expanduser('~'), r\"\\AppData\\Local\\Google\\Chrome\\User Data\"]) option = webdriver.ChromeOptions() option.add_argument(\"--user-data-dir={}\".format(user_cookies)) # \u8bbe\u7f6e\u6210\u7528\u6237\u81ea\u5df1\u7684\u6570\u636e\u76ee\u5f55 try: driver = webdriver.Chrome(executable_path, options=option) driver.implicitly_wait(5) return driver except WebDriverException: print(\"\u8bf7\u5148\u5173\u6389\u6240\u6709\u7684Chrome\") exit(-2) \u6536\u85cf\u6b4c\u66f2 def save_song(url): print(\"[{}] start\".format(url), end=\" \") driver.get(url) driver.switch_to.frame(\"contentFrame\") title = driver.find_element_by_xpath('//div[contains(@class, \"tit\")]').text for word in shielding_words: if word in title: print(\"{} \u56e0 {} \u5df2\u5ffd\u7565\".format(title, word)) return driver.find_element_by_xpath('//*[contains(text(), \"\u6536\u85cf\")]').click() driver.find_element_by_xpath('//*[contains(text(), \"{}\")]'.format(song_dir)).click() print(title)","title":"\u5173\u952e\u4ee3\u7801"},{"location":"%E9%A1%B9%E7%9B%AE/%E7%BD%91%E6%98%93%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E6%AD%8C%E6%9B%B2%E6%94%B6%E9%9B%86/#_4","text":"#!/usr/bin/python3 # encoding: utf-8 # @Time : 2019/12/19 9:36 # @author : zza # @Email : 740713651@qq.com # @File : \u5c06\u7f51\u6613\u4e91\u7684\u79c1\u4fe1\u97f3\u4e50\u6574\u7406.py \"\"\" \u8be5\u811a\u672c\u4f1a\u4fdd\u5b58\u6bcf\u5929\u65b0\u79c1\u4fe1\u91cc\u6700\u540e\u51e0\u9996\u6b4c\u66f2\u5230tmp_save_dir 1.\u5728Chrome\u4e0a\u767b\u5f55\u81ea\u5df1\u7684\u7f51\u6613\u4e91\u5e10\u53f7t 2.\u521b\u5efatmp_save_dir \u7136\u540e\u8fd0\u884c\u811a\u672c \"\"\" import os import requests from selenium import webdriver from selenium.common.exceptions import WebDriverException, NoSuchElementException from tqdm import tqdm song_dir = \"tmp_save_dir\" # \u5c4f\u853d\u5173\u952e\u8bcd shielding_words = ['\u4f34\u594f'] def init_driver(): executable_path = \"chromedriver\" if not os.path.exists(\"chromedriver.exe\"): # \u65e0\u9a71\u5219\u9700\u8981\u4e0b\u8f7d # \u672c\u5730\u9879\u76ee \u590d\u5236\u9a71\u52a8 _path = os.path.abspath(__file__) if not \"crawler_set\" in _path: root_path = _path[:_path.index(\"crawler_set\") + len(\"crawler_set\")] executable_path = os.path.join(root_path, \"driver\", \"chromedriver.exe\") else: # \u5355\u4e2a\u6587\u4ef6 \u4e0b\u8f7d\u9a71\u52a8 url = \"https://raw.githubusercontent.com/AngusWG/crawler_set/master/driver/chromedriver.exe\" proxies = { \"http\": \"socks5://127.0.0.1:1080\", \"https\": \"socks5://127.0.0.1:1080\" } r = requests.get(url, proxies=proxies) with open(\"chromedriver.exe\", \"wb\") as code: content_size = int(r.headers['content-length']) # \u5185\u5bb9\u4f53\u603b\u5927\u5c0f for data in tqdm(iterable=r.iter_content(1024), total=content_size, unit=\"k\", desc=\"\u4e0b\u8f7d\u9a71\u52a8\"): code.write(data) user_cookies = \"\".join([os.path.expanduser('~'), r\"\\AppData\\Local\\Google\\Chrome\\User Data\"]) option = webdriver.ChromeOptions() option.add_argument(\"--user-data-dir={}\".format(user_cookies)) # \u8bbe\u7f6e\u6210\u7528\u6237\u81ea\u5df1\u7684\u6570\u636e\u76ee\u5f55 try: driver = webdriver.Chrome(executable_path, options=option) driver.implicitly_wait(5) return driver except WebDriverException: print(\"\u8bf7\u5148\u5173\u6389\u6240\u6709\u7684Chrome\") exit(-2) def get_private_detail(): # \u70b9\u51fb\u79c1\u4fe1\u540e driver.get(\"https://music.163.com/#/msg/m/private\") driver.switch_to.frame(\"contentFrame\") new_msg_items = driver.find_elements_by_xpath('//i[@class=\"u-bub\"]/b[@class=\"f-alpha\"]/..//parent::*//a') private_detail_url_dict = dict() for i in new_msg_items: _, singer_id = i.get_attribute(\"href\").split(\"?\") uri = \"https://music.163.com/#/msg/m/private_detail?\" + singer_id msg_num = int(i.find_element_by_xpath(\"../i/em\").text) private_detail_url_dict[uri] = msg_num return private_detail_url_dict def get_song_url_from_album_set(url): song_set = set() # \u6b4c\u66f2\u9875\u9762\u4fdd\u5b58 driver.get(url) driver.switch_to.frame(\"contentFrame\") url_list = driver.find_elements_by_xpath('//a[contains(@href, \"/song?id\")]') for item in url_list: if \"\u4f34\u594f\" in item.text: break _, song_id = item.get_attribute(\"href\").split(\"?id=\") song_set.add(\"https://music.163.com/#/song?id=\" + song_id) song_name = item.find_element_by_xpath(\"./b\").get_attribute(\"title\") print(song_name, end=\" \") return song_set def get_song_url_from_private_detail(url, msg_num): album_set = set() song_set = set() # \u6b4c\u66f2\u9875\u9762\u4fdd\u5b58 driver.get(url) driver.switch_to.frame(\"contentFrame\") url_list = driver.find_elements_by_xpath('//div[contains(@class,\"itemleft\")]')[-msg_num:] for item in url_list: try: i = item.find_element_by_xpath( './/a[contains(@href,\"album?id\") or contains(@href, \"song?id\")]').get_attribute(\"href\") _, _id = i.split(\"?id=\") if \"song?id\" in i: song_set.add(\"https://music.163.com/#/song?id=\" + _id) else: # \"album?id\" album_set.add(\"https://music.163.com/#/album?id=\" + _id) except NoSuchElementException: pass for album_url in album_set: song_set.update(get_song_url_from_album_set(album_url)) return song_set def save_song(url): print(\"[{}] start\".format(url), end=\" \") driver.get(url) driver.switch_to.frame(\"contentFrame\") title = driver.find_element_by_xpath('//div[contains(@class, \"tit\")]').text for word in shielding_words: if word in title: print(\"{} \u56e0 {} \u5df2\u5ffd\u7565\".format(title, word)) return driver.find_element_by_xpath('//*[contains(text(), \"\u6536\u85cf\")]').click() driver.find_element_by_xpath('//*[contains(text(), \"{}\")]'.format(song_dir)).click() print(title) driver = init_driver() if not os.path.exists(\"tmp.txt\"): # \u83b7\u53d6\u79c1\u4fe1\u7528\u6237\u5217\u8868 private_detail_url_dict = get_private_detail() print(\"private_detail_url_set len={}\".format(len(private_detail_url_dict))) # \u83b7\u53d6\u6b4c\u66f2id song_url_set = set() for private_detail_url, msg_num in private_detail_url_dict.items(): song_url_set.update(get_song_url_from_private_detail(private_detail_url, msg_num)) print(\"song_url_set len={}\".format(len(song_url_set))) with open(\"tmp.txt\", \"w\", encoding=\"utf8\") as f: f.write(\"\\n\".join(song_url_set)) else: with open(\"tmp.txt\", \"r\", encoding=\"utf8\") as f: data = f.read() song_url_set = data.split(\"\\n\") if data else [] # \u4fdd\u5b58\u6b4c\u66f2 for song_url in song_url_set: save_song(song_url) os.remove(\"tmp.txt\") driver.close()","title":"\u5168\u90e8\u4ee3\u7801"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/","text":"\u97ed\u83dc\u7684\u80a1\u5e02\u7814\u7a76 \u00b6 \u5199\u5728\u524d\u9762\u7684\u8bdd \u00b6 \u901a\u8fc7 \u7c73\u7b50 \u7f51\u7ad9\u63d0\u4f9b\u7684\u91cf\u5316\u5e73\u53f0\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002 \u505a\u8fd9\u4e2a\u7814\u7a76\u7684\u521d\u8877\u662f\u7b14\u8005\u6709\u4e00\u70b9\u610f\u8c61\u6295\u8d44\u80a1\u5e02\uff0c\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u6295\u8d44\u65b9\u6848\uff08\u7b56\u7565\uff09\uff0c\u6211\u60f3\u5148\u62ff19\u5e74\u7684\u6570\u636e\u8dd1\u4e00\u8dd1\u6211\u7684\u65b9\u6848\uff08\u7b56\u7565\uff09\uff0c\u5982\u679c\u4e8f\u94b1\u4e86\uff0c\u5c31\u4e0d\u73a9\u80a1\u5e02\uff0c\u8001\u8001\u5b9e\u5b9e\u73a9\u57fa\u91d1\u4e86\u3002 \u5173\u4e8e\u5982\u4f55\u8bfb\u8fd9\u4e2a\u56fe \u00b6 \u9996\u5148\u80fd\u770b\u5230\u65f6\u95f4\uff0c\u6211\u7684\u6570\u636e\u662f\u4ece 2019\u5e7401 -- 2020\u5e7401 , \u7ea2\u8272\u7684\u7ebf\u4ee3\u8868\u8d26\u6237\u5e02\u503c\uff08\u628a\u80a1\u7968\u6301\u4ed3\u4e5f\u6362\u7b97\u6210\u94b1\uff09\u7684\u53d8\u5316\u3002 \u84dd\u8272\u7684\u7ebf\u4ee3\u8868\u57fa\u51c6\uff08\u6caa\u6df1\u4e09\u767e\uff09\u7684\u5e02\u503c\u53d8\u5316\u3002 \u5176\u6b21\u6700\u91cd\u8981\u7684\u6307\u6807\uff0c \u56de\u6d4b\u6536\u76ca \uff0c\u8868\u793a\u7684\u662f\u6211\u672c\u91d1\u5230\u65f6\u95f4\u7ed3\u675f\uff0c\u6da8\u4e86\u591a\u5c11\uff0c\u6bd4\u5982\u6211\u67095w\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u8868\u793a\u6211\u5e74\u672b\u7ed3\u675f\u6da8\u5230\u4e86 5*(0.09+1) = 5.45(\u4e07\u5143) \u3002 \u7136\u540e\u5e73\u5747\u4e00\u5e74\u80fd\u670913.5%\u7684\u6536\u76ca\u3002 \u7136\u540e\u770b \u57fa\u51c6\u6536\u76ca ,\u8fd9\u4e2a\u6211\u4e00\u822c\u8bbe\u7f6e\u7684\u662f\u6caa\u6df1\u4e09\u767e\uff0c\u4e5f\u5c31\u662f\u5927\u76d8\uff0c\u8fd9\u4e2a\u56fe\u8868\u793a19\u5e74\u5927\u76d8\u6da8\u4e86 30+% \uff0c\u800c\u6211\u7684\u7b56\u7565\u53ea\u6709 9+% \uff0c\u5176\u5b9e\u662f\u6ca1\u6709\u8dd1\u8d62\u5927\u76d8\u7684( \u8fd8\u4e0d\u5982\u4e70\u57fa\u91d1 )\u3002 \u7136\u540e\u9700\u8981\u6ce8\u610f\u4e0b\u4e00\u4e2a\u6307\u6807\u201dMaxDrawdown(\u6700\u5927\u56de\u6d4b)\u201d:\u6700\u5927\u56de\u64a4\u662f\u6700\u5e38\u7528\u7684\u6307\u6807\uff0c\u63cf\u8ff0\u4e86\u6295\u8d44\u8005\u53ef\u80fd\u9762\u4e34\u7684\u6700\u5927\u4e8f\u635f\u3002\u6700\u5927\u56de\u64a4\u7684\u6570\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u8d8a\u5927\u8bf4\u660e\u98ce\u9669\u8d8a\u5927\u3002 Sharpe(\u590f\u666e\u7387)\uff1a\u590f\u666e\u6bd4\u7387\u82e5\u4e3a\u6b63\u503c\uff0c\u4ee3\u8868\u57fa\u91d1\u62a5\u916c\u7387\u5927\u4e8e\u98ce\u9669\uff1b\u82e5\u4e3a\u8d1f\u503c\uff0c\u4ee3\u8868\u57fa\u91d1\u98ce\u9669\u5927\u4e8e\u62a5\u916c\u7387\u3002\u56e0\u6b64\uff0c\u590f\u666e\u6bd4\u7387\u8d8a\u9ad8\uff0c\u6295\u8d44\u7ec4\u5408\u8d8a\u4f73\u3002 \u597d\u4e86\uff0c\u4e0b\u9762\u5f00\u59cb\u6b63\u6587\u3002 \u68c0\u6d4b\u4f4e\u4e8e x \u5143\u7684 \u80a1\u7968 \uff0c\u8d2d\u4e70\u5e76\u6301\u67093\u4e2a\u793c\u62dc\u540e\u629b\u51fa \u00b6 \u8fd9\u4e2a\u662f\u4e00\u4e2a\u666e\u904d\u7684\u8d2d\u4e70\u601d\u8def\uff0c\u89c9\u5f97\u5e95\u4ef7\u80a1\u7968\u4e00\u5b9a\u4f1a\u957f\uff0c\u6211\u77ed\u671f\u6301\u6709\u7136\u540e\u7b49\u4ed6\u9ad8\u4e8e\u67d0\u4e2a\u4ef7\u683c\u5c31\u51fa\u552e\uff0c\u6211\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u60c5\u51b5\uff0c\u4e0b\u9762\u662f\u4ee3\u7801: #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/18 14:32 # @author : zza # @Email : 740713651@qq.com import warnings import pandas import rqdatac __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 5000, } }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, } } def init(context): context.lowest = 5 context.highest = 5.9 context.day_count = 0 context.holding_days = 10 def get_ticker(context): all_ins = rqdatac.all_instruments(\"Stock\").order_book_id.to_list() price_df = rqdatac.get_price(all_ins, context.now, context.now, expect_df=True, fields=['close']) price_df = price_df.reset_index(drop=False) price_df = price_df[(context.lowest <= price_df.close) & (price_df.close <= context.highest)] start_date = rqdatac.get_previous_trading_date(context.now, 2) price_df_2 = rqdatac.get_price(price_df.order_book_id.to_list(), start_date, context.now, expect_df=True, fields=['close']).reset_index(drop=False) order_ticker = [] for order_book_id, data_df in price_df_2.groupby(price_df_2.order_book_id): if (data_df.close.shift(fill_value=0) < data_df.close).all(): order_ticker.append(order_book_id) return order_ticker def before_trading(context): context.day_count += 1 if (context.day_count - 1) % context.holding_days == 0: context.order_ticker = get_ticker(context) def handle_bar(context, bar_dict): if (context.day_count - 1) % context.holding_days == 0: with warnings.catch_warnings(): for item in context.order_ticker: o = order_target_value(item, 1000) if o: print(o) if (context.day_count - 1) % context.holding_days == (context.holding_days-1): for item in context.portfolio.positions.keys(): order_target_value(item, 0) def after_trading(context): print(\"total_value {}\".format(context.portfolio.total_value)) if (context.day_count - 1) % 15 == 0: items = [] for k, v in context.portfolio.positions.items(): items.append({\"order_book_id\": k, \"quantity\": v.quantity}) print(pandas.DataFrame(items)) if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u6301\u67093\u4e2a\u4ea4\u6613\u65e5 \u6301\u670910\u4e2a\u4ea4\u6613\u65e5 \u6301\u670915\u4e2a\u4ea4\u6613\u65e5 \u7ed3\u8bba\uff1a\u5e95\u4ef7\u80a1\u7968\u786e\u5b9e\u4f1a\u968f\u7740\u5927\u76d8\u7684\u6da8\u800c\u6709\u4e00\u5b9a\u7684\u6ce2\u52a8\uff0c\u4f46\u6700\u7ec8\u90fd\u662f\u4f1a\u8d54\u94b1\u7684\uff0c\u4e14\u4e09\u4e2a\u4ea4\u6613\u7684\u65e5\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8d54\u94b1\u4e86\u3002\u8fd9\u4e2a\u56fe\u53ef\u4ee5\u7ed9\u5e7f\u5927\u8bfb\u8005\u7684\u4fdd\u4f51\u4fa5\u5e78\u5fc3\u91cc\u7684\u670b\u53cb\u770b\u770b\uff0c \u4e00\u5e74\u5fd9\u5230\u5934\uff0c\u4e0d\u5982\u4e70\u56fd\u8fd0\uff08\u6caa\u6df1\u4e09\u767e\uff09\u3002 \u6839\u636e\u516c\u4f17\u53f7 \u95f7\u58f0\u53d1\u5c0f\u8d22 \u00b6 \u8fd9\u4e2a\u662f\u6839\u636e\u6211\u4e00\u4e2a\u670b\u53cb\u8dd1\u7684\u7b97\u6cd5\u8dd1\u51fa\u6765\u7684\u53ef\u80fd\u4f1a\u6da8\u7684\u6982\u7387\u3002\u7b14\u8005\u62ff\u5230\u4e86\u4ed6\u4e00\u5e74\u7684\u6570\u636e\uff08\u6ca1\u7528\u722c\u866b\uff09\uff0c\u7136\u540e\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u6da8\uff0c\u8fd9\u4e48\u8dd1\u7684\u539f\u56e0\u662f\uff0c\u6211\u5f53\u521d\u786e\u5b9e\u60f3\u6309\u7740\u4ed6\u7684\u8fd9\u4e2a\u516c\u4f17\u53f7\u6765\u4e70\uff0c\u4e0d\u8fc7\u65e2\u7136\u6709\u56de\u653e\u6570\u636e\u6d4b\u8bd5\uff0c\u6211\u5f53\u7136\u5148\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u672c\u91d1\u672c\u6765\u5c31\u4e0d\u591a\uff0c\u6325\u970d\u4e0d\u4e86\uff0c\u4e0d\u6562\u968f\u4fbf\u6559\u5b66\u8d39\u3002 \u7b56\u7565\u5982\u4e0b\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py import warnings import numpy import pandas import rqdatac from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 5000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def init(context): context.df = pandas.read_csv(\"\u53d1\u5c0f\u8d22.csv\", dtype={\"\u80a1\u7968\u4ee3\u7801\": numpy.str}) context.df['order_book_id'] = rqdatac.id_convert(context.df[\"\u80a1\u7968\u4ee3\u7801\"].to_list()) context.used_df = context.df[context.df[\"\u9884\u6d4b\u7ed3\u679c\"] > 0.7] context.sell_multiple = 1.08 context.holding_days = 1 context.buy_queen = [] context.sell_map = {} def before_trading(context): print(\"\u5f53\u65e5\u8d2d\u4e70:{}\".format(context.buy_queen)) print(\"\u5f53\u65e5\u6301\u4ed3:{}\".format(list(context.sell_map.keys()))) def handle_bar(context, bar_dict): while context.buy_queen: order_book_id = context.buy_queen.pop() if context.stock_account.cash > 1000: o = order_value(order_book_id, 1000) if o: trading_dt = get_next_trading_date(context.now, context.holding_days).to_pydatetime() context.sell_map[order_book_id] = trading_dt print(\"[{}] \u8d2d\u4e70\u6210\u529f\".format(order_book_id)) else: print(\"[{}]\u8d44\u91d1\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8d2d\u4e70\".format(order_book_id)) for order_id, dt in context.sell_map.copy().items(): a = dt.date() <= context.now.date() b = bar_dict[order_id].close > get_position(order_id).avg_price # * context.sell_multiple if a and b: o = order_percent(order_id, -1) if o: del context.sell_map[order_id] print(\"[{}] \u5356\u51fa\u6210\u529f\".format(order_id)) def dt_to_int(dt): return dt.year * 10000 + dt.month * 100 + dt.day def after_trading(context): df = context.used_df[dt_to_int(context.now) == context.used_df.trading_dt] if df.empty: return else: for _, item in df.iterrows(): context.buy_queen.append(item[\"order_book_id\"]) if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u6301\u6709\u4e00\u5929\u5c31\u5356\u51fa \u6301\u67093\u5929\u5e76\u4ef7\u683c\u9ad8\u4e8e\u6301\u4ed3\u4ef7\u5219\u5356\u51fa \u7ed3\u8bba\uff1a\u8fd8\u597d\u8dd1\u4e86\u56de\u653e\u6d4b\u8bd5\uff0c\u4e0d\u7136\u5f97\u6559\u597d\u591a\u5b66\u8d39\u3002 \u68c0\u6d4b\u884c\u4e1a\u56e0\u5b50\u666e\u904d(90%)\u4e00\u5468\u5185\u4e0a\u6da8\u7684\u4f4e\u4ef7\u80a1\u7968 \u00b6 \u8fd9\u4e2a\u4e5f\u662f\u6211\u5728\u4e0a\u73ed\u7684\u65f6\u5019\u5076\u5c14\u80fd\u60f3\u5230\u7684\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u4e5f\u4ee3\u8868\u4e00\u5206\u90e8\u5206\u4eba\u7684\u60f3\u6cd5\uff0c \u67d0\u4e2a\u884c\u4e1a\u5e02\u573a\u6da8\u5e45\u7684\u65f6\u5019\uff0c\u5fc5\u5b9a\u662f\u5168\u884c\u4e1a\u6027\u8d28\u7684\uff0c\u4e14\u4f1a\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u3002 \u4e8e\u662f\u6211\u5c31\u5199\u4e86\u8fd9\u4e2a\uff0c\u6839\u636e\u80a1\u7968\u884c\u4e1a\u66b4\u9732\u5ea6\uff08\u5c5e\u4e8e\u54ea\u4e2a\u884c\u4e1a\uff09\uff0c\u5206\u7c7b\u884c\u4e1a\uff0c\u5982\u679c\u90fd\u6da8\u4e86\uff0c\u5c31\u4e70\u8fdb\uff0c\u5982\u679c\u90fd\u8dcc\u4e86\uff0c\u5c31\u5356\u51fa\u3002 \u68c0\u6d4b\u884c\u4e1a\u56e0\u5b50\u666e\u904d(90%)\u4e00\u5468\u5185\u4e0a\u6da8\u7684\u4f4e\u4ef7\u80a1\u7968 \u8d2d\u4e70\u5e76\u6301\u6709 \u5728\u884c\u4e1a\u4e0b\u8dcc\u5728 30% \u5de6\u53f3\u5356\u51fa \u4ee3\u7801\u5982\u4e0b: #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py from collections import defaultdict from pprint import pprint import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def get_holding_ticker(): # \u8bf7\u53bb\u7c73\u7b50\u8d2d\u4e70\u6216\u7533\u8bf7\u8bd5\u7528 RQData : www.ricequant.com rqdatac.init() df = rqdatac.get_factor_exposure(rqdatac.all_instruments(\"Stock\").order_book_id, \"20190101\", \"20191231\") df.reset_index().sort_values(\"date\").to_csv(\"factor_exposure.csv\", index=False) def init(context): df = pandas.read_csv(\"factor_exposure.csv\") all_order_book_id = all_instruments().order_book_id.to_list() context.df = df[df[\"order_book_id\"].isin(all_order_book_id)] context.buy_map = defaultdict(list) context.holding_map = defaultdict(list) context.sell_factors = [] context.day_count = 0 context.sell_multiple = 1.2 def before_trading(context): pprint(\"\u5f53\u65e5\u8d2d\u4e70\u884c\u4e1a:{}\".format(context.buy_map)) print(\"\u5f53\u65e5\u6301\u4ed3:{}\".format([i.order_book_id for i in get_positions()])) print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) def handle_bar(context, bar_dict): # buy for factors, order_book_ids in context.buy_map.items(): if context.stock_account.cash < 2000: break for order_book_id in order_book_ids.copy(): o = order_value(order_book_id, 2000) if o: context.holding_map[factors].append(order_book_id) order_book_ids.remove(order_book_id) # sell for factors in context.sell_factors: for order_book_id in context.holding_map[factors].copy(): # a = bar_dict[order_book_id].close > get_position(order_book_id).avg_price * context.sell_multiple a = True if a: o = order_percent(order_book_id, -1) if o: context.holding_map[factors].remove(order_book_id) def dt_to_str(dt): return \"{}-{}-{}\".format(dt.year, dt.month, dt.day) def is_rise(order_book_id): a, b = history_bars(order_book_id, 2, frequency=\"1d\", fields='close') return b > a def after_trading(context): context.day_count += 1 if context.day_count % 5 != 1: return df = context.df[context.now.date().isoformat() == context.df.date].copy() df.loc[:, 'rose'] = df[\"order_book_id\"].apply(is_rise) df.loc[:, 'close'] = df[\"order_book_id\"].apply(lambda x: history_bars(x, 1, frequency=\"1d\", fields='close')) context.sell_factors = [] context.buy_map = defaultdict(list) for factors in df.columns[13:-2]: _df = df[df[factors] == 1] if _df['rose'].sum() / _df['order_book_id'].size > 0.9: context.buy_map[factors] = _df[(_df[\"close\"] > 5) & (_df[\"close\"] < 6)].sort_values('close')[ 'order_book_id'].to_list()[:2] elif _df['rose'].sum() / _df['order_book_id'].size < 0.3: context.sell_factors.append(factors) del df if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u5404\u884c\u4e1a\u4e24\u53ea\u80a1\u7968 emmm\uff0c\u4e0d\u8bf4\u4e86\uff0c\u90fd\u662f\u78ca\u3002 \u666e\u901amacd\u5747\u7ebf\u7b56\u7565 \u00b6 \u8fd9\u4e2a\u662f\u7c73\u7b50\u5b98\u7f51\u7684\u9ed8\u8ba4\u7b56\u7565 from collections import defaultdict from pprint import pprint import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } import talib def init(context): context.s1 = '000300.XSHG' context.SHORTPERIOD = 12 context.LONGPERIOD = 26 context.SMOOTHPERIOD = 9 context.OBSERVATION = 100 subscribe(context.s1) def before_trading(context): pass def handle_bar(context, bar_dict): closes = history_bars(context.s1, context.OBSERVATION, '1d', 'close') diff, signal, _ = talib.MACD(closes) if diff[-1] > signal[-1] and diff[-2] < signal[-2]: order_target_percent(context.s1, 1) if diff[-1] < signal[-1] and diff[-2] > signal[-2]: order_target_percent(context.s1, 0) def after_trading(context): pass if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u8fd9\u4e2a\u662f\u6839\u636e\u5927\u4f6c\u7684\u4ee3\u7801\u6284\u7684\u3002\u5176\u5b9e\u6570\u636e\u8fd8\u884c\uff0c\u867d\u7136\u6ca1\u8dd1\u8d62\u6caa\u6df1\u4e09\u767e\uff0c\u4f46\u662f\u786e\u5b9e\u8d5a\u94b1\u4e86\uff0c\u8d34\u4e00\u4e0b \u6e90\u5730\u5740 ,\u5927\u4f6c\u8bf4\u6709\u4e00\u90e8\u5206\u5de7\u5408\u5728\u91cc\u9762\u3002\u4e0d\u591a\u8bf4\u4e86\u3002 \u6211\u7ed3\u5408\u4e0b\u53ea\u4e70\u4e94\u5757\u94b1\u7684\u60c5\u51b5 #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } import talib def init(context): context.s1 = '000300.XSHG' context.SHORTPERIOD = 12 context.LONGPERIOD = 26 context.SMOOTHPERIOD = 9 context.OBSERVATION = 100 subscribe(context.s1) context.lowest = 5 context.highest = 6 context.order_ticker = [] def _history_bar_for_all_ins(x): bar = history_bars(x, 1, \"1d\", fields=['close']) if not bar: return numpy.nan if bar[0]: return bar[0][0] return numpy.nan def get_ticker(context): all_ins = all_instruments(\"Stock\").order_book_id.to_list() df = pandas.DataFrame(all_ins, columns=['order_book_id']) df['close'] = df.order_book_id.apply(_history_bar_for_all_ins) price_df = df[(context.lowest <= df.close) & (df.close <= context.highest)] order_ticker = [] for order_book_id in price_df.order_book_id.to_list(): c = pandas.Series(i[0] for i in history_bars(order_book_id, 3, \"1d\", fields=['close'])) if (c.shift(fill_value=0) < c).all(): order_ticker.append(order_book_id) return order_ticker def before_trading(context): print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) def handle_bar(context, bar_dict): closes = history_bars(context.s1, context.OBSERVATION, '1d', 'close') diff, signal, _ = talib.MACD(closes) if diff[-1] > signal[-1] and diff[-2] < signal[-2] : if context.stock_account.cash > 1000: context.order_ticker = get_ticker(context) for item in context.order_ticker: o = order_target_value(item, 2000) if o: print(o) print(\"context.order_ticker\", context.order_ticker) if diff[-1] < signal[-1] and diff[-2] > signal[-2]: for item in context.portfolio.positions.keys(): order_target_percent(item, 0) def after_trading(context): context.order_ticker = [] if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u8fd8\u4e0d\u5982\u76f4\u63a5\u4e70\u534e\u590f\u56fd\u8fd0\u6caa\u6df1\u4e09\u767e\u3002 \u670b\u53cb\u60f3\u6cd5A \u00b6 \u8bd5\u8bd5\u670b\u53cb\u7684\u60f3\u6cd5 \u5047\u5982\u8bbe\u7f6e\u4e00\u4e2a\u5747\u503c\uff08\u4e00\u76f4\u5728\u53d8\uff09\uff0c\u4f4e\u4e8e0.8\u500d\u5747\u503c\uff08mean_coe\uff09\uff0c\u5e76\u4e14\u8fde\u7eedfall_days\u5929\uff0c\u8dcc\u5e45\u52a0\u8d77\u6765\u8fbe\u5230fall_x%\uff0c\u4e70\u5165 \u9ad8\u4e8e\u4e70\u5165\u4ef7\u683c\uff0c\u5e76\u4e14\u8fde\u7eedrise_days\u5929\uff0c\u6da8\u5e45\u52a0\u8d77\u6765\u8fbe\u5230rise_x%\uff0c\u5356\u51fa \u6211\u5f00\u59cb\u7b80\u5355\u7684\u8bbe\u7f6e\u4e86\u51e0\u4e2a\u53c2\u6570\uff0c\u53d1\u73b0\u7ed3\u679c\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u4f46\u662f\u6ca1\u4e8f\uff0c\u6211\u5c31\u60f3\u53ef\u80fd\u662f\u53c2\u6570\u7684\u95ee\u9898\uff0c\u7136\u540e\u5217\u51fa\u4e86\u4e2a\u96c6\u5408\uff0c\u60f3\u7740\u518d\u8dd1\u8dd1\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com import itertools import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def init(context): context.mean_coe = 0.8 context.mean_days = 244 context.rise_days = context.config.extra.rise_days context.fall_days = context.config.extra.fall_days context.rise_x = context.config.extra.rise_x context.fall_x = context.config.extra.fall_x context.order_ticker = [ \"002111.XSHE\", # \u5a01\u6d77\u5e7f\u6cf0 \"002673.XSHE\", # \u897f\u90e8\u8bc1\u5238 \"601375.XSHG\", # \u4e2d\u539f\u8bc1\u5238 ] df = all_instruments('CS') df = df[df.listed_date.apply(lambda x: x.year in [2015, 2016, 2017])] context.order_ticker = context.order_ticker + df.order_book_id.to_list() def before_trading(context): print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) # \u4ef7\u683c\u5747\u503c context.mean_close = {} for order_book_id in context.order_ticker: bars = pandas.Series([i[0] for i in history_bars(order_book_id, context.mean_days, \"1d\", fields=['close'])]) context.mean_close[order_book_id] = bars.mean() def handle_bar(context, bar_dict): # for buy if context.stock_account.cash >= 5000: for order_book_id in context.order_ticker: bar_close = bar_dict[order_book_id].close if bar_close < (context.mean_close[order_book_id] * context.mean_coe): _str = \"\" bars = pandas.Series( [i[0] for i in history_bars(order_book_id, context.fall_days, \"1d\", fields=['close'])]) _str += \"\\n\" + f\"[{order_book_id}]\u4ef7\u683c({bar_close})\u4f4e\u4e8e\u4e00\u5e74\u5e73\u5747\u4ef7{context.mean_close[order_book_id]}\" if not (bars.shift(-1, fill_value=0) < bars).all(): # \u5224\u65ad\u8fde\u8dcc continue _str += \"\\n\" + f\"[{order_book_id}]\u8fde\u8dcc \u4ef7\u683c\u8868\u73b0\u4e3a{list(bars)}\" if not (bars[0] * context.fall_x > bar_close): # \u5224\u65ad\u8dcc\u5e45 # \u975e\u4f4e\u4e8e0.8\u500d\u5747\u503c\uff08mean_coe\uff09 continue _str += \"\\n\" + f\"[{order_book_id}]\u8dcc\u5e45\u8d85\u8fc7{context.fall_x}, {bars[0]} - {bar_close}\" o = order_value(order_book_id, 5000) if o: _str += \"\\n\" + f\"[{order_book_id}]\u4e70\u5165\".format(order_book_id) print(_str) # for sell for order_book_id in context.order_ticker: position = context.portfolio.positions[order_book_id] bar_close = bar_dict[order_book_id].close if position is None or position.quantity <= 0: continue if position.avg_price < bar_close: # \u4f4e\u4e8e\u4e70\u5165\u4ef7\u683c \u4e0d\u505a\u64cd\u4f5c continue _str = \"\" bars = pandas.Series([i[0] for i in history_bars(order_book_id, context.fall_days, \"1d\", fields=['close'])]) if not (bars.shift(1, fill_value=0) < bars).all(): # \u5e76\u4e14\u8fde\u7eedrise_days\u5929 continue _str += \"\\n\" + f\"[{order_book_id}]\u8fde\u6da8 \u4ef7\u683c\u8868\u73b0\u4e3a{list(bars)}\" if not (bars[0] * context.rise_x < bar_close): # \u6da8\u5e45\u52a0\u8d77\u6765\u8fbe\u5230rise_x% continue _str += \"\\n\" + f\"[{order_book_id}]\u6da8\u5e45\u8d85\u8fc7{context.rise_x}, {bars[0]} - {bar_close}\" o = order_target_percent(order_book_id, 0) if o: _str += \"\\n\" + f\"[{order_book_id}]\u51fa\u552e\".format(order_book_id) print(_str) def after_trading(context): pass import rqalpha rise_days = range(3, 10) fall_days = range(3, 10) rise_x = numpy.arange(1.06, 1.12, 0.01) fall_x = numpy.arange(0.9, 0.94, 0.01) config_map = itertools.product(rise_days, fall_days, rise_x, fall_x) df = pandas.DataFrame(config_map, columns=[\"rise_days\", \"fall_days\", \"rise_x\", \"fall_x\", ]) result_list = [] for _, item in df.iterrows(): __config__['extra']['rise_days'] = int(item.rise_days) __config__['extra']['fall_days'] = int(item.fall_days) __config__['extra']['rise_x'] = item.rise_x __config__['extra']['fall_x'] = item.fall_x result = rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) total_returns = result['sys_analyser']['summary']['total_value'] result_list.append(result) \u5176\u5b9e\u8dd1\u51fa\u4e86\u51e0\u4e2a\u8d85\u8fc7\u5927\u76d8\u6536\u76ca\u7684\u7ed3\u679c\u3002\u4f46\u662f\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u6c34\u5e73\u95ee\u9898\uff0c\u62a5\u9519\u4e86\uff0c\u7ed3\u679c\u4e5f\u6ca1\u4fdd\u5b58\uff0c\u8fd1\u671f\u6211\u4f1a\u53bb\u5427\u8fd9\u4e2a\u8dd1\u5b8c\uff081300\u591a\u7684\u7ec4\u5408\u65b9\u5f0f\uff09\uff0c\u6709\u7ed3\u679c\u4e86\u6211\u4f1a\u8d34\u4e0a\u6700\u4f18\u89e3\u7684\u3002 \u603b\u7ed3 \u00b6 \u6211\u8fd8\u662f\u4e0d\u5728\u80a1\u7968\u5e02\u573a\u91cc\u5f53\u97ed\u83dc\u4e86 \u6e9c\u4e86\u6e9c\u4e86","title":"\u97ed\u83dc\u7684\u80a1\u5e02\u7814\u7a76"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#_1","text":"","title":"\u97ed\u83dc\u7684\u80a1\u5e02\u7814\u7a76"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#_2","text":"\u901a\u8fc7 \u7c73\u7b50 \u7f51\u7ad9\u63d0\u4f9b\u7684\u91cf\u5316\u5e73\u53f0\u8fdb\u884c\u7684\u6d4b\u8bd5\u3002 \u505a\u8fd9\u4e2a\u7814\u7a76\u7684\u521d\u8877\u662f\u7b14\u8005\u6709\u4e00\u70b9\u610f\u8c61\u6295\u8d44\u80a1\u5e02\uff0c\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u6295\u8d44\u65b9\u6848\uff08\u7b56\u7565\uff09\uff0c\u6211\u60f3\u5148\u62ff19\u5e74\u7684\u6570\u636e\u8dd1\u4e00\u8dd1\u6211\u7684\u65b9\u6848\uff08\u7b56\u7565\uff09\uff0c\u5982\u679c\u4e8f\u94b1\u4e86\uff0c\u5c31\u4e0d\u73a9\u80a1\u5e02\uff0c\u8001\u8001\u5b9e\u5b9e\u73a9\u57fa\u91d1\u4e86\u3002","title":"\u5199\u5728\u524d\u9762\u7684\u8bdd"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#_3","text":"\u9996\u5148\u80fd\u770b\u5230\u65f6\u95f4\uff0c\u6211\u7684\u6570\u636e\u662f\u4ece 2019\u5e7401 -- 2020\u5e7401 , \u7ea2\u8272\u7684\u7ebf\u4ee3\u8868\u8d26\u6237\u5e02\u503c\uff08\u628a\u80a1\u7968\u6301\u4ed3\u4e5f\u6362\u7b97\u6210\u94b1\uff09\u7684\u53d8\u5316\u3002 \u84dd\u8272\u7684\u7ebf\u4ee3\u8868\u57fa\u51c6\uff08\u6caa\u6df1\u4e09\u767e\uff09\u7684\u5e02\u503c\u53d8\u5316\u3002 \u5176\u6b21\u6700\u91cd\u8981\u7684\u6307\u6807\uff0c \u56de\u6d4b\u6536\u76ca \uff0c\u8868\u793a\u7684\u662f\u6211\u672c\u91d1\u5230\u65f6\u95f4\u7ed3\u675f\uff0c\u6da8\u4e86\u591a\u5c11\uff0c\u6bd4\u5982\u6211\u67095w\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\u8868\u793a\u6211\u5e74\u672b\u7ed3\u675f\u6da8\u5230\u4e86 5*(0.09+1) = 5.45(\u4e07\u5143) \u3002 \u7136\u540e\u5e73\u5747\u4e00\u5e74\u80fd\u670913.5%\u7684\u6536\u76ca\u3002 \u7136\u540e\u770b \u57fa\u51c6\u6536\u76ca ,\u8fd9\u4e2a\u6211\u4e00\u822c\u8bbe\u7f6e\u7684\u662f\u6caa\u6df1\u4e09\u767e\uff0c\u4e5f\u5c31\u662f\u5927\u76d8\uff0c\u8fd9\u4e2a\u56fe\u8868\u793a19\u5e74\u5927\u76d8\u6da8\u4e86 30+% \uff0c\u800c\u6211\u7684\u7b56\u7565\u53ea\u6709 9+% \uff0c\u5176\u5b9e\u662f\u6ca1\u6709\u8dd1\u8d62\u5927\u76d8\u7684( \u8fd8\u4e0d\u5982\u4e70\u57fa\u91d1 )\u3002 \u7136\u540e\u9700\u8981\u6ce8\u610f\u4e0b\u4e00\u4e2a\u6307\u6807\u201dMaxDrawdown(\u6700\u5927\u56de\u6d4b)\u201d:\u6700\u5927\u56de\u64a4\u662f\u6700\u5e38\u7528\u7684\u6307\u6807\uff0c\u63cf\u8ff0\u4e86\u6295\u8d44\u8005\u53ef\u80fd\u9762\u4e34\u7684\u6700\u5927\u4e8f\u635f\u3002\u6700\u5927\u56de\u64a4\u7684\u6570\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u8d8a\u5927\u8bf4\u660e\u98ce\u9669\u8d8a\u5927\u3002 Sharpe(\u590f\u666e\u7387)\uff1a\u590f\u666e\u6bd4\u7387\u82e5\u4e3a\u6b63\u503c\uff0c\u4ee3\u8868\u57fa\u91d1\u62a5\u916c\u7387\u5927\u4e8e\u98ce\u9669\uff1b\u82e5\u4e3a\u8d1f\u503c\uff0c\u4ee3\u8868\u57fa\u91d1\u98ce\u9669\u5927\u4e8e\u62a5\u916c\u7387\u3002\u56e0\u6b64\uff0c\u590f\u666e\u6bd4\u7387\u8d8a\u9ad8\uff0c\u6295\u8d44\u7ec4\u5408\u8d8a\u4f73\u3002 \u597d\u4e86\uff0c\u4e0b\u9762\u5f00\u59cb\u6b63\u6587\u3002","title":"\u5173\u4e8e\u5982\u4f55\u8bfb\u8fd9\u4e2a\u56fe"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#x-3","text":"\u8fd9\u4e2a\u662f\u4e00\u4e2a\u666e\u904d\u7684\u8d2d\u4e70\u601d\u8def\uff0c\u89c9\u5f97\u5e95\u4ef7\u80a1\u7968\u4e00\u5b9a\u4f1a\u957f\uff0c\u6211\u77ed\u671f\u6301\u6709\u7136\u540e\u7b49\u4ed6\u9ad8\u4e8e\u67d0\u4e2a\u4ef7\u683c\u5c31\u51fa\u552e\uff0c\u6211\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u60c5\u51b5\uff0c\u4e0b\u9762\u662f\u4ee3\u7801: #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/18 14:32 # @author : zza # @Email : 740713651@qq.com import warnings import pandas import rqdatac __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 5000, } }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, } } def init(context): context.lowest = 5 context.highest = 5.9 context.day_count = 0 context.holding_days = 10 def get_ticker(context): all_ins = rqdatac.all_instruments(\"Stock\").order_book_id.to_list() price_df = rqdatac.get_price(all_ins, context.now, context.now, expect_df=True, fields=['close']) price_df = price_df.reset_index(drop=False) price_df = price_df[(context.lowest <= price_df.close) & (price_df.close <= context.highest)] start_date = rqdatac.get_previous_trading_date(context.now, 2) price_df_2 = rqdatac.get_price(price_df.order_book_id.to_list(), start_date, context.now, expect_df=True, fields=['close']).reset_index(drop=False) order_ticker = [] for order_book_id, data_df in price_df_2.groupby(price_df_2.order_book_id): if (data_df.close.shift(fill_value=0) < data_df.close).all(): order_ticker.append(order_book_id) return order_ticker def before_trading(context): context.day_count += 1 if (context.day_count - 1) % context.holding_days == 0: context.order_ticker = get_ticker(context) def handle_bar(context, bar_dict): if (context.day_count - 1) % context.holding_days == 0: with warnings.catch_warnings(): for item in context.order_ticker: o = order_target_value(item, 1000) if o: print(o) if (context.day_count - 1) % context.holding_days == (context.holding_days-1): for item in context.portfolio.positions.keys(): order_target_value(item, 0) def after_trading(context): print(\"total_value {}\".format(context.portfolio.total_value)) if (context.day_count - 1) % 15 == 0: items = [] for k, v in context.portfolio.positions.items(): items.append({\"order_book_id\": k, \"quantity\": v.quantity}) print(pandas.DataFrame(items)) if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u6301\u67093\u4e2a\u4ea4\u6613\u65e5 \u6301\u670910\u4e2a\u4ea4\u6613\u65e5 \u6301\u670915\u4e2a\u4ea4\u6613\u65e5 \u7ed3\u8bba\uff1a\u5e95\u4ef7\u80a1\u7968\u786e\u5b9e\u4f1a\u968f\u7740\u5927\u76d8\u7684\u6da8\u800c\u6709\u4e00\u5b9a\u7684\u6ce2\u52a8\uff0c\u4f46\u6700\u7ec8\u90fd\u662f\u4f1a\u8d54\u94b1\u7684\uff0c\u4e14\u4e09\u4e2a\u4ea4\u6613\u7684\u65e5\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8d54\u94b1\u4e86\u3002\u8fd9\u4e2a\u56fe\u53ef\u4ee5\u7ed9\u5e7f\u5927\u8bfb\u8005\u7684\u4fdd\u4f51\u4fa5\u5e78\u5fc3\u91cc\u7684\u670b\u53cb\u770b\u770b\uff0c \u4e00\u5e74\u5fd9\u5230\u5934\uff0c\u4e0d\u5982\u4e70\u56fd\u8fd0\uff08\u6caa\u6df1\u4e09\u767e\uff09\u3002","title":"\u68c0\u6d4b\u4f4e\u4e8e x \u5143\u7684 \u80a1\u7968 \uff0c\u8d2d\u4e70\u5e76\u6301\u67093\u4e2a\u793c\u62dc\u540e\u629b\u51fa"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#_4","text":"\u8fd9\u4e2a\u662f\u6839\u636e\u6211\u4e00\u4e2a\u670b\u53cb\u8dd1\u7684\u7b97\u6cd5\u8dd1\u51fa\u6765\u7684\u53ef\u80fd\u4f1a\u6da8\u7684\u6982\u7387\u3002\u7b14\u8005\u62ff\u5230\u4e86\u4ed6\u4e00\u5e74\u7684\u6570\u636e\uff08\u6ca1\u7528\u722c\u866b\uff09\uff0c\u7136\u540e\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u6da8\uff0c\u8fd9\u4e48\u8dd1\u7684\u539f\u56e0\u662f\uff0c\u6211\u5f53\u521d\u786e\u5b9e\u60f3\u6309\u7740\u4ed6\u7684\u8fd9\u4e2a\u516c\u4f17\u53f7\u6765\u4e70\uff0c\u4e0d\u8fc7\u65e2\u7136\u6709\u56de\u653e\u6570\u636e\u6d4b\u8bd5\uff0c\u6211\u5f53\u7136\u5148\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u672c\u91d1\u672c\u6765\u5c31\u4e0d\u591a\uff0c\u6325\u970d\u4e0d\u4e86\uff0c\u4e0d\u6562\u968f\u4fbf\u6559\u5b66\u8d39\u3002 \u7b56\u7565\u5982\u4e0b\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py import warnings import numpy import pandas import rqdatac from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 5000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def init(context): context.df = pandas.read_csv(\"\u53d1\u5c0f\u8d22.csv\", dtype={\"\u80a1\u7968\u4ee3\u7801\": numpy.str}) context.df['order_book_id'] = rqdatac.id_convert(context.df[\"\u80a1\u7968\u4ee3\u7801\"].to_list()) context.used_df = context.df[context.df[\"\u9884\u6d4b\u7ed3\u679c\"] > 0.7] context.sell_multiple = 1.08 context.holding_days = 1 context.buy_queen = [] context.sell_map = {} def before_trading(context): print(\"\u5f53\u65e5\u8d2d\u4e70:{}\".format(context.buy_queen)) print(\"\u5f53\u65e5\u6301\u4ed3:{}\".format(list(context.sell_map.keys()))) def handle_bar(context, bar_dict): while context.buy_queen: order_book_id = context.buy_queen.pop() if context.stock_account.cash > 1000: o = order_value(order_book_id, 1000) if o: trading_dt = get_next_trading_date(context.now, context.holding_days).to_pydatetime() context.sell_map[order_book_id] = trading_dt print(\"[{}] \u8d2d\u4e70\u6210\u529f\".format(order_book_id)) else: print(\"[{}]\u8d44\u91d1\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8d2d\u4e70\".format(order_book_id)) for order_id, dt in context.sell_map.copy().items(): a = dt.date() <= context.now.date() b = bar_dict[order_id].close > get_position(order_id).avg_price # * context.sell_multiple if a and b: o = order_percent(order_id, -1) if o: del context.sell_map[order_id] print(\"[{}] \u5356\u51fa\u6210\u529f\".format(order_id)) def dt_to_int(dt): return dt.year * 10000 + dt.month * 100 + dt.day def after_trading(context): df = context.used_df[dt_to_int(context.now) == context.used_df.trading_dt] if df.empty: return else: for _, item in df.iterrows(): context.buy_queen.append(item[\"order_book_id\"]) if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u6301\u6709\u4e00\u5929\u5c31\u5356\u51fa \u6301\u67093\u5929\u5e76\u4ef7\u683c\u9ad8\u4e8e\u6301\u4ed3\u4ef7\u5219\u5356\u51fa \u7ed3\u8bba\uff1a\u8fd8\u597d\u8dd1\u4e86\u56de\u653e\u6d4b\u8bd5\uff0c\u4e0d\u7136\u5f97\u6559\u597d\u591a\u5b66\u8d39\u3002","title":"\u6839\u636e\u516c\u4f17\u53f7 \u95f7\u58f0\u53d1\u5c0f\u8d22"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#90","text":"\u8fd9\u4e2a\u4e5f\u662f\u6211\u5728\u4e0a\u73ed\u7684\u65f6\u5019\u5076\u5c14\u80fd\u60f3\u5230\u7684\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u4e5f\u4ee3\u8868\u4e00\u5206\u90e8\u5206\u4eba\u7684\u60f3\u6cd5\uff0c \u67d0\u4e2a\u884c\u4e1a\u5e02\u573a\u6da8\u5e45\u7684\u65f6\u5019\uff0c\u5fc5\u5b9a\u662f\u5168\u884c\u4e1a\u6027\u8d28\u7684\uff0c\u4e14\u4f1a\u6301\u7eed\u4e00\u6bb5\u65f6\u95f4\u3002 \u4e8e\u662f\u6211\u5c31\u5199\u4e86\u8fd9\u4e2a\uff0c\u6839\u636e\u80a1\u7968\u884c\u4e1a\u66b4\u9732\u5ea6\uff08\u5c5e\u4e8e\u54ea\u4e2a\u884c\u4e1a\uff09\uff0c\u5206\u7c7b\u884c\u4e1a\uff0c\u5982\u679c\u90fd\u6da8\u4e86\uff0c\u5c31\u4e70\u8fdb\uff0c\u5982\u679c\u90fd\u8dcc\u4e86\uff0c\u5c31\u5356\u51fa\u3002 \u68c0\u6d4b\u884c\u4e1a\u56e0\u5b50\u666e\u904d(90%)\u4e00\u5468\u5185\u4e0a\u6da8\u7684\u4f4e\u4ef7\u80a1\u7968 \u8d2d\u4e70\u5e76\u6301\u6709 \u5728\u884c\u4e1a\u4e0b\u8dcc\u5728 30% \u5de6\u53f3\u5356\u51fa \u4ee3\u7801\u5982\u4e0b: #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py from collections import defaultdict from pprint import pprint import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def get_holding_ticker(): # \u8bf7\u53bb\u7c73\u7b50\u8d2d\u4e70\u6216\u7533\u8bf7\u8bd5\u7528 RQData : www.ricequant.com rqdatac.init() df = rqdatac.get_factor_exposure(rqdatac.all_instruments(\"Stock\").order_book_id, \"20190101\", \"20191231\") df.reset_index().sort_values(\"date\").to_csv(\"factor_exposure.csv\", index=False) def init(context): df = pandas.read_csv(\"factor_exposure.csv\") all_order_book_id = all_instruments().order_book_id.to_list() context.df = df[df[\"order_book_id\"].isin(all_order_book_id)] context.buy_map = defaultdict(list) context.holding_map = defaultdict(list) context.sell_factors = [] context.day_count = 0 context.sell_multiple = 1.2 def before_trading(context): pprint(\"\u5f53\u65e5\u8d2d\u4e70\u884c\u4e1a:{}\".format(context.buy_map)) print(\"\u5f53\u65e5\u6301\u4ed3:{}\".format([i.order_book_id for i in get_positions()])) print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) def handle_bar(context, bar_dict): # buy for factors, order_book_ids in context.buy_map.items(): if context.stock_account.cash < 2000: break for order_book_id in order_book_ids.copy(): o = order_value(order_book_id, 2000) if o: context.holding_map[factors].append(order_book_id) order_book_ids.remove(order_book_id) # sell for factors in context.sell_factors: for order_book_id in context.holding_map[factors].copy(): # a = bar_dict[order_book_id].close > get_position(order_book_id).avg_price * context.sell_multiple a = True if a: o = order_percent(order_book_id, -1) if o: context.holding_map[factors].remove(order_book_id) def dt_to_str(dt): return \"{}-{}-{}\".format(dt.year, dt.month, dt.day) def is_rise(order_book_id): a, b = history_bars(order_book_id, 2, frequency=\"1d\", fields='close') return b > a def after_trading(context): context.day_count += 1 if context.day_count % 5 != 1: return df = context.df[context.now.date().isoformat() == context.df.date].copy() df.loc[:, 'rose'] = df[\"order_book_id\"].apply(is_rise) df.loc[:, 'close'] = df[\"order_book_id\"].apply(lambda x: history_bars(x, 1, frequency=\"1d\", fields='close')) context.sell_factors = [] context.buy_map = defaultdict(list) for factors in df.columns[13:-2]: _df = df[df[factors] == 1] if _df['rose'].sum() / _df['order_book_id'].size > 0.9: context.buy_map[factors] = _df[(_df[\"close\"] > 5) & (_df[\"close\"] < 6)].sort_values('close')[ 'order_book_id'].to_list()[:2] elif _df['rose'].sum() / _df['order_book_id'].size < 0.3: context.sell_factors.append(factors) del df if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u5404\u884c\u4e1a\u4e24\u53ea\u80a1\u7968 emmm\uff0c\u4e0d\u8bf4\u4e86\uff0c\u90fd\u662f\u78ca\u3002","title":"\u68c0\u6d4b\u884c\u4e1a\u56e0\u5b50\u666e\u904d(90%)\u4e00\u5468\u5185\u4e0a\u6da8\u7684\u4f4e\u4ef7\u80a1\u7968"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#macd","text":"\u8fd9\u4e2a\u662f\u7c73\u7b50\u5b98\u7f51\u7684\u9ed8\u8ba4\u7b56\u7565 from collections import defaultdict from pprint import pprint import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } import talib def init(context): context.s1 = '000300.XSHG' context.SHORTPERIOD = 12 context.LONGPERIOD = 26 context.SMOOTHPERIOD = 9 context.OBSERVATION = 100 subscribe(context.s1) def before_trading(context): pass def handle_bar(context, bar_dict): closes = history_bars(context.s1, context.OBSERVATION, '1d', 'close') diff, signal, _ = talib.MACD(closes) if diff[-1] > signal[-1] and diff[-2] < signal[-2]: order_target_percent(context.s1, 1) if diff[-1] < signal[-1] and diff[-2] > signal[-2]: order_target_percent(context.s1, 0) def after_trading(context): pass if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u8fd9\u4e2a\u662f\u6839\u636e\u5927\u4f6c\u7684\u4ee3\u7801\u6284\u7684\u3002\u5176\u5b9e\u6570\u636e\u8fd8\u884c\uff0c\u867d\u7136\u6ca1\u8dd1\u8d62\u6caa\u6df1\u4e09\u767e\uff0c\u4f46\u662f\u786e\u5b9e\u8d5a\u94b1\u4e86\uff0c\u8d34\u4e00\u4e0b \u6e90\u5730\u5740 ,\u5927\u4f6c\u8bf4\u6709\u4e00\u90e8\u5206\u5de7\u5408\u5728\u91cc\u9762\u3002\u4e0d\u591a\u8bf4\u4e86\u3002 \u6211\u7ed3\u5408\u4e0b\u53ea\u4e70\u4e94\u5757\u94b1\u7684\u60c5\u51b5 #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com # @File : \u95f7\u58f0\u53d1\u5c0f\u8d22.py import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } import talib def init(context): context.s1 = '000300.XSHG' context.SHORTPERIOD = 12 context.LONGPERIOD = 26 context.SMOOTHPERIOD = 9 context.OBSERVATION = 100 subscribe(context.s1) context.lowest = 5 context.highest = 6 context.order_ticker = [] def _history_bar_for_all_ins(x): bar = history_bars(x, 1, \"1d\", fields=['close']) if not bar: return numpy.nan if bar[0]: return bar[0][0] return numpy.nan def get_ticker(context): all_ins = all_instruments(\"Stock\").order_book_id.to_list() df = pandas.DataFrame(all_ins, columns=['order_book_id']) df['close'] = df.order_book_id.apply(_history_bar_for_all_ins) price_df = df[(context.lowest <= df.close) & (df.close <= context.highest)] order_ticker = [] for order_book_id in price_df.order_book_id.to_list(): c = pandas.Series(i[0] for i in history_bars(order_book_id, 3, \"1d\", fields=['close'])) if (c.shift(fill_value=0) < c).all(): order_ticker.append(order_book_id) return order_ticker def before_trading(context): print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) def handle_bar(context, bar_dict): closes = history_bars(context.s1, context.OBSERVATION, '1d', 'close') diff, signal, _ = talib.MACD(closes) if diff[-1] > signal[-1] and diff[-2] < signal[-2] : if context.stock_account.cash > 1000: context.order_ticker = get_ticker(context) for item in context.order_ticker: o = order_target_value(item, 2000) if o: print(o) print(\"context.order_ticker\", context.order_ticker) if diff[-1] < signal[-1] and diff[-2] > signal[-2]: for item in context.portfolio.positions.keys(): order_target_percent(item, 0) def after_trading(context): context.order_ticker = [] if __name__ == '__main__': import rqalpha rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) \u8fd8\u4e0d\u5982\u76f4\u63a5\u4e70\u534e\u590f\u56fd\u8fd0\u6caa\u6df1\u4e09\u767e\u3002","title":"\u666e\u901amacd\u5747\u7ebf\u7b56\u7565"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#a","text":"\u8bd5\u8bd5\u670b\u53cb\u7684\u60f3\u6cd5 \u5047\u5982\u8bbe\u7f6e\u4e00\u4e2a\u5747\u503c\uff08\u4e00\u76f4\u5728\u53d8\uff09\uff0c\u4f4e\u4e8e0.8\u500d\u5747\u503c\uff08mean_coe\uff09\uff0c\u5e76\u4e14\u8fde\u7eedfall_days\u5929\uff0c\u8dcc\u5e45\u52a0\u8d77\u6765\u8fbe\u5230fall_x%\uff0c\u4e70\u5165 \u9ad8\u4e8e\u4e70\u5165\u4ef7\u683c\uff0c\u5e76\u4e14\u8fde\u7eedrise_days\u5929\uff0c\u6da8\u5e45\u52a0\u8d77\u6765\u8fbe\u5230rise_x%\uff0c\u5356\u51fa \u6211\u5f00\u59cb\u7b80\u5355\u7684\u8bbe\u7f6e\u4e86\u51e0\u4e2a\u53c2\u6570\uff0c\u53d1\u73b0\u7ed3\u679c\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u4f46\u662f\u6ca1\u4e8f\uff0c\u6211\u5c31\u60f3\u53ef\u80fd\u662f\u53c2\u6570\u7684\u95ee\u9898\uff0c\u7136\u540e\u5217\u51fa\u4e86\u4e2a\u96c6\u5408\uff0c\u60f3\u7740\u518d\u8dd1\u8dd1\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a #!/usr/bin/python3 # encoding: utf-8 # @Time : 2020/11/22 16:33 # @author : zza # @Email : 740713651@qq.com import itertools import numpy import pandas from rqalpha.apis import * __config__ = { \"base\": { \"start_date\": \"20190101\", \"end_date\": \"20191231\", 'frequency': '1d', \"accounts\": { \"stock\": 50000, }, \"data_bundle_path\": r\"E:\\data\\bundle\", }, \"extra\": { \"log_level\": \"debug\", }, \"mod\": { \"sys_progress\": { \"enabled\": True, \"show\": True }, \"sys_accounts\": { \"enabled\": True, \"dividend_reinvestment\": True, }, \"sys_analyser\": { \"enabled\": True, \"plot\": True, 'benchmark': '000300.XSHG', }, }, } def init(context): context.mean_coe = 0.8 context.mean_days = 244 context.rise_days = context.config.extra.rise_days context.fall_days = context.config.extra.fall_days context.rise_x = context.config.extra.rise_x context.fall_x = context.config.extra.fall_x context.order_ticker = [ \"002111.XSHE\", # \u5a01\u6d77\u5e7f\u6cf0 \"002673.XSHE\", # \u897f\u90e8\u8bc1\u5238 \"601375.XSHG\", # \u4e2d\u539f\u8bc1\u5238 ] df = all_instruments('CS') df = df[df.listed_date.apply(lambda x: x.year in [2015, 2016, 2017])] context.order_ticker = context.order_ticker + df.order_book_id.to_list() def before_trading(context): print(\"\u5e74\u5316:{}\".format(context.portfolio.total_returns)) # \u4ef7\u683c\u5747\u503c context.mean_close = {} for order_book_id in context.order_ticker: bars = pandas.Series([i[0] for i in history_bars(order_book_id, context.mean_days, \"1d\", fields=['close'])]) context.mean_close[order_book_id] = bars.mean() def handle_bar(context, bar_dict): # for buy if context.stock_account.cash >= 5000: for order_book_id in context.order_ticker: bar_close = bar_dict[order_book_id].close if bar_close < (context.mean_close[order_book_id] * context.mean_coe): _str = \"\" bars = pandas.Series( [i[0] for i in history_bars(order_book_id, context.fall_days, \"1d\", fields=['close'])]) _str += \"\\n\" + f\"[{order_book_id}]\u4ef7\u683c({bar_close})\u4f4e\u4e8e\u4e00\u5e74\u5e73\u5747\u4ef7{context.mean_close[order_book_id]}\" if not (bars.shift(-1, fill_value=0) < bars).all(): # \u5224\u65ad\u8fde\u8dcc continue _str += \"\\n\" + f\"[{order_book_id}]\u8fde\u8dcc \u4ef7\u683c\u8868\u73b0\u4e3a{list(bars)}\" if not (bars[0] * context.fall_x > bar_close): # \u5224\u65ad\u8dcc\u5e45 # \u975e\u4f4e\u4e8e0.8\u500d\u5747\u503c\uff08mean_coe\uff09 continue _str += \"\\n\" + f\"[{order_book_id}]\u8dcc\u5e45\u8d85\u8fc7{context.fall_x}, {bars[0]} - {bar_close}\" o = order_value(order_book_id, 5000) if o: _str += \"\\n\" + f\"[{order_book_id}]\u4e70\u5165\".format(order_book_id) print(_str) # for sell for order_book_id in context.order_ticker: position = context.portfolio.positions[order_book_id] bar_close = bar_dict[order_book_id].close if position is None or position.quantity <= 0: continue if position.avg_price < bar_close: # \u4f4e\u4e8e\u4e70\u5165\u4ef7\u683c \u4e0d\u505a\u64cd\u4f5c continue _str = \"\" bars = pandas.Series([i[0] for i in history_bars(order_book_id, context.fall_days, \"1d\", fields=['close'])]) if not (bars.shift(1, fill_value=0) < bars).all(): # \u5e76\u4e14\u8fde\u7eedrise_days\u5929 continue _str += \"\\n\" + f\"[{order_book_id}]\u8fde\u6da8 \u4ef7\u683c\u8868\u73b0\u4e3a{list(bars)}\" if not (bars[0] * context.rise_x < bar_close): # \u6da8\u5e45\u52a0\u8d77\u6765\u8fbe\u5230rise_x% continue _str += \"\\n\" + f\"[{order_book_id}]\u6da8\u5e45\u8d85\u8fc7{context.rise_x}, {bars[0]} - {bar_close}\" o = order_target_percent(order_book_id, 0) if o: _str += \"\\n\" + f\"[{order_book_id}]\u51fa\u552e\".format(order_book_id) print(_str) def after_trading(context): pass import rqalpha rise_days = range(3, 10) fall_days = range(3, 10) rise_x = numpy.arange(1.06, 1.12, 0.01) fall_x = numpy.arange(0.9, 0.94, 0.01) config_map = itertools.product(rise_days, fall_days, rise_x, fall_x) df = pandas.DataFrame(config_map, columns=[\"rise_days\", \"fall_days\", \"rise_x\", \"fall_x\", ]) result_list = [] for _, item in df.iterrows(): __config__['extra']['rise_days'] = int(item.rise_days) __config__['extra']['fall_days'] = int(item.fall_days) __config__['extra']['rise_x'] = item.rise_x __config__['extra']['fall_x'] = item.fall_x result = rqalpha.run_func(init=init, before_trading=before_trading, handle_bar=handle_bar, after_trading=after_trading, config=__config__) total_returns = result['sys_analyser']['summary']['total_value'] result_list.append(result) \u5176\u5b9e\u8dd1\u51fa\u4e86\u51e0\u4e2a\u8d85\u8fc7\u5927\u76d8\u6536\u76ca\u7684\u7ed3\u679c\u3002\u4f46\u662f\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u6c34\u5e73\u95ee\u9898\uff0c\u62a5\u9519\u4e86\uff0c\u7ed3\u679c\u4e5f\u6ca1\u4fdd\u5b58\uff0c\u8fd1\u671f\u6211\u4f1a\u53bb\u5427\u8fd9\u4e2a\u8dd1\u5b8c\uff081300\u591a\u7684\u7ec4\u5408\u65b9\u5f0f\uff09\uff0c\u6709\u7ed3\u679c\u4e86\u6211\u4f1a\u8d34\u4e0a\u6700\u4f18\u89e3\u7684\u3002","title":"\u670b\u53cb\u60f3\u6cd5A"},{"location":"%E9%A1%B9%E7%9B%AE/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%82%A1%E5%B8%82%E7%A0%94%E7%A9%B6/#_5","text":"\u6211\u8fd8\u662f\u4e0d\u5728\u80a1\u7968\u5e02\u573a\u91cc\u5f53\u97ed\u83dc\u4e86 \u6e9c\u4e86\u6e9c\u4e86","title":"\u603b\u7ed3"}]}